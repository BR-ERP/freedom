/* Server Version: UI-V6.3.6.5026 Firebird 1.5.  ODS Version: 10.1. */
SET NAMES NONE;

SET SQL DIALECT 3;

--CONNECT 'localhost:/opt/firebird/dados/desenv/1.2.4.3/freedom.fdb' USER 'SYSDBA' PASSWORD 'masterkey' ROLE 'ADM';

SET AUTODDL ON;

/* Alter Field (Length): from 1024 to 10000... */
UPDATE RDB$FIELDS SET RDB$FIELD_LENGTH=10000, RDB$CHARACTER_LENGTH=10000
  WHERE RDB$FIELD_NAME=(SELECT RDB$FIELD_SOURCE FROM RDB$RELATION_FIELDS
  WHERE RDB$RELATION_NAME='CPCOMPRA' AND  RDB$FIELD_NAME='OBSERVACAO');

UPDATE RDB$FIELDS SET RDB$FIELD_LENGTH=9,RDB$CHARACTER_LENGTH=9,
 RDB$FIELD_TYPE=37
  WHERE RDB$FIELD_NAME=(SELECT RDB$FIELD_SOURCE FROM RDB$RELATION_FIELDS
  WHERE RDB$FIELD_NAME='SUFRAMAFOR' AND RDB$RELATION_NAME='CPFORNECED');

Update rdb$Relation_Fields set Rdb$Field_Source = 'NUMERICDN'
WHERE RDB$FIELD_NAME='PERCICMSITCOMPRA' AND RDB$RELATION_NAME='CPITCOMPRA';

Update rdb$Relation_Fields set Rdb$Field_Source = 'NUMERICDN'
WHERE RDB$FIELD_NAME='PERCIPIITCOMPRA' AND RDB$RELATION_NAME='CPITCOMPRA';

UPDATE RDB$FIELDS SET RDB$FIELD_LENGTH=10000,RDB$CHARACTER_LENGTH=10000,
 RDB$FIELD_TYPE=37
  WHERE RDB$FIELD_NAME=(SELECT RDB$FIELD_SOURCE FROM RDB$RELATION_FIELDS
  WHERE RDB$FIELD_NAME='IMPNOTAVENDA' AND RDB$RELATION_NAME='VDVENDA');


ALTER TABLE CPCOMPRA ADD INFCOMPL VARCHAR(10000);

Update Rdb$Relation_Fields set Rdb$Description =
'Informações complementares (interesse do fisco)'
where Rdb$Relation_Name='CPCOMPRA' and Rdb$Field_Name='INFCOMPL';

ALTER TABLE CPCOMPRA ADD NUMACDRAW VARCHAR(20);

Update Rdb$Relation_Fields set Rdb$Description =
'Número do ato concessório do regime drawback (importação)'
where Rdb$Relation_Name='CPCOMPRA' and Rdb$Field_Name='NUMACDRAW';

ALTER TABLE CPCOMPRA ADD TIPODOCIMP CHAR(1);

Update Rdb$Relation_Fields set Rdb$Description =
'Tipo de documento de importação:
0 - Declaração de importação
1 - Declaração simplificada de importação'
where Rdb$Relation_Name='CPCOMPRA' and Rdb$Field_Name='TIPODOCIMP';

ALTER TABLE CPCOMPRA ADD SITDOC CHAR(2);

Update Rdb$Relation_Fields set Rdb$Description =
'Situação do documento fiscal:
00-Documento regular;
01-Documento regular expontâneo;
02-Documento cancelado;
03-Documento cancelado expontâneo
04-NFE Denegada;
05-NFE Numeração inutilizada;
06-Documento fiscal complementar;
07-Documento fiscal complementar expontâneo;
08-Documento emitido com base em Regime Especial ou Norma Específica;'
where Rdb$Relation_Name='CPCOMPRA' and Rdb$Field_Name='SITDOC';

ALTER TABLE CPFORNECED ADD INSCCONREG VARCHAR(15);

Update Rdb$Relation_Fields set Rdb$Description =
'Inscrição no conselho regional (contabilidae, administração, medicina, etc..)'
where Rdb$Relation_Name='CPFORNECED' and Rdb$Field_Name='INSCCONREG';

ALTER TABLE CPFRETECP ADD VLRSEGFRETECP NUMERICDN;

Update Rdb$Relation_Fields set Rdb$Description =
'Valor do seguro no frete.'
where Rdb$Relation_Name='CPFRETECP' and Rdb$Field_Name='VLRSEGFRETECP';

ALTER TABLE EQTIPOMOV ADD CODEMPDF INTEGER;

Update Rdb$Relation_Fields set Rdb$Description =
'Codigo da empresa do modelo de documento fiscal.'
where Rdb$Relation_Name='EQTIPOMOV' and Rdb$Field_Name='CODEMPDF';

ALTER TABLE EQTIPOMOV ADD CODFILIALDF SMALLINT;

Update Rdb$Relation_Fields set Rdb$Description =
'Codigo da filial do modelo de documento fiscal.'
where Rdb$Relation_Name='EQTIPOMOV' and Rdb$Field_Name='CODFILIALDF';

ALTER TABLE EQTIPOMOV ADD CODMODDOCFISC CHAR(3);

Update Rdb$Relation_Fields set Rdb$Description =
'Codigo do modelo do documento fiscal.'
where Rdb$Relation_Name='EQTIPOMOV' and Rdb$Field_Name='CODMODDOCFISC';

ALTER TABLE FNRECEBER ADD CODEMPRR INTEGER;

Update Rdb$Relation_Fields set Rdb$Description =
'Código da empresa da renegociação.'
where Rdb$Relation_Name='FNRECEBER' and Rdb$Field_Name='CODEMPRR';

ALTER TABLE FNRECEBER ADD CODFILIALRR SMALLINT;

Update Rdb$Relation_Fields set Rdb$Description =
'Código da filial da renegociação.'
where Rdb$Relation_Name='FNRECEBER' and Rdb$Field_Name='CODFILIALRR';

ALTER TABLE FNRECEBER ADD CODRENEGREC INTEGER;

Update Rdb$Relation_Fields set Rdb$Description =
'Código da renegociação.'
where Rdb$Relation_Name='FNRECEBER' and Rdb$Field_Name='CODRENEGREC';

ALTER TABLE FNTIPOCOB ADD TIPOSPED CHAR(2);

Update Rdb$Relation_Fields set Rdb$Description =
'Indicador do tipo de título de crédito para o SPED:
00 - Duplicata
01 - Cheque
02 - Promissória
03 - recibo
'
where Rdb$Relation_Name='FNTIPOCOB' and Rdb$Field_Name='TIPOSPED';

ALTER TABLE FNTIPOCOB ADD NRODIASCOMP SMALLINT;

Update Rdb$Relation_Fields set Rdb$Description =
'Numero de dias para compensação do valor.'
where Rdb$Relation_Name='FNTIPOCOB' and Rdb$Field_Name='NRODIASCOMP';

ALTER TABLE LFFRETE ADD CHAVECTE VARCHAR(44);

Update Rdb$Relation_Fields set Rdb$Description =
'Chave do conhecimento de transporte eletronico.'
where Rdb$Relation_Name='LFFRETE' and Rdb$Field_Name='CHAVECTE';

ALTER TABLE LFFRETE ADD CODEMPTT INTEGER;

Update Rdb$Relation_Fields set Rdb$Description =
'Código da empresa do tratamento tributario do icms.'
where Rdb$Relation_Name='LFFRETE' and Rdb$Field_Name='CODEMPTT';

ALTER TABLE LFFRETE ADD CODFILIALTT SMALLINT;

Update Rdb$Relation_Fields set Rdb$Description =
'Código da filial do tratamento tributário do ICMS'
where Rdb$Relation_Name='LFFRETE' and Rdb$Field_Name='CODFILIALTT';

ALTER TABLE LFFRETE ADD CODTRATTRIB CHAR(2);

Update Rdb$Relation_Fields set Rdb$Description =
'Código do tratamento tributário do ICMS'
where Rdb$Relation_Name='LFFRETE' and Rdb$Field_Name='CODTRATTRIB';

ALTER TABLE LFITCLFISCAL ADD INDAPURIPI CHAR(1);

Update Rdb$Relation_Fields set Rdb$Description =
'Indicativo de apuração do IPI
0 - Mensal
1 - Decendial'
where Rdb$Relation_Name='LFITCLFISCAL' and Rdb$Field_Name='INDAPURIPI';

ALTER TABLE SGFILIAL ADD PERFILFILIAL CHAR(1);

Update Rdb$Relation_Fields set Rdb$Description =
'Perfil de apresentacao do arquivo fiscal (SPED-EFD)
A - Perfil A
B - Perfil B
C - Perfil C'
where Rdb$Relation_Name='SGFILIAL' and Rdb$Field_Name='PERFILFILIAL';

ALTER TABLE SGFILIAL ADD INDATIVFILIAL CHAR(1);

Update Rdb$Relation_Fields set Rdb$Description =
'Indicador de tipo de atividadade  (SPED-EFD)
0 - Industrial ou equiparado a industrial
1 - Outros'
where Rdb$Relation_Name='SGFILIAL' and Rdb$Field_Name='INDATIVFILIAL';

ALTER TABLE SGFILIAL ADD CODEMPCO INTEGER;

Update Rdb$Relation_Fields set Rdb$Description =
'Código da empresa do fornecedor (contador)'
where Rdb$Relation_Name='SGFILIAL' and Rdb$Field_Name='CODEMPCO';

ALTER TABLE SGFILIAL ADD CODFILIALCO SMALLINT;

Update Rdb$Relation_Fields set Rdb$Description =
'Código da filial do fornecedor (contador)'
where Rdb$Relation_Name='SGFILIAL' and Rdb$Field_Name='CODFILIALCO';

ALTER TABLE SGFILIAL ADD CODFOR INTEGER;

Update Rdb$Relation_Fields set Rdb$Description =
'Código do fornecedor (contador)'
where Rdb$Relation_Name='SGFILIAL' and Rdb$Field_Name='CODFOR';

ALTER TABLE SGFILIAL ADD SUFRAMA CHAR(9);

Update Rdb$Relation_Fields set Rdb$Description =
'Código da filial no suframa'
where Rdb$Relation_Name='SGFILIAL' and Rdb$Field_Name='SUFRAMA';

ALTER TABLE SGPREFERE1 ADD KEYLICEFD VARCHAR(500);

Update Rdb$Relation_Fields set Rdb$Description =
'Chave de licenciamento do módulo Sped EFD.'
where Rdb$Relation_Name='SGPREFERE1' and Rdb$Field_Name='KEYLICEFD';

ALTER TABLE SGPREFERE1 ADD DTVENCTOEFD DATE;

Update Rdb$Relation_Fields set Rdb$Description =
'Data de vencimento da licencao do SPED Efd.'
where Rdb$Relation_Name='SGPREFERE1' and Rdb$Field_Name='DTVENCTOEFD';

ALTER TABLE VDFRETEVD ADD VLRSEGFRETEVD NUMERICDN;

Update Rdb$Relation_Fields set Rdb$Description =
'Valor do seguro do frete.'
where Rdb$Relation_Name='VDFRETEVD' and Rdb$Field_Name='VLRSEGFRETEVD';

ALTER TABLE VDTRANSP ADD EMAILTRAN VARCHAR(60);

ALTER TABLE VDTRANSP ADD EMAILNFETRAN VARCHAR(60);

Update Rdb$Relation_Fields set Rdb$Description =
'Email para envio do XML da Nfe.'
where Rdb$Relation_Name='VDTRANSP' and Rdb$Field_Name='EMAILNFETRAN';

ALTER TABLE VDVENDA ADD INFCOMPL VARCHAR(10000);

Update Rdb$Relation_Fields set Rdb$Description =
'Informações complementares da nota fiscal ( de interesse do fisco );'
where Rdb$Relation_Name='VDVENDA' and Rdb$Field_Name='INFCOMPL';

ALTER TABLE VDVENDA ADD SITDOC CHAR(2);

Update Rdb$Relation_Fields set Rdb$Description =
'Situação do documento fiscal:
00-Documento regular;
01-Documento regular expontâneo;
02-Documento cancelado;
03-Documento cancelado expontâneo
04-NFE Denegada;
05-NFE Numeração inutilizada;
06-Documento fiscal complementar;
07-Documento fiscal complementar expontâneo;
08-Documento emitido com base em Regime Especial ou Norma Específica;'
where Rdb$Relation_Name='VDVENDA' and Rdb$Field_Name='SITDOC';

/* Create Table... */
CREATE TABLE LFMODDOCFISC(CODEMP INTEGER NOT NULL,
CODFILIAL SMALLINT NOT NULL,
CODMODDOCFISC CHAR(2) NOT NULL,
DESCMODDOCFISC CHAR(60) NOT NULL,
DTINS DATE DEFAULT 'now' NOT NULL,
HINS TIME DEFAULT 'now' NOT NULL,
IDUSUINS CHAR(8) DEFAULT USER NOT NULL,
DTALT DATE DEFAULT 'now',
HALT TIME DEFAULT 'now',
IDUSUALT CHAR(8) DEFAULT USER);

GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON LFMODDOCFISC TO ROLE "ADM";

/* Create Primary Key... */
ALTER TABLE LFMODDOCFISC ADD CONSTRAINT LFMODDOCFISCPK PRIMARY KEY (CODMODDOCFISC,CODFILIAL,CODEMP);

/* Create Foreign Key... */
CONNECT 'localhost:/opt/firebird/dados/desenv/1.2.4.3/freedom.fdb' USER 'SYSDBA' PASSWORD 'masterkey' ROLE 'ADM';

ALTER TABLE EQTIPOMOV ADD CONSTRAINT EQTIPOMOVFKMODDOCFISC FOREIGN KEY (CODMODDOCFISC,CODFILIALDF,CODEMPDF) REFERENCES LFMODDOCFISC(CODMODDOCFISC,CODFILIAL,CODEMP);

ALTER TABLE FNRECEBER ADD CONSTRAINT FNRECEBERFKFNRENEGREC FOREIGN KEY (CODRENEGREC,CODFILIALRR,CODEMPRR) REFERENCES FNRENEGREC(CODRENEGREC,CODFILIAL,CODEMP);

ALTER TABLE LFFRETE ADD CONSTRAINT LFFRETEFKTRATTRIB FOREIGN KEY (CODTRATTRIB,CODFILIALTT,CODEMPTT) REFERENCES LFTRATTRIB(CODTRATTRIB,CODFILIAL,CODEMP);

ALTER TABLE LFMODDOCFISC ADD CONSTRAINT LFMODDOCFISCFKSGFILIA FOREIGN KEY (CODFILIAL,CODEMP) REFERENCES SGFILIAL(CODFILIAL,CODEMP);

ALTER TABLE SGFILIAL ADD CONSTRAINT SGFILIALFKCPFORNECED FOREIGN KEY (CODFOR,CODFILIALCO,CODEMPCO) REFERENCES CPFORNECED(CODFOR,CODFILIAL,CODEMP);

/* Alter Procedure... */
/* empty dependent procedure body */
/* Clear: EQMOVPRODISP for: EQMOVPRODCSLDSP */
/* AssignEmptyBody proc */
SET TERM ^ ;

ALTER PROCEDURE EQMOVPRODISP(ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
ICODEMPLE INTEGER,
SCODFILIALLE SMALLINT,
CCODLOTE VARCHAR(20),
ICODEMPTM INTEGER,
SCODFILIALTM SMALLINT,
ICODTIPOMOV INTEGER,
ICODEMPIV INTEGER,
SCODFILIALIV SMALLINT,
ICODINVPROD INTEGER,
ICODEMPCP INTEGER,
SCODFILIALCP SMALLINT,
ICODCOMPRA INTEGER,
SCODITCOMPRA SMALLINT,
ICODEMPVD INTEGER,
SCODFILIALVD SMALLINT,
CTIPOVENDA CHAR(1),
ICODVENDA INTEGER,
SCODITVENDA SMALLINT,
ICODEMPRM INTEGER,
SCODFILIALRM SMALLINT,
ICODRMA INTEGER,
SCODITRMA SMALLINT,
ICODEMPOP INTEGER,
SCODFILIALOP SMALLINT,
ICODOP INTEGER,
SSEQOP SMALLINT,
SSEQENTOP SMALLINT,
ICODEMPNT INTEGER,
SCODFILIALNT SMALLINT,
CCODNAT CHAR(4),
DDTMOVPROD DATE,
IDOCMOVPROD INTEGER,
CFLAG CHAR(1),
NQTDMOVPROD NUMERIC(15,5),
NPRECOMOVPROD NUMERIC(15,5),
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER,
CMULTIALMOX CHAR(1))
 AS
 BEGIN EXIT; END
^

/* empty dependent procedure body */
/* Clear: EQMOVPRODUSP for: EQMOVPRODCSLDSP */
/* AssignEmptyBody proc */
ALTER PROCEDURE EQMOVPRODUSP(ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
ICODEMPLE INTEGER,
SCODFILIALLE SMALLINT,
CCODLOTE VARCHAR(20),
ICODEMPTM INTEGER,
SCODFILIALTM SMALLINT,
ICODTIPOMOV INTEGER,
ICODEMPIV INTEGER,
SCODFILIALIV SMALLINT,
ICODINVPROD INTEGER,
ICODEMPCP INTEGER,
SCODFILIALCP SMALLINT,
ICODCOMPRA INTEGER,
SCODITCOMPRA SMALLINT,
ICODEMPVD INTEGER,
SCODFILIALVD SMALLINT,
CTIPOVENDA CHAR(1),
ICODVENDA INTEGER,
SCODITVENDA SMALLINT,
ICODEMPRM INTEGER,
SCODFILIALRM SMALLINT,
ICODRMA INTEGER,
SCODITRMA SMALLINT,
ICODEMPOP INTEGER,
SCODFILIALOP SMALLINT,
ICODOP INTEGER,
SSEQOP SMALLINT,
SSEQENTOP SMALLINT,
ICODEMPNT INTEGER,
SCODFILIALNT SMALLINT,
CCODNAT CHAR(4),
DDTMOVPROD DATE,
IDOCMOVPROD INTEGER,
CFLAG CHAR(1),
NQTDMOVPROD NUMERIC(15,5),
NPRECOMOVPROD NUMERIC(15,5),
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER,
CMULTIALMOX CHAR(1))
 AS
 BEGIN EXIT; END
^

/* empty dependent procedure body */
/* Clear: EQMOVPRODPRCSLDSP for: EQMOVPRODCSLDSP */
/* AssignEmptyBody proc */
ALTER PROCEDURE EQMOVPRODPRCSLDSP(SCODFILIAL SMALLINT,
ICODMOVPROD INTEGER,
ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
DDTMOVPROD DATE,
DDTMOVPRODPRC DATE,
NSLDMOVPROD NUMERIC(15,5),
NCUSTOMPMMOVPROD NUMERIC(15,5),
NSLDMOVPRODAX NUMERIC(15,5),
NCUSTOMPMMOVPRODAX NUMERIC(15,5),
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER,
CMULTIALMOX CHAR(1))
 RETURNS(NSLDPRC NUMERIC(15,5),
NCUSTOMPMPRC NUMERIC(15,5),
NSLDPRCAX NUMERIC(15,5),
NCUSTOMPMPRCAX NUMERIC(15,5))
 AS
 BEGIN EXIT; END
^

/* Alter (EQMOVPRODCSLDSP) */
ALTER PROCEDURE EQMOVPRODCSLDSP(ICODEMPTM INTEGER,
SCODFILIALTM SMALLINT,
ICODTIPOMOV INTEGER,
NQTDMOVPROD NUMERIC(15,5),
NPRECOMOVPROD NUMERIC(15,5),
NCUSTOMPMMOVPROD NUMERIC(15,5),
NSLDMOVPROD NUMERIC(15,5))
 RETURNS(NCUSTOMPM NUMERIC(15,5),
NSALDO NUMERIC(15,5),
CESTOQMOVPROD CHAR(1),
CTIPOMOVPROD CHAR(1),
SOPERADOR SMALLINT)
 AS
begin
  /* Procedure que retorna o cálculo de custo e saldo */
  NCUSTOMPM = 0;
  NSALDO = 0;
  SELECT CESTIPOMOV, SOPERADOR
     FROM EQMOVPRODCKTMSP( :ICODEMPTM, :SCODFILIALTM, :ICODTIPOMOV)
     INTO :CTIPOMOVPROD, :SOPERADOR;
  if (SOPERADOR=0) then
  begin
     CESTOQMOVPROD = 'N';
     NSALDO = NSLDMOVPROD;
  end
  else
  begin  /* verifica se é para controlar estoque */
     CESTOQMOVPROD = 'S';
     NSALDO = NSLDMOVPROD + CAST ( (NQTDMOVPROD * SOPERADOR) AS NUMERIC(15, 5) );
  end
  if ( (NSALDO > NSLDMOVPROD) AND (NSALDO > 0) ) then
  begin
    if ( (NSLDMOVPROD * NCUSTOMPMMOVPROD)  <= 0) then
       NCUSTOMPM = NPRECOMOVPROD;
    else
        NCUSTOMPM = ( cast(NSLDMOVPROD * NCUSTOMPMMOVPROD as numeric(15,5) ) +
        cast(NQTDMOVPROD * NPRECOMOVPROD as numeric(15,5)) ) / NSALDO ;
  end
  else
      NCUSTOMPM = NCUSTOMPMMOVPROD;

  suspend;
end
^

/* empty dependent procedure body */
/* Clear: EQMOVPRODIUDSP for: EQMOVPRODISP */
/* AssignEmptyBody proc */
ALTER PROCEDURE EQMOVPRODIUDSP(CIUD CHAR(1),
ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
ICODEMPLE INTEGER,
SCODFILIALLE SMALLINT,
CCODLOTE VARCHAR(20),
ICODEMPTM INTEGER,
SCODFILIALTM SMALLINT,
ICODTIPOMOV INTEGER,
ICODEMPIV INTEGER,
SCODFILIALIV SMALLINT,
ICODINVPROD INTEGER,
ICODEMPCP INTEGER,
SCODFILIALCP SMALLINT,
ICODCOMPRA INTEGER,
SCODITCOMPRA SMALLINT,
ICODEMPVD INTEGER,
SCODFILIALVD SMALLINT,
CTIPOVENDA CHAR(1),
ICODVENDA INTEGER,
SCODITVENDA SMALLINT,
ICODEMPRM INTEGER,
SCODFILIALRM SMALLINT,
ICODRMA INTEGER,
SCODITRMA SMALLINT,
ICODEMPOP INTEGER,
SCODFILIALOP SMALLINT,
ICODOP INTEGER,
SSEQOP SMALLINT,
SSEQENTOP SMALLINT,
ICODEMPNT INTEGER,
SCODFILIALNT SMALLINT,
CCODNAT CHAR(4),
DDTMOVPROD DATE,
IDOCMOVPROD INTEGER,
CFLAG CHAR(1),
NQTDMOVPROD NUMERIC(15,5),
NPRECOMOVPROD NUMERIC(15,5),
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER)
 AS
 BEGIN EXIT; END
^

/* Alter (EQMOVPRODISP) */
ALTER PROCEDURE EQMOVPRODISP(ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
ICODEMPLE INTEGER,
SCODFILIALLE SMALLINT,
CCODLOTE VARCHAR(20),
ICODEMPTM INTEGER,
SCODFILIALTM SMALLINT,
ICODTIPOMOV INTEGER,
ICODEMPIV INTEGER,
SCODFILIALIV SMALLINT,
ICODINVPROD INTEGER,
ICODEMPCP INTEGER,
SCODFILIALCP SMALLINT,
ICODCOMPRA INTEGER,
SCODITCOMPRA SMALLINT,
ICODEMPVD INTEGER,
SCODFILIALVD SMALLINT,
CTIPOVENDA CHAR(1),
ICODVENDA INTEGER,
SCODITVENDA SMALLINT,
ICODEMPRM INTEGER,
SCODFILIALRM SMALLINT,
ICODRMA INTEGER,
SCODITRMA SMALLINT,
ICODEMPOP INTEGER,
SCODFILIALOP SMALLINT,
ICODOP INTEGER,
SSEQOP SMALLINT,
SSEQENTOP SMALLINT,
ICODEMPNT INTEGER,
SCODFILIALNT SMALLINT,
CCODNAT CHAR(4),
DDTMOVPROD DATE,
IDOCMOVPROD INTEGER,
CFLAG CHAR(1),
NQTDMOVPROD NUMERIC(15,5),
NPRECOMOVPROD NUMERIC(15,5),
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER,
CMULTIALMOX CHAR(1))
 AS
declare variable scodfilial smallint;
declare variable icodmovprod integer;
declare variable cestoqmovprod char(1);
declare variable ctipomovprod char(1);
declare variable nsldmovprod numeric(15,5);
declare variable ncustompmmovprod numeric(15,5);
declare variable soperador smallint;
declare variable nsldmovprodax numeric(15,5);
declare variable ncustompmmovprodax numeric(15,5);
begin
  /* Procedure de inserção na tabela eqmovprod */

  SELECT NSALDO, NCUSTOMPM, NSALDOAX, NCUSTOMPMAX FROM EQMOVPRODSLDSP(null, null, null, :ICODEMPPD,
     :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, :NPRECOMOVPROD, :NPRECOMOVPROD,
     :ICODEMPAX, :SCODFILIALAX, :ICODALMOX, :CMULTIALMOX )
     INTO :NSLDMOVPROD, :NCUSTOMPMMOVPROD, :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX ;

  /* Verifica se haverá mudança de saldo*/
  SELECT NSALDO, NCUSTOMPM, CESTOQMOVPROD, CTIPOMOVPROD, SOPERADOR FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
      :ICODTIPOMOV, :NQTDMOVPROD, :NPRECOMOVPROD, :NCUSTOMPMMOVPROD, :NSLDMOVPROD)
      INTO :NSLDMOVPROD, :NCUSTOMPMMOVPROD, :CESTOQMOVPROD, :CTIPOMOVPROD, :SOPERADOR;

  if (CMULTIALMOX='N') then
  begin
     NSLDMOVPRODAX = NSLDMOVPROD;
     NCUSTOMPMMOVPRODAX = NCUSTOMPMMOVPROD;
  end
  else
  begin
      SELECT NSALDO, NCUSTOMPM FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
          :ICODTIPOMOV, :NQTDMOVPROD, :NPRECOMOVPROD, :NCUSTOMPMMOVPRODAX, :NSLDMOVPRODAX)
        INTO :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX;
  end

  SELECT SCODFILIAL, ICODMOVPROD FROM EQMOVPRODSEQSP(:ICODEMPPD)
     INTO :SCODFILIAL, :ICODMOVPROD;  /* encontra o próximo código e a filial*/

   INSERT INTO EQMOVPROD ( CODEMP, CODFILIAL, CODMOVPROD,
      CODEMPPD, CODFILIALPD , CODPROD , CODEMPLE ,
      CODFILIALLE , CODLOTE , CODEMPTM, CODFILIALTM,
      CODTIPOMOV, CODEMPIV , CODFILIALIV , CODINVPROD ,
      CODEMPCP , CODFILIALCP , CODCOMPRA , CODITCOMPRA , CODEMPVD ,
      CODFILIALVD , TIPOVENDA , CODVENDA , CODITVENDA , CODEMPRM ,
      CODFILIALRM , CODRMA , CODITRMA ,
      CODEMPOP, CODFILIALOP, CODOP, SEQOP, SEQENTOP,
      CODEMPNT , CODFILIALNT ,
      CODNAT , DTMOVPROD , DOCMOVPROD , FLAG , QTDMOVPROD ,
      PRECOMOVPROD, ESTOQMOVPROD, TIPOMOVPROD, SLDMOVPROD, CUSTOMPMMOVPROD,
      SLDMOVPRODAX, CUSTOMPMMOVPRODAX, CODEMPAX, CODFILIALAX, CODALMOX )
   VALUES ( :ICODEMPPD, :SCODFILIAL, :ICODMOVPROD,
    :ICODEMPPD , :SCODFILIALPD , :ICODPROD , :ICODEMPLE ,
    :SCODFILIALLE , :CCODLOTE , :ICODEMPTM, :SCODFILIALTM,
    :ICODTIPOMOV, :ICODEMPIV , :SCODFILIALIV ,
    :ICODINVPROD , :ICODEMPCP , :SCODFILIALCP , :ICODCOMPRA ,
    :SCODITCOMPRA , :ICODEMPVD , :SCODFILIALVD , :CTIPOVENDA ,
    :ICODVENDA , :SCODITVENDA , :ICODEMPRM , :SCODFILIALRM ,
    :ICODRMA , :SCODITRMA , :ICODEMPOP, :SCODFILIALOP, :ICODOP, :SSEQOP, :sseqentop,
    :ICODEMPNT , :SCODFILIALNT , :CCODNAT ,
    :DDTMOVPROD , :IDOCMOVPROD , :CFLAG , :NQTDMOVPROD ,
    :NPRECOMOVPROD, :CESTOQMOVPROD, :CTIPOMOVPROD, :NSLDMOVPROD, :NCUSTOMPMMOVPROD,
    :NSLDMOVPRODAX,  :NCUSTOMPMMOVPRODAX, :ICODEMPAX, :SCODFILIALAX, :ICODALMOX );

  /* REPROCESSAR ESTOQUE */

  SELECT NSLDPRC, NCUSTOMPMPRC, NSLDPRCAX, NCUSTOMPMPRCAX
    FROM EQMOVPRODPRCSLDSP( :SCODFILIAL, :ICODMOVPROD, :ICODEMPPD,
     :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, null, :NSLDMOVPROD, :NCUSTOMPMMOVPROD,
     :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX, :ICODEMPAX, :SCODFILIALAX, :ICODALMOX,
     :CMULTIALMOX)
    INTO :NSLDMOVPROD, :NCUSTOMPMMOVPROD, :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX ;

 /* ATUALIZA O CUSTO NO CADASTRO DE PRODUTOS
   EXECUTE PROCEDURE EQMOVPRODATCUSTSP(:SOPERADOR, :ICODEMPPD, :SCODFILIAL,
    :ICODMOVPROD, :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, :NCUSTOMPMMOVPROD); 
 */


  suspend;
end
^

/* Alter (EQMOVPRODIUDSP) */
ALTER PROCEDURE EQMOVPRODIUDSP(CIUD CHAR(1),
ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
ICODEMPLE INTEGER,
SCODFILIALLE SMALLINT,
CCODLOTE VARCHAR(20),
ICODEMPTM INTEGER,
SCODFILIALTM SMALLINT,
ICODTIPOMOV INTEGER,
ICODEMPIV INTEGER,
SCODFILIALIV SMALLINT,
ICODINVPROD INTEGER,
ICODEMPCP INTEGER,
SCODFILIALCP SMALLINT,
ICODCOMPRA INTEGER,
SCODITCOMPRA SMALLINT,
ICODEMPVD INTEGER,
SCODFILIALVD SMALLINT,
CTIPOVENDA CHAR(1),
ICODVENDA INTEGER,
SCODITVENDA SMALLINT,
ICODEMPRM INTEGER,
SCODFILIALRM SMALLINT,
ICODRMA INTEGER,
SCODITRMA SMALLINT,
ICODEMPOP INTEGER,
SCODFILIALOP SMALLINT,
ICODOP INTEGER,
SSEQOP SMALLINT,
SSEQENTOP SMALLINT,
ICODEMPNT INTEGER,
SCODFILIALNT SMALLINT,
CCODNAT CHAR(4),
DDTMOVPROD DATE,
IDOCMOVPROD INTEGER,
CFLAG CHAR(1),
NQTDMOVPROD NUMERIC(15,5),
NPRECOMOVPROD NUMERIC(15,5),
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER)
 AS
declare variable cmultialmox char(1);
begin
  /* Procedure que controle INSERT, UPDATE E DELETE da tabela eqmovprod */

  /* Linha incluida para passar como parâmetro se é multi almoxarifado
      Como o objetivo de evitar I/O
  */
  SELECT CMULTIALMOX FROM SGRETMULTIALMOXSP(:ICODEMPPD) INTO :CMULTIALMOX;
  
  if (CIUD='I') then /* SE FOR INSERT */
     execute procedure EQMOVPRODISP( ICODEMPPD, SCODFILIALPD, ICODPROD,
         ICODEMPLE, SCODFILIALLE, CCODLOTE, ICODEMPTM, SCODFILIALTM, ICODTIPOMOV,
         ICODEMPIV, SCODFILIALIV, ICODINVPROD, ICODEMPCP, SCODFILIALCP, ICODCOMPRA,
         SCODITCOMPRA, ICODEMPVD, SCODFILIALVD, CTIPOVENDA, ICODVENDA, SCODITVENDA,
         ICODEMPRM, SCODFILIALRM, ICODRMA, SCODITRMA,
         ICODEMPOP, SCODFILIALOP, ICODOP, SSEQOP, sseqentop,
         ICODEMPNT, SCODFILIALNT,
         CCODNAT, DDTMOVPROD, IDOCMOVPROD, CFLAG, NQTDMOVPROD, NPRECOMOVPROD,
         ICODEMPAX, SCODFILIALAX, ICODALMOX, CMULTIALMOX);
  else if (CIUD='U') then
     execute procedure EQMOVPRODUSP( ICODEMPPD, SCODFILIALPD, ICODPROD,
         ICODEMPLE, SCODFILIALLE, CCODLOTE, ICODEMPTM, SCODFILIALTM, ICODTIPOMOV,
         ICODEMPIV, SCODFILIALIV, ICODINVPROD, ICODEMPCP, SCODFILIALCP, ICODCOMPRA,
         SCODITCOMPRA, ICODEMPVD, SCODFILIALVD, CTIPOVENDA, ICODVENDA, SCODITVENDA,
         ICODEMPRM, SCODFILIALRM, ICODRMA, SCODITRMA,
         ICODEMPOP, SCODFILIALOP, ICODOP, SSEQOP, sseqentop,
         ICODEMPNT, SCODFILIALNT,
         CCODNAT, DDTMOVPROD, IDOCMOVPROD, CFLAG, NQTDMOVPROD, NPRECOMOVPROD,
         ICODEMPAX, SCODFILIALAX, ICODALMOX, CMULTIALMOX);
  else if (CIUD='D') then
     execute procedure EQMOVPRODDSP( ICODEMPPD, SCODFILIALPD, ICODPROD, ICODEMPIV,
         SCODFILIALIV, ICODINVPROD, ICODEMPCP, SCODFILIALCP, ICODCOMPRA, SCODITCOMPRA,
         ICODEMPVD, SCODFILIALVD, CTIPOVENDA, ICODVENDA, SCODITVENDA,
         ICODEMPRM, SCODFILIALRM, ICODRMA, SCODITRMA,
         ICODEMPOP, SCODFILIALOP, ICODOP, SSEQOP, sseqentop,
         DDTMOVPROD, ICODEMPAX, SCODFILIALAX, ICODALMOX, CMULTIALMOX );
  suspend;
end
^

/* empty dependent procedure body */
/* Clear: EQMOVPRODDSP for: EQMOVPRODPRCSLDSP */
/* AssignEmptyBody proc */
ALTER PROCEDURE EQMOVPRODDSP(ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
ICODEMPIV INTEGER,
SCODFILIALIV SMALLINT,
ICODINVPROD INTEGER,
ICODEMPCP INTEGER,
SCODFILIALCP SMALLINT,
ICODCOMPRA INTEGER,
SCODITCOMPRA SMALLINT,
ICODEMPVD INTEGER,
SCODFILIALVD SMALLINT,
CTIPOVENDA CHAR(1),
ICODVENDA INTEGER,
SCODITVENDA SMALLINT,
ICODEMPRM INTEGER,
SCODFILIALRM SMALLINT,
ICODRMA INTEGER,
SCODITRMA SMALLINT,
ICODEMPOP INTEGER,
SCODFILIALOP SMALLINT,
ICODOP INTEGER,
SSEQOP SMALLINT,
SSEQENTOP SMALLINT,
DDTMOVPROD DATE,
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER,
CMULTIALMOX CHAR(1))
 AS
 BEGIN EXIT; END
^

/* Alter (EQMOVPRODPRCSLDSP) */
ALTER PROCEDURE EQMOVPRODPRCSLDSP(SCODFILIAL SMALLINT,
ICODMOVPROD INTEGER,
ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
DDTMOVPROD DATE,
DDTMOVPRODPRC DATE,
NSLDMOVPROD NUMERIC(15,5),
NCUSTOMPMMOVPROD NUMERIC(15,5),
NSLDMOVPRODAX NUMERIC(15,5),
NCUSTOMPMMOVPRODAX NUMERIC(15,5),
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER,
CMULTIALMOX CHAR(1))
 RETURNS(NSLDPRC NUMERIC(15,5),
NCUSTOMPMPRC NUMERIC(15,5),
NSLDPRCAX NUMERIC(15,5),
NCUSTOMPMPRCAX NUMERIC(15,5))
 AS
DECLARE VARIABLE ICODEMPTM INTEGER;
DECLARE VARIABLE SCODFILIALTM SMALLINT;
DECLARE VARIABLE ICODTIPOMOV INTEGER;
DECLARE VARIABLE NQTDMOVPROD NUMERIC(15,5);
DECLARE VARIABLE NPRECOMOVPROD NUMERIC(15,5);
DECLARE VARIABLE ICODMOVPRODPRC INTEGER;
DECLARE VARIABLE CESTOQMOVPROD CHAR(1);
DECLARE VARIABLE ICODEMPAXPRC INTEGER;
DECLARE VARIABLE SCODFILIALAXPRC SMALLINT;
DECLARE VARIABLE ICODALMOXPRC INTEGER;
begin
  /* Procedure de processamento de estoque */
  FOR SELECT MP.CODEMPTM, MP.CODFILIALTM, MP.CODTIPOMOV ,
    MP.QTDMOVPROD, MP.PRECOMOVPROD , MP.CODMOVPROD,
    MP.CODEMPAX, MP.CODFILIALAX, MP.CODALMOX
    FROM EQMOVPROD MP
    WHERE MP.CODEMPPD=:ICODEMPPD AND MP.CODFILIALPD=:SCODFILIALPD AND
       MP.CODPROD=:ICODPROD AND MP.CODEMP=:ICODEMPPD AND MP.CODFILIAL=:SCODFILIAL AND
       ( (MP.DTMOVPROD = :DDTMOVPROD AND MP.CODMOVPROD > :ICODMOVPROD) OR
         (MP.DTMOVPROD>:DDTMOVPROD) ) AND  /* ALTEREI AQUI */
       ( (:DDTMOVPRODPRC IS NULL /* AND MP.CODMOVPROD!=:ICODMOVPROD */) OR
         (MP.DTMOVPROD = :DDTMOVPRODPRC AND MP.CODMOVPROD < :ICODMOVPROD) OR
         (MP.DTMOVPROD < :DDTMOVPRODPRC) )
    ORDER BY MP.DTMOVPROD, MP.CODMOVPROD
    INTO :ICODEMPTM, :SCODFILIALTM, :ICODTIPOMOV,
     :NQTDMOVPROD, :NPRECOMOVPROD, :ICODMOVPRODPRC,
     :ICODEMPAXPRC, :SCODFILIALAXPRC, :ICODALMOXPRC DO
  BEGIN
      SELECT NSALDO, NCUSTOMPM, CESTOQMOVPROD FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
        :ICODTIPOMOV, :NQTDMOVPROD, :NPRECOMOVPROD, :NCUSTOMPMMOVPROD, :NSLDMOVPROD)
      INTO :NSLDMOVPROD, :NCUSTOMPMMOVPROD, :CESTOQMOVPROD;
      if (CMULTIALMOX='N') then /* Se não for multi almoxarifado*/
      begin
         NSLDMOVPRODAX = NSLDMOVPROD;
         NCUSTOMPMMOVPRODAX = NCUSTOMPMMOVPROD;
         UPDATE EQMOVPROD SET SLDMOVPROD=:NSLDMOVPROD, CUSTOMPMMOVPROD=:NCUSTOMPMMOVPROD,
            SLDMOVPRODAX=:NSLDMOVPRODAX, CUSTOMPMMOVPRODAX=:NCUSTOMPMMOVPRODAX,
            ESTOQMOVPROD=:CESTOQMOVPROD
            WHERE CODEMP=:ICODEMPPD AND CODFILIAL=:SCODFILIAL AND CODMOVPROD=:ICODMOVPRODPRC;
      end
      else if (ICODEMPAX=ICODEMPAXPRC AND SCODFILIALAX=SCODFILIALAXPRC AND
          ICODALMOX=ICODALMOXPRC) then
          /* Se for multi almoxarifado e o código do almoxarifado for o mesmo*/
      begin
        SELECT NSALDO, NCUSTOMPM FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
            :ICODTIPOMOV, :NQTDMOVPROD, :NPRECOMOVPROD, :NCUSTOMPMMOVPRODAX, :NSLDMOVPRODAX)
            INTO :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX;
        UPDATE EQMOVPROD SET SLDMOVPROD=:NSLDMOVPROD, CUSTOMPMMOVPROD=:NCUSTOMPMMOVPROD,
            SLDMOVPRODAX=:NSLDMOVPRODAX, CUSTOMPMMOVPRODAX=:NCUSTOMPMMOVPRODAX,
            ESTOQMOVPROD=:CESTOQMOVPROD
            WHERE CODEMP=:ICODEMPPD AND CODFILIAL=:SCODFILIAL AND CODMOVPROD=:ICODMOVPRODPRC;
      end
      else /* Se for multi almoxarifado não atualiza almoxarifado diferente */
      begin
        UPDATE EQMOVPROD SET SLDMOVPROD=:NSLDMOVPROD, CUSTOMPMMOVPROD=:NCUSTOMPMMOVPROD,
            ESTOQMOVPROD=:CESTOQMOVPROD
            WHERE CODEMP=:ICODEMPPD AND CODFILIAL=:SCODFILIAL AND CODMOVPROD=:ICODMOVPRODPRC;
      end
      NSLDPRC = NSLDMOVPROD;
      NCUSTOMPMPRC = NCUSTOMPMMOVPROD;
      NSLDPRCAX = NSLDMOVPRODAX;
      NCUSTOMPMPRCAX = NCUSTOMPMMOVPRODAX;
  END
  suspend;
end
^

/* Alter (EQMOVPRODUSP) */
ALTER PROCEDURE EQMOVPRODUSP(ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
ICODEMPLE INTEGER,
SCODFILIALLE SMALLINT,
CCODLOTE VARCHAR(20),
ICODEMPTM INTEGER,
SCODFILIALTM SMALLINT,
ICODTIPOMOV INTEGER,
ICODEMPIV INTEGER,
SCODFILIALIV SMALLINT,
ICODINVPROD INTEGER,
ICODEMPCP INTEGER,
SCODFILIALCP SMALLINT,
ICODCOMPRA INTEGER,
SCODITCOMPRA SMALLINT,
ICODEMPVD INTEGER,
SCODFILIALVD SMALLINT,
CTIPOVENDA CHAR(1),
ICODVENDA INTEGER,
SCODITVENDA SMALLINT,
ICODEMPRM INTEGER,
SCODFILIALRM SMALLINT,
ICODRMA INTEGER,
SCODITRMA SMALLINT,
ICODEMPOP INTEGER,
SCODFILIALOP SMALLINT,
ICODOP INTEGER,
SSEQOP SMALLINT,
SSEQENTOP SMALLINT,
ICODEMPNT INTEGER,
SCODFILIALNT SMALLINT,
CCODNAT CHAR(4),
DDTMOVPROD DATE,
IDOCMOVPROD INTEGER,
CFLAG CHAR(1),
NQTDMOVPROD NUMERIC(15,5),
NPRECOMOVPROD NUMERIC(15,5),
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER,
CMULTIALMOX CHAR(1))
 AS
declare variable icodemp integer;
declare variable scodfilial smallint;
declare variable icodmovprod integer;
declare variable nsldprc numeric(15,5);
declare variable ncustompmprc numeric(15,5);
declare variable nsldprcax numeric(15,5);
declare variable ncustompmprcax numeric(15,5);
declare variable nsldlc numeric(15,5);
declare variable ncustompmlc numeric(15,5);
declare variable nsldlcax numeric(15,5);
declare variable ncustompmlcax numeric(15,5);
declare variable ddtmovprodold date;
declare variable nprecomovprodold numeric(15,5);
declare variable nqtdmovprodold numeric(15,5);
declare variable icodemptmold integer;
declare variable scodfilialtmold smallint;
declare variable icodtipomovold integer;
declare variable calttm char(1);
declare variable ddtprc date;
declare variable ddtprcate date;
declare variable cestoqmovprod char(1);
begin
  /* Procedure de atualização da tabela eqmovprod */

  DDTPRCATE = NULL; /* Até onde deve ser processando o estoque */
 /* localiza movprod */

-- execute procedure sgdebugsp('antes da atualização...','no inicio');

  SELECT ICODEMP, SCODFILIAL, ICODMOVPROD
    FROM EQMOVPRODRETCODSP(:ICODEMPIV, :SCODFILIALIV, :ICODINVPROD, :ICODEMPCP,
      :SCODFILIALCP, :ICODCOMPRA, :SCODITCOMPRA, :ICODEMPVD, :SCODFILIALVD,
      :CTIPOVENDA, :ICODVENDA, :SCODITVENDA, :ICODEMPRM, :SCODFILIALRM,
      :ICODRMA, :SCODITRMA, :ICODEMPOP, :SCODFILIALOP, :ICODOP, :SSEQOP, :sseqentop)
    INTO :ICODEMP, :SCODFILIAL, :ICODMOVPROD;

--  traz valores antigos

  SELECT MP.CODEMPTM, MP.CODFILIALTM, MP.CODTIPOMOV, MP.DTMOVPROD,
       MP.PRECOMOVPROD, MP.QTDMOVPROD  FROM EQMOVPROD MP
     WHERE MP.CODEMP=:ICODEMP AND MP.CODFILIAL=:SCODFILIAL AND MP.CODMOVPROD=:ICODMOVPROD
     INTO :ICODEMPTMOLD, :SCODFILIALTMOLD, :ICODTIPOMOVOLD, :DDTMOVPRODOLD,
       :NPRECOMOVPRODOLD, :NQTDMOVPRODOLD;

   /* abaixo verificação se a alteração de tipo de movimento mexe no estoque */
   SELECT CALTTM FROM EQMOVPRODCKUTMSP(:ICODEMPTM, :SCODFILIALTM, :ICODTIPOMOV,
      :ICODEMPTMOLD, :SCODFILIALTMOLD, :ICODTIPOMOVOLD) INTO :CALTTM;

   /* verifica se há relevância para reprocessamento */
   if ( (DDTMOVPROD!=DDTMOVPRODOLD) OR (CALTTM='S') OR
        (NPRECOMOVPROD!=NPRECOMOVPRODOLD) OR (NQTDMOVPROD!=NQTDMOVPRODOLD) ) then
   begin

   -- execute procedure sgdebugsp('entrou no if','1');


      if ( DDTMOVPRODOLD IS NULL) then
         DDTMOVPRODOLD = DDTMOVPROD; /* garantir que a data antiga não e nula; */
      /* verifica qual data é menor para reprocessamento */
      if ( DDTMOVPROD<=DDTMOVPRODOLD ) then
      begin

     -- execute procedure sgdebugsp('entrou no if','2');

          DDTPRC = DDTMOVPROD;
          if (DDTMOVPROD=DDTMOVPRODOLD) then
             DDTPRCATE = null;
          else
             DDTPRCATE = DDTMOVPRODOLD;
/*          verifica lançamento anterior e traz custo e saldo */
          SELECT NSALDO, NCUSTOMPM, NSALDOAX, NCUSTOMPMAX
             FROM EQMOVPRODSLDSP(:ICODEMP, :SCODFILIAL, :ICODMOVPROD, :ICODEMPPD,
             :SCODFILIALPD, :ICODPROD, :DDTPRC, :NPRECOMOVPROD, :NPRECOMOVPROD,
             :ICODEMPAX, :SCODFILIALAX, :ICODALMOX, :CMULTIALMOX)
             INTO :NSLDPRC, :NCUSTOMPMPRC, :NSLDPRCAX, :NCUSTOMPMPRCAX ;

          /* verifica se havera mudança de saldo */
          SELECT NSALDO, NCUSTOMPM, CESTOQMOVPROD
              FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
              :ICODTIPOMOV, :NQTDMOVPROD, :NPRECOMOVPROD, :NCUSTOMPMPRC, :NSLDPRC)
              INTO :NSLDPRC, :NCUSTOMPMPRC, :CESTOQMOVPROD;
          if (CMULTIALMOX='N') then
          begin
              NSLDPRCAX = NSLDPRC;
              NCUSTOMPMPRCAX = NCUSTOMPMPRC;
          end
          else
          begin
          SELECT NSALDO, NCUSTOMPM
              FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
              :ICODTIPOMOV, :NQTDMOVPROD, :NPRECOMOVPROD, :NCUSTOMPMPRCAX, :NSLDPRCAX)
              INTO :NSLDPRCAX, :NCUSTOMPMPRCAX;
          end
          NCUSTOMPMLC = NCUSTOMPMPRC;
          NSLDLC = NSLDPRC;
          NCUSTOMPMLCAX = NCUSTOMPMPRCAX;
          NSLDLCAX = NSLDPRCAX;
      end
      else
      begin
          DDTPRC = DDTMOVPRODOLD;
          DDTPRCATE = DDTMOVPROD;
          /* verifica lançamento anterior e traz custo e saldo */

       --   execute procedure sgdebugsp('entrou no else','3');

          SELECT NSALDO, NCUSTOMPM, NSALDOAX, NCUSTOMPMAX
             FROM EQMOVPRODSLDSP(:ICODEMP, :SCODFILIAL, :ICODMOVPROD, :ICODEMPPD,
             :SCODFILIALPD, :ICODPROD, :DDTPRC, 0, 0,
             :ICODEMPAX, :SCODFILIALAX, :ICODALMOX, :CMULTIALMOX)
             INTO :NSLDPRC, :NCUSTOMPMPRC, :NSLDPRCAX, :NCUSTOMPMPRCAX ;

          /* verifica lançamento anterior e traz custo e saldo */
          SELECT NSALDO, NCUSTOMPM, NSALDOAX, NCUSTOMPMAX
             FROM EQMOVPRODSLDSP(:ICODEMP, :SCODFILIAL, :ICODMOVPROD, :ICODEMPPD,
             :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, :NCUSTOMPMLC, :NCUSTOMPMLCAX,
             :ICODEMPAX, :SCODFILIALAX, :ICODALMOX, :CMULTIALMOX)
             INTO :NSLDLC, :NCUSTOMPMLC, :NSLDLCAX, :NCUSTOMPMLCAX ;

          /* verifica se havera mudança de saldo */
          SELECT NSALDO, NCUSTOMPM, CESTOQMOVPROD
              FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
              :ICODTIPOMOV, (:NQTDMOVPROD-:NQTDMOVPRODOLD), :NPRECOMOVPROD,
              :NCUSTOMPMLC, :NSLDLC)
              INTO :NSLDLC, :NCUSTOMPMLC, :CESTOQMOVPROD;
          if (CMULTIALMOX='N') then
          begin
             NSLDLCAX = NSLDLC;
             NCUSTOMPMLCAX = NCUSTOMPMLC;
          end
          else
          begin
              SELECT NSALDO, NCUSTOMPM
                  FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
                  :ICODTIPOMOV, (:NQTDMOVPROD-:NQTDMOVPRODOLD), :NPRECOMOVPROD,
                  :NCUSTOMPMLCAX, :NSLDLCAX)
                  INTO :NSLDLCAX, :NCUSTOMPMLCAX;
          end

      end

      /* REPROCESSAR ESTOQUE */

    --  execute procedure sgdebugsp('antes do reprocessamento ESTOQUE',CESTOQMOVPROD);
    --   execute procedure sgdebugsp('antes do reprocessamento QTD',NQTDMOVPROD);
    --   execute procedure sgdebugsp('MOVPROD COD',ICODMOVPROD);

       SELECT NSLDPRC, NCUSTOMPMPRC, NSLDPRCAX, NCUSTOMPMPRCAX
        FROM EQMOVPRODPRCSLDSP( :SCODFILIAL, :ICODMOVPROD, :ICODEMPPD,
          :SCODFILIALPD, :ICODPROD, :DDTPRC, :DDTPRCATE, :NSLDPRC,
          :NCUSTOMPMPRC, :NSLDPRCAX, :NCUSTOMPMPRCAX,
          :ICODEMPAX, :SCODFILIALAX, :ICODALMOX, :CMULTIALMOX)
        INTO :NSLDPRC, :NCUSTOMPMPRC, :NSLDPRCAX, :NCUSTOMPMPRCAX;

      UPDATE EQMOVPROD SET DTMOVPROD=:DDTMOVPROD,
         QTDMOVPROD=:NQTDMOVPROD, PRECOMOVPROD=:NPRECOMOVPROD,
         SLDMOVPROD=:NSLDLC, CUSTOMPMMOVPROD=:NCUSTOMPMLC,
         SLDMOVPRODAX=:NSLDLCAX, CUSTOMPMMOVPRODAX=:NCUSTOMPMLCAX,
         FLAG=:CFLAG, CODEMPNT=:ICODEMPNT, CODFILIALNT=:SCODFILIALNT,
         CODNAT=:CCODNAT, DOCMOVPROD=:IDOCMOVPROD, CODEMPTM=:ICODEMPTM,
         CODFILIALTM=:SCODFILIALTM, CODTIPOMOV=:ICODTIPOMOV, CODEMPLE=:ICODEMPLE,
         CODFILIALLE=:SCODFILIALLE, CODLOTE=:CCODLOTE, ESTOQMOVPROD=:CESTOQMOVPROD ,
         CODEMPAX=:ICODEMPAX, CODFILIALAX=:SCODFILIALAX, CODALMOX=:ICODALMOX
        WHERE CODEMP=:ICODEMP AND CODFILIAL=:SCODFILIAL AND CODMOVPROD=:ICODMOVPROD;
   end
   else /*  caso não tenha nenhuma alteração relevânte para processamento */

  --  execute procedure sgdebugsp('antes do reprocessamento','5SG');

      UPDATE EQMOVPROD SET FLAG=:CFLAG, CODEMPNT=:ICODEMPNT, CODFILIALNT=:SCODFILIALNT,
         CODNAT=:CCODNAT, DOCMOVPROD=:IDOCMOVPROD, CODEMPTM=:ICODEMPTM,
         CODFILIALTM=:SCODFILIALTM, CODTIPOMOV=:ICODTIPOMOV, CODEMPLE=:ICODEMPLE,
         CODFILIALLE=:SCODFILIALLE, CODLOTE=:CCODLOTE,
         CODEMPAX=:ICODEMPAX, CODFILIALAX=:SCODFILIALAX, CODALMOX=:ICODALMOX
        WHERE CODEMP=:ICODEMP AND CODFILIAL=:SCODFILIAL AND CODMOVPROD=:ICODMOVPROD;
end
^

/* Alter (SGRETVERSAO) */
ALTER PROCEDURE SGRETVERSAO RETURNS(VERSAO VARCHAR(30))
 AS
begin
    versao = '1.2.4.4 (20/01/2011)';
    suspend;
end
^

/* Restore procedure body: EQMOVPRODDSP */
ALTER PROCEDURE EQMOVPRODDSP(ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
ICODEMPIV INTEGER,
SCODFILIALIV SMALLINT,
ICODINVPROD INTEGER,
ICODEMPCP INTEGER,
SCODFILIALCP SMALLINT,
ICODCOMPRA INTEGER,
SCODITCOMPRA SMALLINT,
ICODEMPVD INTEGER,
SCODFILIALVD SMALLINT,
CTIPOVENDA CHAR(1),
ICODVENDA INTEGER,
SCODITVENDA SMALLINT,
ICODEMPRM INTEGER,
SCODFILIALRM SMALLINT,
ICODRMA INTEGER,
SCODITRMA SMALLINT,
ICODEMPOP INTEGER,
SCODFILIALOP SMALLINT,
ICODOP INTEGER,
SSEQOP SMALLINT,
SSEQENTOP SMALLINT,
DDTMOVPROD DATE,
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER,
CMULTIALMOX CHAR(1))
 AS
declare variable icodemp integer;
declare variable scodfilial smallint;
declare variable icodmovprod integer;
declare variable nsldmovprod numeric(15,5);
declare variable ncustompmmovprod numeric(15,5);
declare variable nsldmovprodax numeric(15,5);
declare variable ncustompmmovprodax numeric(15,5);
begin
  /* Procedure de deleção da tabela eqmovprod */
  SELECT ICODEMP, SCODFILIAL, ICODMOVPROD
  FROM EQMOVPRODRETCODSP(:ICODEMPIV, :SCODFILIALIV, :ICODINVPROD, :ICODEMPCP,
    :SCODFILIALCP, :ICODCOMPRA, :SCODITCOMPRA, :ICODEMPVD, :SCODFILIALVD,
    :CTIPOVENDA, :ICODVENDA, :SCODITVENDA, :ICODEMPRM, :SCODFILIALRM, :ICODRMA,
    :SCODITRMA, :ICODEMPOP,  :SCODFILIALOP,  :ICODOP, :SSEQOP, :sseqentop)
    INTO :ICODEMP, :SCODFILIAL, :ICODMOVPROD;

  SELECT NSALDO, NCUSTOMPM, NSALDOAX, NCUSTOMPMAX
  FROM EQMOVPRODSLDSP(:ICODEMP, :SCODFILIAL, :ICODMOVPROD,
   :ICODEMPPD, :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, 0, 0,
   :ICODEMPAX, :SCODFILIALAX, :ICODALMOX, :CMULTIALMOX)
     INTO :NSLDMOVPROD, :NCUSTOMPMMOVPROD, :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX  ;

  /* DELETAR EQMOVPROD */
  DELETE FROM EQMOVPROD WHERE CODEMP=:ICODEMP AND CODFILIAL=:SCODFILIAL
    AND CODMOVPROD=:ICODMOVPROD;

  /* REPROCESSAR ESTOQUE */
  SELECT NSLDPRC, NCUSTOMPMPRC, NSLDPRCAX, NCUSTOMPMPRCAX
    FROM EQMOVPRODPRCSLDSP( :SCODFILIAL, :ICODMOVPROD, :ICODEMPPD,
      :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, null, :NSLDMOVPROD, :NCUSTOMPMMOVPROD,
      :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX, :ICODEMPAX, :SCODFILIALAX, :ICODALMOX,
      :CMULTIALMOX)
    INTO :NSLDMOVPROD, :NCUSTOMPMMOVPROD, :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX;

  /* ATUALIZA CUSTO NO CADASTRO DE PRODUTOS
   OPERADOR 1 PARA EFETUAR A ATUALIZAÇÃO SEMPRE
  EXECUTE PROCEDURE EQMOVPRODATCUSTSP( 1, :ICODEMP, :SCODFILIAL,
   :ICODMOVPROD,  :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, 0);
   */

  suspend;
end
^

/* Create Trigger... */
CREATE TRIGGER FNITRECEBERTGBI02 FOR FNITRECEBER
ACTIVE BEFORE INSERT POSITION 0 
AS
    DECLARE VARIABLE nrodiascomp INTEGER;
    DECLARE VARIABLE datets TIMESTAMP;
BEGIN
    SELECT tc.nrodiascomp FROM fntipocob tc
        WHERE tc.codemp = NEW.codemptc
        AND tc.codfilial = NEW.codfilialtc
        AND tc.codtipocob = NEW.codtipocob INTO :nrodiascomp;

    NEW.dtprevitrec = NEW.dtvencitrec;

    IF(nrodiascomp IS NOT NULL) THEN
    BEGIN
        datets = CAST (NEW.dtprevitrec AS TIMESTAMP);
        datets = addday(datets, nrodiascomp);
        NEW.dtprevitrec = CAST(datets AS DATE);
    END
END
^

SET TERM ; ^

Update Rdb$Triggers set Rdb$Description =
'Trigger para atualização na data de previsão do título de acordo com parâmetro definido no tipo de cobrança.'
where Rdb$Trigger_Name='FNITRECEBERTGBI02';

SET TERM ^ ;

CREATE TRIGGER LFMODDOCFISCTGBU FOR LFMODDOCFISC
ACTIVE BEFORE UPDATE POSITION 0 
as
begin
  new.DTALT=cast('now' AS DATE);
  new.IDUSUALT=USER;
  new.HALT = cast('now' AS TIME);
end
^


/* Alter exist trigger... */
SET TERM ; ^

DROP TRIGGER CPCOMPRATGBI;

SET TERM ^ ;

CREATE TRIGGER CPCOMPRATGBI FOR CPCOMPRA
ACTIVE BEFORE INSERT POSITION 0 
AS
  DECLARE VARIABLE IFILIALTIPOMOV INTEGER;
BEGIN
  SELECT ICODFILIAL FROM SGRETFILIAL(new.CODEMP,'EQTIPOMOV') INTO IFILIALTIPOMOV;
  SELECT T.FISCALTIPOMOV FROM EQTIPOMOV T WHERE T.CODTIPOMOV=new.CODTIPOMOV
         AND T.CODEMP=new.CODEMP AND T.CODFILIAL=:IFILIALTIPOMOV INTO new.FLAG;
  IF ( new.FLAG <> 'S') THEN
  BEGIN
    new.FLAG = 'N';
  END
  new.STATUSCOMPRA = 'P1';
  IF (new.VLRPRODCOMPRA IS NULL) THEN new.VLRPRODCOMPRA = 0;
  IF (new.VLRDESCCOMPRA IS NULL) THEN new.VLRDESCCOMPRA = 0;
  IF (new.VLRDESCITCOMPRA IS NULL) THEN new.VLRDESCITCOMPRA = 0;
  IF (new.VLRCOMPRA IS NULL) THEN new.VLRCOMPRA = 0;
  IF (new.VLRBASEICMSCOMPRA IS NULL) THEN new.VLRBASEICMSCOMPRA = 0;
  IF (new.VLRICMSCOMPRA IS NULL) THEN new.VLRICMSCOMPRA = 0;
  IF (new.VLRISENTASCOMPRA IS NULL) THEN new.VLRISENTASCOMPRA = 0;
  IF (new.VLROUTRASCOMPRA IS NULL) THEN new.VLROUTRASCOMPRA = 0;
  IF (new.VLRBASEIPICOMPRA IS NULL) THEN new.VLRBASEIPICOMPRA = 0;
  IF (new.VLRIPICOMPRA IS NULL) THEN new.VLRIPICOMPRA = 0;
  IF (new.VLRLIQCOMPRA IS NULL) THEN new.VLRLIQCOMPRA = 0;
  IF (new.VLRFRETECOMPRA IS NULL) THEN new.VLRFRETECOMPRA = 0;
  IF (new.VLRADICCOMPRA IS NULL) THEN new.VLRADICCOMPRA = 0;
  IF (new.vlrfunruralcompra IS NULL) THEN new.vlrfunruralcompra = 0;
  if (new.sitdoc is null) then new.sitdoc='00';

END
^

/* Alter exist trigger... */
SET TERM ; ^

DROP TRIGGER CPCOMPRATGBU;

SET TERM ^ ;

CREATE TRIGGER CPCOMPRATGBU FOR CPCOMPRA
ACTIVE BEFORE UPDATE POSITION 0 
AS
  DECLARE VARIABLE dVlrPagar NUMERIC(15, 5);
  DECLARE VARIABLE sStatusPag CHAR(2);
  DECLARE VARIABLE IFILIALTIPOMOV INTEGER;
  DECLARE VARIABLE IFILIALPAG INTEGER;
  DECLARE VARIABLE CSEQNFTIPOMOV CHAR(1);
BEGIN
  IF (new.EMMANUT IS NULL) THEN
     new.EMMANUT='N';
  if (new.BLOQCOMPRA IS NULL) then
     new.BLOQCOMPRA='N';
  if ( ( (old.BLOQCOMPRA IS  NULL) OR (old.BLOQCOMPRA='N') ) AND (new.BLOQCOMPRA='S') )  then
  begin
      new.DTALT=cast('now' AS DATE);
      new.IDUSUALT=user;
      new.HALT=cast('now' AS TIME);
  end
  IF ( not ( (new.EMMANUT='S') or ( (old.EMMANUT='S') and (old.EMMANUT is not null)) ) ) THEN
  BEGIN
      if ( (old.BLOQCOMPRA IS NOT NULL AND old.BLOQCOMPRA='S') or (new.BLOQCOMPRA='S') ) then
         EXCEPTION CPCOMPRAEX04 'ESTA COMPRA ESTÁ BLOQUEADA!!!';
      new.DTALT=cast('now' AS DATE);
      new.IDUSUALT=USER;
      new.HALT = cast('now' AS TIME);
      SELECT ICODFILIAL FROM SGRETFILIAL(new.CODEMP,'EQTIPOMOV') INTO IFILIALTIPOMOV;
      SELECT ICODFILIAL FROM SGRETFILIAL(new.CODEMP,'FNPAGAR') INTO IFILIALPAG;
      SELECT T.FISCALTIPOMOV, T.SEQNFTIPOMOV FROM EQTIPOMOV T WHERE T.CODTIPOMOV=new.CODTIPOMOV
             AND T.CODEMP=new.CODEMP AND T.CODFILIAL = :IFILIALTIPOMOV INTO new.FLAG, :CSEQNFTIPOMOV;
      IF (old.IMPNOTACOMPRA IS NULL) THEN
         new.IMPNOTACOMPRA = 'N';
      IF ( (CSEQNFTIPOMOV IS NOT NULL) AND (CSEQNFTIPOMOV='S') ) THEN
      BEGIN
         IF  (new.IMPNOTACOMPRA='N') THEN
         BEGIN
            SELECT DOC FROM LFNOVODOCSP(new.Serie,new.CODEMPSE,new.CODFILIALSE) INTO new.DocCompra;
            new.IMPNOTACOMPRA = 'S';
         END
         ELSE IF (old.DOCCOMPRA != new.DOCCOMPRA) THEN
         BEGIN
            new.DOCCOMPRA = old.DOCCOMPRA;
         END
      END

      IF ( new.FLAG <> 'S') THEN
      BEGIN
        new.FLAG = 'N';
      END
      IF (new.VLRDESCCOMPRA IS NULL) THEN
        new.VLRDESCCOMPRA = 0;
      IF (new.VLRADICCOMPRA IS NULL) THEN
        new.VLRADICCOMPRA = 0;
      IF (new.VLRFRETECOMPRA IS NULL) THEN
        new.VLRFRETECOMPRA = 0;
      IF (old.STATUSCOMPRA = 'P1')  THEN
      BEGIN
        IF (new.STATUSCOMPRA = 'C1') THEN
        BEGIN
          new.STATUSCOMPRA = 'C2';
        END
      END
      ELSE IF ((old.STATUSCOMPRA IN ('P4','C4')) AND (new.STATUSCOMPRA IN ('P4','C4'))) THEN
      BEGIN
        EXCEPTION CPCOMPRAEX03;
      END
      ELSE IF ((old.STATUSCOMPRA IN ('P2','C2')) AND (new.STATUSCOMPRA IN ('P3','C3'))) THEN
      BEGIN
        SELECT STATUSPAG,VLRPARCPAG FROM FNPAGAR WHERE CODCOMPRA=new.CODCOMPRA
             AND CODEMP=new.CODEMP AND CODFILIAL = :IFILIALPAG INTO :sStatusPag,:dVlrPagar;
        IF ((sStatusPag = 'PD') AND (new.VLRLIQCOMPRA != :dVlrPagar)) THEN
          EXCEPTION CPCOMPRAEX04;
      END
       IF ((substr(old.STATUSCOMPRA,1,1) IN ('P','C')) AND (substr(new.STATUSCOMPRA,1,1)='X')) THEN
      BEGIN
           new.vlrdescitcompra = 0;
           new.vlrprodcompra = 0;
           new.vlrbaseicmscompra = 0;
           new.vlricmscompra = 0;
           new.vlrisentascompra = 0;
           new.vlroutrascompra = 0;
           new.vlrbaseipicompra = 0;
           new.vlripicompra = 0;
           new.vlrliqcompra = 0;
           new.vlripicompra = 0;
      END
  END
    -- Atualizando o status do documento fiscal para 02 - Documento cancelado, quando nota for cancelado pelo sistema.
  IF (substr(new.statuscompra,1,1) = 'C' and new.sitdoc!='02') THEN
  begin
    new.sitdoc = '02';
  end
END
^

/* Alter exist trigger... */
SET TERM ; ^

DROP TRIGGER EQITRMATGAU;

SET TERM ^ ;

CREATE TRIGGER EQITRMATGAU FOR EQITRMA
ACTIVE AFTER UPDATE POSITION 0 
as
    declare variable icodemptm int;
    declare variable icodfilialtm smallint;
    declare variable icodtipomov int;
    declare variable ddtrma date;
    declare variable baixarmaaprov char(1);
    declare variable estoque char(1);
    declare variable qtdmov numeric(15,5);

begin
    -- Carregando preferências
    select baixarmaaprov from sgprefere5
    where codemp=new.codemp and codfilial=new.codfilial
    into :baixarmaaprov;

    qtdmov = new.qtdexpitrma;

    if(:baixarmaaprov='S' and new.sitaprovitrma in ('AT','AP')) then
    begin
        estoque = 'S';
        qtdmov = new.qtdaprovitrma;
    end
    else
    begin
        estoque = 'N';
    end


    -- Carregando informações do cabeçalho (RMA)
    select r.dtareqrma,r.codemptm,r.codfilialtm,r.codtipomov
    from eqrma r
    where r.codrma = new.codrma and r.codemp=new.codemp and r.codfilial = new.codfilial
    into :ddtrma,:icodemptm,:icodfilialtm,:icodtipomov;

    -- Movimentação de estoque
    execute procedure eqmovprodiudsp('U',new.codemppd, new.codfilialpd, new.codprod,
        new.codemple, new.codfilialle, new.codlote, :icodemptm,:icodfilialtm, :icodtipomov,
        null, null, null ,null, null,null, null, null, null, null, null, null,
        new.codemp, new.codfilial, new.codrma, new.coditrma, null, null, null, null,
        null, null, null, null, :ddtrma, new.codrma, :estoque, :qtdmov, new.precoitrma,
        new.codempax, new.codfilialax, new.codalmox );

end
^

/* Alter exist trigger... */
SET TERM ; ^

DROP TRIGGER VDVENDATGBI;

SET TERM ^ ;

CREATE TRIGGER VDVENDATGBI FOR VDVENDA
ACTIVE BEFORE INSERT POSITION 0 
AS
  DECLARE VARIABLE sTipoMov CHAR(2);
BEGIN
  EXECUTE PROCEDURE VDCLIENTEATIVOSP(new.CODEMPCL, new.CODFILIALCL, new.CODCLI);
/*  EXECUTE PROCEDURE FNLIBCREDSP(new.CODVENDA,new.CODCLI,new.CODEMPCL,new.CODFILIALCL,null); */
  IF (new.VLRPRODVENDA IS NULL) THEN new.VLRPRODVENDA = 0;
  IF (new.VLRDESCVENDA IS NULL) THEN new.VLRDESCVENDA = 0;
  IF (new.VLRDESCITVENDA IS NULL) THEN new.VLRDESCITVENDA = 0;
  IF (new.VLRVENDA IS NULL) THEN new.VLRVENDA = 0;
  IF (new.VLRBASEICMSVENDA IS NULL) THEN new.VLRBASEICMSVENDA = 0;
  IF (new.VLRICMSVENDA IS NULL) THEN new.VLRICMSVENDA = 0;
  IF (new.VLRPISVENDA IS NULL) THEN new.VLRPISVENDA = 0;
  IF (new.VLRIRVENDA IS NULL) THEN new.VLRIRVENDA = 0;
  IF (new.VLRCSOCIALVENDA IS NULL) THEN new.VLRCSOCIALVENDA = 0;
  IF (new.VLRISENTASVENDA IS NULL) THEN new.VLRISENTASVENDA = 0;
  IF (new.VLROUTRASVENDA IS NULL) THEN new.VLROUTRASVENDA = 0;
  IF (new.VLRBASEIPIVENDA IS NULL) THEN new.VLRBASEIPIVENDA = 0;
  IF (new.VLRIPIVENDA IS NULL) THEN new.VLRIPIVENDA = 0;
  IF (new.VLRLIQVENDA IS NULL) THEN new.VLRLIQVENDA = 0;
  IF (new.VLRCOMISVENDA IS NULL) THEN new.VLRCOMISVENDA = 0;
  IF (new.VLRFRETEVENDA IS NULL) THEN new.VLRFRETEVENDA = 0;
  IF (new.VLRADICVENDA IS NULL) THEN new.VLRADICVENDA = 0;
  IF (new.TIPOVENDA IS NULL) THEN new.TIPOVENDA = 'V';
  IF (new.VLRBASEISSVENDA IS NULL) THEN new.VLRBASEISSVENDA = 0;
  IF (new.VLRISSVENDA IS NULL) THEN new.VLRISSVENDA = 0;
  IF (new.VLRPISVENDA IS NULL) THEN new.VLRPISVENDA = 0;
  IF (new.VLRIRVENDA IS NULL) THEN new.VLRIRVENDA = 0;
  IF (new.VLRCSOCIALVENDA IS NULL) THEN new.VLRCSOCIALVENDA = 0;
  IF (new.vlrbasepisvenda IS NULL) THEN new.vlrbasepisvenda = 0;
  IF (new.vlrbasecofinsvenda IS NULL) THEN new.vlrbasecofinsvenda = 0;
  IF (new.vlrpisvenda IS NULL) THEN new.vlrpisvenda = 0;
  IF (new.vlrcofinsvenda IS NULL) THEN new.vlrcofinsvenda = 0;
  IF (new.vlrbasecomis IS NULL) THEN new.vlrbasecomis = 0;
  if (new.sitdoc is null) then new.sitdoc='00';

  IF (new.CODCAIXA IS NULL) THEN
    SELECT CODTERM FROM SGRETCAIXA INTO new.CODCAIXA;
  SELECT ICODFILIAL FROM SGRETFILIAL(new.CODEMP,'PVCAIXA') INTO new.CODFILIALCX;
  new.CODEMPCX = new.CODEMP;
  IF (NOT new.tipovenda = 'E') THEN -- Se for ECF não precisa buscar o DOC, porque o DOC é o numero do cupom.
      SELECT DOC FROM LFNOVODOCSP(new.Serie,new.CODEMPSE,new.CODFILIALSE) INTO new.DocVenda;
  SELECT TIPOMOV,FISCALTIPOMOV FROM EQTIPOMOV WHERE CODTIPOMOV=new.CODTIPOMOV
         AND CODEMP=new.CODEMP AND CODFILIAL = new.CODFILIALTM INTO sTipoMov,new.FLAG;
  IF ( new.FLAG <> 'S') THEN
  BEGIN
     new.FLAG = 'N';
  END
  if ((new.STATUSVENDA is null) OR (RTRIM(new.STATUSVENDA) = '*')) then
  BEGIN
     IF (sTipoMov = 'VD') THEN new.STATUSVENDA = 'V1';
     ELSE new.STATUSVENDA = 'P1';
  END
END
^

/* Alter exist trigger... */
SET TERM ; ^

DROP TRIGGER VDVENDATGBU;

SET TERM ^ ;

CREATE TRIGGER VDVENDATGBU FOR VDVENDA
ACTIVE BEFORE UPDATE POSITION 0 
AS
  DECLARE VARIABLE ICODFILIAL INTEGER;
  DECLARE VARIABLE ICODITVENDA INTEGER;
  DECLARE VARIABLE iCodTipoMov INTEGER;
  DECLARE VARIABLE sSerie CHAR(4);
  DECLARE VARIABLE credicmssimples CHAR(1);
  DECLARE VARIABLE iCodFilialPref smallint;
  DECLARE VARIABLE dDesc NUMERIC(15, 5);
  DECLARE VARIABLE PERCPISFILIAL NUMERIC(9,2);
  DECLARE VARIABLE PERCCOFINSFILIAL NUMERIC(9,2);
  DECLARE VARIABLE PERCIRFILIAL NUMERIC(9,2);
  DECLARE VARIABLE PERCCSOCIALFILIAL NUMERIC(9,2);
  DECLARE VARIABLE PERCSIMPLESFILIAL NUMERIC(9,2);
  DECLARE VARIABLE VLRPRODITVENDA NUMERIC(15, 5);
  DECLARE VARIABLE QTDITVENDA NUMERIC(9,2);
  DECLARE VARIABLE VLRCOMISITVENDA NUMERIC(15, 5);
  DECLARE VARIABLE VLRDESCITVENDA NUMERIC(15, 5);
  DECLARE VARIABLE PERCCOMISITVENDA NUMERIC(9,2);
  DECLARE VARIABLE SIMPLESFILIAL CHAR(1);
  DECLARE VARIABLE SIMPLESCLI CHAR(1);
  DECLARE VARIABLE PESSOACLI CHAR(1);          
  DECLARE VARIABLE NVLRFRETE NUMERIC(15,5);
  DECLARE VARIABLE CADICFRETEVD CHAR(1);
  DECLARE VARIABLE PERCIT NUMERIC(9,2);
  DECLARE VARIABLE RETENSAOIMP CHAR(1);

BEGIN

  retensaoimp = 'N';

  IF (new.EMMANUT IS NULL) THEN
     new.EMMANUT='N';
  if (new.BLOQVENDA IS NULL) then
     new.BLOQVENDA='N';
  if ( ( (old.BLOQVENDA IS  NULL) OR (old.BLOQVENDA='N') ) AND (new.BLOQVENDA='S') )  then
  begin
      new.DTALT=cast('now' AS DATE);
      new.IDUSUALT=user;
      new.HALT=cast('now' AS TIME);
  end
  IF ( not ( (new.EMMANUT='S') or ( (old.EMMANUT='S') and (old.EMMANUT is not null)) ) ) THEN
  BEGIN
      SELECT ICODFILIAL FROM SGRETFILIAL(new.CODEMP, 'SGPREFERE1') INTO iCodFilialPref;
      EXECUTE PROCEDURE VDCLIENTEATIVOSP(new.CODEMPCL, new.CODFILIALCL, new.CODCLI);

      if ( (old.BLOQVENDA IS NOT NULL AND old.BLOQVENDA='S') or (new.BLOQVENDA='S') and old.chavenfevenda=new.chavenfevenda) then
         EXCEPTION VDVENDAEX05 'ESTA VENDA ESTÁ BLOQUEADA!!!';


      new.DTALT=cast('now' AS DATE);
      new.IDUSUALT=user;
      new.HALT=cast('now' AS TIME);
      SELECT CODFILIALSEL FROM SGCONEXAO WHERE NRCONEXAO=CURRENT_CONNECTION AND
          CONECTADO > 0 INTO ICODFILIAL;
      IF (substr(old.STATUSVENDA,1,1) = 'C' and old.chavenfevenda=new.chavenfevenda ) THEN
        EXCEPTION VDVENDAEX05;
      IF (substr(old.STATUSVENDA,1,1) = 'D' and old.chavenfevenda=new.chavenfevenda) THEN
        EXCEPTION VDVENDAEX05 'ESTA VENDA FOI DEVOLVIDA!';
      IF ((SUBSTR(old.STATUSVENDA,1,1) = 'P') AND (SUBSTR(new.STATUSVENDA,1,1) = 'V' ) AND new.IMPNOTAVENDA = 'N') THEN
      BEGIN
        SELECT T2.CODTIPOMOV, T2.SERIE FROM EQTIPOMOV T2, EQTIPOMOV T WHERE T2.CODEMP=T.CODEMPTM
               AND T2.CODFILIAL=T.CODFILIALTM AND T2.CODTIPOMOV = T.CODTIPOMOVTM
               AND T.CODEMP=new.CODEMPTM AND T.CODFILIAL=new.CODFILIALTM AND T.CODTIPOMOV=new.CODTIPOMOV
               INTO :iCodTipoMov, :sSerie;
        IF (iCodTipoMov IS NULL) THEN
          SELECT T.CODTIPOMOV, T.SERIE FROM SGPREFERE1 P, EQTIPOMOV T WHERE P.CODEMPTM=T.CODEMP AND
                 P.CODFILIALTM=T.CODFILIAL AND P.CODTIPOMOV = T.CODTIPOMOV
                 AND P.CODEMP=new.CODEMP AND P.CODFILIAL = :iCodFilialPref INTO :iCodTipoMov, :sSerie;
        new.CODTIPOMOV = :iCodTipoMov;
        new.SERIE = :sSerie;
        IF ( ( not (old.IMPNOTAVENDA = 'S') ) AND ( not (new.IMPNOTAVENDA = 'S') ) ) THEN
        BEGIN
            SELECT DOC FROM LFNOVODOCSP(new.Serie,new.CODEMPSE,new.CODFILIALSE) INTO new.DocVenda;
            new.IMPNOTAVENDA = 'S';
        END
      END
      SELECT FISCALTIPOMOV FROM EQTIPOMOV WHERE CODTIPOMOV=new.CODTIPOMOV
             AND CODEMP=new.CODEMP AND CODFILIAL = new.codfilialtm INTO new.FLAG;
      IF (new.FLAG<>'S') THEN
        new.FLAG = 'N';
      SELECT VLRFRETEVD, ADICFRETEVD FROM VDFRETEVD WHERE CODVENDA=old.CODVENDA AND TIPOVENDA=old.TIPOVENDA AND ADICFRETEVD = 'S'
             AND CODEMP=old.CODEMP AND CODFILIAL = old.codfilial INTO new.VLRFRETEVENDA, :CADICFRETEVD;
      IF (new.VLRDESCVENDA IS NULL) THEN
        new.VLRDESCVENDA = 0;
      IF (new.VLRDESCITVENDA IS NULL) THEN
        new.VLRDESCITVENDA = 0;
      IF (new.VLRADICVENDA IS NULL) THEN
        new.VLRADICVENDA = 0;
      IF (new.VLRFRETEVENDA IS NULL) THEN
        new.VLRFRETEVENDA = 0;
      IF (new.VLRPRODVENDA IS NULL) THEN
        new.VLRPRODVENDA = 0;
      IF (new.VLRIPIVENDA IS NULL) THEN
        new.VLRIPIVENDA = 0;
      IF (new.VLRBASEICMSVENDA IS NULL) THEN
        new.VLRBASEICMSVENDA = 0;
      IF (new.VLRDESCITVENDA > 0) THEN
        dDesc = new.VLRDESCITVENDA;
      ELSE
        dDesc = new.VLRDESCVENDA;
      IF (new.VLRBASEICMSSTVENDA IS NULL) THEN
        new.VLRBASEICMSSTVENDA = 0;
      IF (new.VLRICMSSTVENDA IS NULL) THEN
        new.VLRICMSSTVENDA = 0;

      SELECT C.SIMPLESCLI,C.PESSOACLI FROM VDCLIENTE C WHERE C.CODCLI=new.CODCLI AND
        C.CODFILIAL=new.CODFILIALCL AND C.CODEMP=new.CODEMPCL INTO SIMPLESCLI,PESSOACLI;
      SELECT SIMPLESFILIAL,PERCPISFILIAL,PERCCOFINSFILIAL,PERCIRFILIAL,PERCCSOCIALFILIAL,coalesce(PERCSIMPLESFILIAL,0)
        FROM SGFILIAL WHERE CODEMP=new.CODEMP AND CODFILIAL=:ICODFILIAL
        INTO SIMPLESFILIAL,PERCPISFILIAL,PERCCOFINSFILIAL,PERCIRFILIAL,PERCCSOCIALFILIAL,PERCSIMPLESFILIAL;
      IF (SIMPLESFILIAL = 'N') THEN
      BEGIN
        new.VLRIRVENDA = (new.vlrliqvenda/100)*PERCIRFILIAL;
        new.VLRCSOCIALVENDA = (new.vlrliqvenda/100)*PERCCSOCIALFILIAL;
      END
      ELSE
      BEGIN
        new.VLRIRVENDA = 0;
        new.VLRCSOCIALVENDA = 0;

        /*Verifica se deve destacar crédito de icms (simples)*/
        select p1.credicmssimples,p1.retensaoimp from sgprefere1 p1 where p1.codemp=new.codemp and p1.codfilial=:icodfilialpref
        into credicmssimples,retensaoimp;

        if(credicmssimples='S') then
        begin
            new.vlricmssimples = (new.vlrprodvenda/100) * percsimplesfilial ;
            new.percicmssimples = percsimplesfilial;
        end

      END
      if (CADICFRETEVD = 'S') then
         NVLRFRETE = new.VLRFRETEVENDA;
      else
         NVLRFRETE = 0;

      new.VLRLIQVENDA = coalesce(new.VLRPRODVENDA,0)
                      - coalesce(dDesc,0)
                      + coalesce(new.VLRADICVENDA,0)
                      + coalesce(:NVLRFRETE,0)
                      + coalesce(new.VLRIPIVENDA,0)
                      + coalesce(new.vlricmsstvenda,0);

      if (SIMPLESCLI = 'N' AND PESSOACLI = 'J' AND RETENSAOIMP = 'S') then
      begin
        new.VLRLIQVENDA =
             cast(
                (coalesce(new.VLRLIQVENDA,0)) -
                (case when new.calcpisvenda='S' then coalesce(new.vlrpisvenda,0) else 0 end) -
                (case when new.calccofinsvenda='S' then coalesce(new.vlrcofinsvenda,0) else 0 end) -
                (case when new.calcirvenda='S' then coalesce(new.vlrirvenda,0) else 0 end) -
                (case when new.calccsocialvenda='S' then coalesce(new.vlrcsocialvenda,0) else 0 end)
            as numeric(15, 5));
      end

      IF ((substr(old.STATUSVENDA,1,1) IN ('P','V')) AND (substr(new.STATUSVENDA,1,1)='C')) THEN
      BEGIN
          new.VLRDESCITVENDA = 0;
          new.VLRPRODVENDA = 0;
          new.VLRBASEICMSVENDA = 0;
          new.VLRICMSVENDA = 0;
          new.VLRISENTASVENDA = 0;
          new.VLROUTRASVENDA = 0;
          new.VLRBASEIPIVENDA = 0;
          new.VLRIPIVENDA = 0;
          new.VLRLIQVENDA = 0;
          new.VLRCOMISVENDA = 0;
          new.VLRISSVENDA = 0;
          new.VLRBASEISSVENDA = 0;
          new.vlrpisvenda = 0;
          new.vlrcofinsvenda = 0;
          new.vlrirvenda = 0;
          new.vlrcsocialvenda =0;
          new.vlrbaseicmsstvenda=0;
          new.vlricmsstvenda=0;
      END
    /**
       COMISSAO
    **/
      IF ((NOT NEW.VLRCOMISVENDA IS NULL) AND
          (NEW.VLRLIQVENDA > 0) AND
          ((NOT NEW.VLRDESCVENDA = OLD.VLRDESCVENDA) OR (NOT NEW.PERCMCOMISVENDA = OLD.PERCMCOMISVENDA))) then
      BEGIN
        /* Distribuindo a comissao: */
        FOR SELECT CODITVENDA,VLRPRODITVENDA,QTDITVENDA,coalesce(VLRCOMISITVENDA,0),coalesce(vlrdescitvenda,0),
            coalesce(iv.perccomisitvenda,0)
            FROM VDITVENDA IV
            WHERE CODEMP=new.CODEMP AND CODFILIAL=new.CODFILIAL AND CODVENDA=new.CODVENDA and tipovenda=new.tipovenda
            INTO ICODITVENDA,VLRPRODITVENDA,QTDITVENDA,VLRCOMISITVENDA,VLRDESCITVENDA,PERCCOMISITVENDA DO
        BEGIN
          /* Calculo do item.: */
          /* INCLUIDO PARA DISTRIBUIR A COMISSAO MENOS O DESCONTO PROPORCIONALMENTE*/
          PERCIT = 0;
          IF (new.VLRPRODVENDA > 0 AND NOT new.VLRDESCITVENDA > 0 AND new.VLRDESCVENDA > 0) THEN
          BEGIN
            PERCIT = (100*VLRPRODITVENDA) / new.VLRPRODVENDA;
            VLRDESCITVENDA = (new.VLRDESCVENDA  * PERCIT) / 100;
          END
          IF (new.VLRPRODVENDA > 0 AND new.PERCMCOMISVENDA > 0) THEN
          BEGIN
            PERCCOMISITVENDA = new.PERCMCOMISVENDA;
            /* Retira.. */
            new.VLRCOMISVENDA = new.VLRCOMISVENDA - VLRCOMISITVENDA;
            /* Atualiza.. */
            VLRCOMISITVENDA = ((VLRPRODITVENDA - VLRDESCITVENDA) * PERCCOMISITVENDA) / 100;
            /* Adiciona.. */
            new.VLRCOMISVENDA = new.VLRCOMISVENDA + VLRCOMISITVENDA;
          END
          ELSE IF (new.PERCMCOMISVENDA=0) then
          BEGIN
              VLRCOMISITVENDA = 0;
              PERCCOMISITVENDA = 0;
              new.VLRCOMISVENDA = 0;
          END
          UPDATE VDITVENDA SET VLRCOMISITVENDA=:VLRCOMISITVENDA,PERCCOMISITVENDA=:PERCCOMISITVENDA
          WHERE CODITVENDA=:ICODITVENDA AND CODVENDA=new.CODVENDA AND TIPOVENDA=new.TIPOVENDA AND CODEMP=new.CODEMP AND CODFILIAL=new.CODFILIAL;
        END
      END
      /* Calcula o percentual medio da comissao */
      ELSE IF (new.PERCMCOMISVENDA = old.PERCMCOMISVENDA AND new.VLRLIQVENDA > 0) THEN
      begin
         -- new.PERCMCOMISVENDA = (new.VLRCOMISVENDA/new.VLRLIQVENDA)*100.000;
         -- Modificado, pois causava divergencia em vendas geradas a partir de orçamentos.
          new.PERCMCOMISVENDA = (new.VLRCOMISVENDA/(new.vlrprodvenda-new.vlrdescvenda)) * 100;
      end

      IF (new.STATUSVENDA = 'V4') THEN
      BEGIN
        new.IMPNOTAVENDA = 'S';
        new.STATUSVENDA = 'V3';
      END
      IF ((new.IMPNOTAVENDA = 'S') AND (old.IMPNOTAVENDA = 'S')) THEN
      BEGIN
        new.DOCVENDA = old.DOCVENDA;
      END
  END

  -- Atualizando o status do documento fiscal para 02 - Documento cancelado, quando nota for cancelado pelo sistema.
  IF (substr(new.STATUSVENDA,1,1) = 'C' and new.sitdoc!='02') THEN
  begin
    new.sitdoc = '02';
  end


END
^

/* Alter Procedure... */
/* Alter (EQMOVPRODCSLDSP) */
ALTER PROCEDURE EQMOVPRODCSLDSP(ICODEMPTM INTEGER,
SCODFILIALTM SMALLINT,
ICODTIPOMOV INTEGER,
NQTDMOVPROD NUMERIC(15,5),
NPRECOMOVPROD NUMERIC(15,5),
NCUSTOMPMMOVPROD NUMERIC(15,5),
NSLDMOVPROD NUMERIC(15,5))
 RETURNS(NCUSTOMPM NUMERIC(15,5),
NSALDO NUMERIC(15,5),
CESTOQMOVPROD CHAR(1),
CTIPOMOVPROD CHAR(1),
SOPERADOR SMALLINT)
 AS
begin
  /* Procedure que retorna o cálculo de custo e saldo */
  NCUSTOMPM = 0;
  NSALDO = 0;
  SELECT CESTIPOMOV, SOPERADOR
     FROM EQMOVPRODCKTMSP( :ICODEMPTM, :SCODFILIALTM, :ICODTIPOMOV)
     INTO :CTIPOMOVPROD, :SOPERADOR;
  if (SOPERADOR=0) then
  begin
     CESTOQMOVPROD = 'N';
     NSALDO = NSLDMOVPROD;
  end
  else
  begin  /* verifica se é para controlar estoque */
     CESTOQMOVPROD = 'S';
     NSALDO = NSLDMOVPROD + CAST ( (NQTDMOVPROD * SOPERADOR) AS NUMERIC(15, 5) );
  end
  if ( (NSALDO > NSLDMOVPROD) AND (NSALDO > 0) ) then
  begin
    if ( (NSLDMOVPROD * NCUSTOMPMMOVPROD)  <= 0) then
       NCUSTOMPM = NPRECOMOVPROD;
    else
        NCUSTOMPM = ( cast(NSLDMOVPROD * NCUSTOMPMMOVPROD as numeric(15,5) ) +
        cast(NQTDMOVPROD * NPRECOMOVPROD as numeric(15,5)) ) / NSALDO ;
  end
  else
      NCUSTOMPM = NCUSTOMPMMOVPROD;

  suspend;
end
^

/* Alter (EQMOVPRODDSP) */
ALTER PROCEDURE EQMOVPRODDSP(ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
ICODEMPIV INTEGER,
SCODFILIALIV SMALLINT,
ICODINVPROD INTEGER,
ICODEMPCP INTEGER,
SCODFILIALCP SMALLINT,
ICODCOMPRA INTEGER,
SCODITCOMPRA SMALLINT,
ICODEMPVD INTEGER,
SCODFILIALVD SMALLINT,
CTIPOVENDA CHAR(1),
ICODVENDA INTEGER,
SCODITVENDA SMALLINT,
ICODEMPRM INTEGER,
SCODFILIALRM SMALLINT,
ICODRMA INTEGER,
SCODITRMA SMALLINT,
ICODEMPOP INTEGER,
SCODFILIALOP SMALLINT,
ICODOP INTEGER,
SSEQOP SMALLINT,
SSEQENTOP SMALLINT,
DDTMOVPROD DATE,
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER,
CMULTIALMOX CHAR(1))
 AS
declare variable icodemp integer;
declare variable scodfilial smallint;
declare variable icodmovprod integer;
declare variable nsldmovprod numeric(15,5);
declare variable ncustompmmovprod numeric(15,5);
declare variable nsldmovprodax numeric(15,5);
declare variable ncustompmmovprodax numeric(15,5);
begin
  /* Procedure de deleção da tabela eqmovprod */
  SELECT ICODEMP, SCODFILIAL, ICODMOVPROD
  FROM EQMOVPRODRETCODSP(:ICODEMPIV, :SCODFILIALIV, :ICODINVPROD, :ICODEMPCP,
    :SCODFILIALCP, :ICODCOMPRA, :SCODITCOMPRA, :ICODEMPVD, :SCODFILIALVD,
    :CTIPOVENDA, :ICODVENDA, :SCODITVENDA, :ICODEMPRM, :SCODFILIALRM, :ICODRMA,
    :SCODITRMA, :ICODEMPOP,  :SCODFILIALOP,  :ICODOP, :SSEQOP, :sseqentop)
    INTO :ICODEMP, :SCODFILIAL, :ICODMOVPROD;

  SELECT NSALDO, NCUSTOMPM, NSALDOAX, NCUSTOMPMAX
  FROM EQMOVPRODSLDSP(:ICODEMP, :SCODFILIAL, :ICODMOVPROD,
   :ICODEMPPD, :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, 0, 0,
   :ICODEMPAX, :SCODFILIALAX, :ICODALMOX, :CMULTIALMOX)
     INTO :NSLDMOVPROD, :NCUSTOMPMMOVPROD, :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX  ;

  /* DELETAR EQMOVPROD */
  DELETE FROM EQMOVPROD WHERE CODEMP=:ICODEMP AND CODFILIAL=:SCODFILIAL
    AND CODMOVPROD=:ICODMOVPROD;

  /* REPROCESSAR ESTOQUE */
  SELECT NSLDPRC, NCUSTOMPMPRC, NSLDPRCAX, NCUSTOMPMPRCAX
    FROM EQMOVPRODPRCSLDSP( :SCODFILIAL, :ICODMOVPROD, :ICODEMPPD,
      :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, null, :NSLDMOVPROD, :NCUSTOMPMMOVPROD,
      :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX, :ICODEMPAX, :SCODFILIALAX, :ICODALMOX,
      :CMULTIALMOX)
    INTO :NSLDMOVPROD, :NCUSTOMPMMOVPROD, :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX;

  /* ATUALIZA CUSTO NO CADASTRO DE PRODUTOS
   OPERADOR 1 PARA EFETUAR A ATUALIZAÇÃO SEMPRE
  EXECUTE PROCEDURE EQMOVPRODATCUSTSP( 1, :ICODEMP, :SCODFILIAL,
   :ICODMOVPROD,  :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, 0);
   */

  suspend;
end
^

/* Alter (EQMOVPRODISP) */
ALTER PROCEDURE EQMOVPRODISP(ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
ICODEMPLE INTEGER,
SCODFILIALLE SMALLINT,
CCODLOTE VARCHAR(20),
ICODEMPTM INTEGER,
SCODFILIALTM SMALLINT,
ICODTIPOMOV INTEGER,
ICODEMPIV INTEGER,
SCODFILIALIV SMALLINT,
ICODINVPROD INTEGER,
ICODEMPCP INTEGER,
SCODFILIALCP SMALLINT,
ICODCOMPRA INTEGER,
SCODITCOMPRA SMALLINT,
ICODEMPVD INTEGER,
SCODFILIALVD SMALLINT,
CTIPOVENDA CHAR(1),
ICODVENDA INTEGER,
SCODITVENDA SMALLINT,
ICODEMPRM INTEGER,
SCODFILIALRM SMALLINT,
ICODRMA INTEGER,
SCODITRMA SMALLINT,
ICODEMPOP INTEGER,
SCODFILIALOP SMALLINT,
ICODOP INTEGER,
SSEQOP SMALLINT,
SSEQENTOP SMALLINT,
ICODEMPNT INTEGER,
SCODFILIALNT SMALLINT,
CCODNAT CHAR(4),
DDTMOVPROD DATE,
IDOCMOVPROD INTEGER,
CFLAG CHAR(1),
NQTDMOVPROD NUMERIC(15,5),
NPRECOMOVPROD NUMERIC(15,5),
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER,
CMULTIALMOX CHAR(1))
 AS
declare variable scodfilial smallint;
declare variable icodmovprod integer;
declare variable cestoqmovprod char(1);
declare variable ctipomovprod char(1);
declare variable nsldmovprod numeric(15,5);
declare variable ncustompmmovprod numeric(15,5);
declare variable soperador smallint;
declare variable nsldmovprodax numeric(15,5);
declare variable ncustompmmovprodax numeric(15,5);
begin
  /* Procedure de inserção na tabela eqmovprod */

  SELECT NSALDO, NCUSTOMPM, NSALDOAX, NCUSTOMPMAX FROM EQMOVPRODSLDSP(null, null, null, :ICODEMPPD,
     :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, :NPRECOMOVPROD, :NPRECOMOVPROD,
     :ICODEMPAX, :SCODFILIALAX, :ICODALMOX, :CMULTIALMOX )
     INTO :NSLDMOVPROD, :NCUSTOMPMMOVPROD, :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX ;

  /* Verifica se haverá mudança de saldo*/
  SELECT NSALDO, NCUSTOMPM, CESTOQMOVPROD, CTIPOMOVPROD, SOPERADOR FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
      :ICODTIPOMOV, :NQTDMOVPROD, :NPRECOMOVPROD, :NCUSTOMPMMOVPROD, :NSLDMOVPROD)
      INTO :NSLDMOVPROD, :NCUSTOMPMMOVPROD, :CESTOQMOVPROD, :CTIPOMOVPROD, :SOPERADOR;

  if (CMULTIALMOX='N') then
  begin
     NSLDMOVPRODAX = NSLDMOVPROD;
     NCUSTOMPMMOVPRODAX = NCUSTOMPMMOVPROD;
  end
  else
  begin
      SELECT NSALDO, NCUSTOMPM FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
          :ICODTIPOMOV, :NQTDMOVPROD, :NPRECOMOVPROD, :NCUSTOMPMMOVPRODAX, :NSLDMOVPRODAX)
        INTO :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX;
  end

  SELECT SCODFILIAL, ICODMOVPROD FROM EQMOVPRODSEQSP(:ICODEMPPD)
     INTO :SCODFILIAL, :ICODMOVPROD;  /* encontra o próximo código e a filial*/

   INSERT INTO EQMOVPROD ( CODEMP, CODFILIAL, CODMOVPROD,
      CODEMPPD, CODFILIALPD , CODPROD , CODEMPLE ,
      CODFILIALLE , CODLOTE , CODEMPTM, CODFILIALTM,
      CODTIPOMOV, CODEMPIV , CODFILIALIV , CODINVPROD ,
      CODEMPCP , CODFILIALCP , CODCOMPRA , CODITCOMPRA , CODEMPVD ,
      CODFILIALVD , TIPOVENDA , CODVENDA , CODITVENDA , CODEMPRM ,
      CODFILIALRM , CODRMA , CODITRMA ,
      CODEMPOP, CODFILIALOP, CODOP, SEQOP, SEQENTOP,
      CODEMPNT , CODFILIALNT ,
      CODNAT , DTMOVPROD , DOCMOVPROD , FLAG , QTDMOVPROD ,
      PRECOMOVPROD, ESTOQMOVPROD, TIPOMOVPROD, SLDMOVPROD, CUSTOMPMMOVPROD,
      SLDMOVPRODAX, CUSTOMPMMOVPRODAX, CODEMPAX, CODFILIALAX, CODALMOX )
   VALUES ( :ICODEMPPD, :SCODFILIAL, :ICODMOVPROD,
    :ICODEMPPD , :SCODFILIALPD , :ICODPROD , :ICODEMPLE ,
    :SCODFILIALLE , :CCODLOTE , :ICODEMPTM, :SCODFILIALTM,
    :ICODTIPOMOV, :ICODEMPIV , :SCODFILIALIV ,
    :ICODINVPROD , :ICODEMPCP , :SCODFILIALCP , :ICODCOMPRA ,
    :SCODITCOMPRA , :ICODEMPVD , :SCODFILIALVD , :CTIPOVENDA ,
    :ICODVENDA , :SCODITVENDA , :ICODEMPRM , :SCODFILIALRM ,
    :ICODRMA , :SCODITRMA , :ICODEMPOP, :SCODFILIALOP, :ICODOP, :SSEQOP, :sseqentop,
    :ICODEMPNT , :SCODFILIALNT , :CCODNAT ,
    :DDTMOVPROD , :IDOCMOVPROD , :CFLAG , :NQTDMOVPROD ,
    :NPRECOMOVPROD, :CESTOQMOVPROD, :CTIPOMOVPROD, :NSLDMOVPROD, :NCUSTOMPMMOVPROD,
    :NSLDMOVPRODAX,  :NCUSTOMPMMOVPRODAX, :ICODEMPAX, :SCODFILIALAX, :ICODALMOX );

  /* REPROCESSAR ESTOQUE */

  SELECT NSLDPRC, NCUSTOMPMPRC, NSLDPRCAX, NCUSTOMPMPRCAX
    FROM EQMOVPRODPRCSLDSP( :SCODFILIAL, :ICODMOVPROD, :ICODEMPPD,
     :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, null, :NSLDMOVPROD, :NCUSTOMPMMOVPROD,
     :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX, :ICODEMPAX, :SCODFILIALAX, :ICODALMOX,
     :CMULTIALMOX)
    INTO :NSLDMOVPROD, :NCUSTOMPMMOVPROD, :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX ;

 /* ATUALIZA O CUSTO NO CADASTRO DE PRODUTOS
   EXECUTE PROCEDURE EQMOVPRODATCUSTSP(:SOPERADOR, :ICODEMPPD, :SCODFILIAL,
    :ICODMOVPROD, :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, :NCUSTOMPMMOVPROD); 
 */


  suspend;
end
^

/* Alter (EQMOVPRODIUDSP) */
ALTER PROCEDURE EQMOVPRODIUDSP(CIUD CHAR(1),
ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
ICODEMPLE INTEGER,
SCODFILIALLE SMALLINT,
CCODLOTE VARCHAR(20),
ICODEMPTM INTEGER,
SCODFILIALTM SMALLINT,
ICODTIPOMOV INTEGER,
ICODEMPIV INTEGER,
SCODFILIALIV SMALLINT,
ICODINVPROD INTEGER,
ICODEMPCP INTEGER,
SCODFILIALCP SMALLINT,
ICODCOMPRA INTEGER,
SCODITCOMPRA SMALLINT,
ICODEMPVD INTEGER,
SCODFILIALVD SMALLINT,
CTIPOVENDA CHAR(1),
ICODVENDA INTEGER,
SCODITVENDA SMALLINT,
ICODEMPRM INTEGER,
SCODFILIALRM SMALLINT,
ICODRMA INTEGER,
SCODITRMA SMALLINT,
ICODEMPOP INTEGER,
SCODFILIALOP SMALLINT,
ICODOP INTEGER,
SSEQOP SMALLINT,
SSEQENTOP SMALLINT,
ICODEMPNT INTEGER,
SCODFILIALNT SMALLINT,
CCODNAT CHAR(4),
DDTMOVPROD DATE,
IDOCMOVPROD INTEGER,
CFLAG CHAR(1),
NQTDMOVPROD NUMERIC(15,5),
NPRECOMOVPROD NUMERIC(15,5),
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER)
 AS
declare variable cmultialmox char(1);
begin
  /* Procedure que controle INSERT, UPDATE E DELETE da tabela eqmovprod */

  /* Linha incluida para passar como parâmetro se é multi almoxarifado
      Como o objetivo de evitar I/O
  */
  SELECT CMULTIALMOX FROM SGRETMULTIALMOXSP(:ICODEMPPD) INTO :CMULTIALMOX;
  
  if (CIUD='I') then /* SE FOR INSERT */
     execute procedure EQMOVPRODISP( ICODEMPPD, SCODFILIALPD, ICODPROD,
         ICODEMPLE, SCODFILIALLE, CCODLOTE, ICODEMPTM, SCODFILIALTM, ICODTIPOMOV,
         ICODEMPIV, SCODFILIALIV, ICODINVPROD, ICODEMPCP, SCODFILIALCP, ICODCOMPRA,
         SCODITCOMPRA, ICODEMPVD, SCODFILIALVD, CTIPOVENDA, ICODVENDA, SCODITVENDA,
         ICODEMPRM, SCODFILIALRM, ICODRMA, SCODITRMA,
         ICODEMPOP, SCODFILIALOP, ICODOP, SSEQOP, sseqentop,
         ICODEMPNT, SCODFILIALNT,
         CCODNAT, DDTMOVPROD, IDOCMOVPROD, CFLAG, NQTDMOVPROD, NPRECOMOVPROD,
         ICODEMPAX, SCODFILIALAX, ICODALMOX, CMULTIALMOX);
  else if (CIUD='U') then
     execute procedure EQMOVPRODUSP( ICODEMPPD, SCODFILIALPD, ICODPROD,
         ICODEMPLE, SCODFILIALLE, CCODLOTE, ICODEMPTM, SCODFILIALTM, ICODTIPOMOV,
         ICODEMPIV, SCODFILIALIV, ICODINVPROD, ICODEMPCP, SCODFILIALCP, ICODCOMPRA,
         SCODITCOMPRA, ICODEMPVD, SCODFILIALVD, CTIPOVENDA, ICODVENDA, SCODITVENDA,
         ICODEMPRM, SCODFILIALRM, ICODRMA, SCODITRMA,
         ICODEMPOP, SCODFILIALOP, ICODOP, SSEQOP, sseqentop,
         ICODEMPNT, SCODFILIALNT,
         CCODNAT, DDTMOVPROD, IDOCMOVPROD, CFLAG, NQTDMOVPROD, NPRECOMOVPROD,
         ICODEMPAX, SCODFILIALAX, ICODALMOX, CMULTIALMOX);
  else if (CIUD='D') then
     execute procedure EQMOVPRODDSP( ICODEMPPD, SCODFILIALPD, ICODPROD, ICODEMPIV,
         SCODFILIALIV, ICODINVPROD, ICODEMPCP, SCODFILIALCP, ICODCOMPRA, SCODITCOMPRA,
         ICODEMPVD, SCODFILIALVD, CTIPOVENDA, ICODVENDA, SCODITVENDA,
         ICODEMPRM, SCODFILIALRM, ICODRMA, SCODITRMA,
         ICODEMPOP, SCODFILIALOP, ICODOP, SSEQOP, sseqentop,
         DDTMOVPROD, ICODEMPAX, SCODFILIALAX, ICODALMOX, CMULTIALMOX );
  suspend;
end
^

/* Alter (EQMOVPRODPRCSLDSP) */
ALTER PROCEDURE EQMOVPRODPRCSLDSP(SCODFILIAL SMALLINT,
ICODMOVPROD INTEGER,
ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
DDTMOVPROD DATE,
DDTMOVPRODPRC DATE,
NSLDMOVPROD NUMERIC(15,5),
NCUSTOMPMMOVPROD NUMERIC(15,5),
NSLDMOVPRODAX NUMERIC(15,5),
NCUSTOMPMMOVPRODAX NUMERIC(15,5),
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER,
CMULTIALMOX CHAR(1))
 RETURNS(NSLDPRC NUMERIC(15,5),
NCUSTOMPMPRC NUMERIC(15,5),
NSLDPRCAX NUMERIC(15,5),
NCUSTOMPMPRCAX NUMERIC(15,5))
 AS
DECLARE VARIABLE ICODEMPTM INTEGER;
DECLARE VARIABLE SCODFILIALTM SMALLINT;
DECLARE VARIABLE ICODTIPOMOV INTEGER;
DECLARE VARIABLE NQTDMOVPROD NUMERIC(15,5);
DECLARE VARIABLE NPRECOMOVPROD NUMERIC(15,5);
DECLARE VARIABLE ICODMOVPRODPRC INTEGER;
DECLARE VARIABLE CESTOQMOVPROD CHAR(1);
DECLARE VARIABLE ICODEMPAXPRC INTEGER;
DECLARE VARIABLE SCODFILIALAXPRC SMALLINT;
DECLARE VARIABLE ICODALMOXPRC INTEGER;
begin
  /* Procedure de processamento de estoque */
  FOR SELECT MP.CODEMPTM, MP.CODFILIALTM, MP.CODTIPOMOV ,
    MP.QTDMOVPROD, MP.PRECOMOVPROD , MP.CODMOVPROD,
    MP.CODEMPAX, MP.CODFILIALAX, MP.CODALMOX
    FROM EQMOVPROD MP
    WHERE MP.CODEMPPD=:ICODEMPPD AND MP.CODFILIALPD=:SCODFILIALPD AND
       MP.CODPROD=:ICODPROD AND MP.CODEMP=:ICODEMPPD AND MP.CODFILIAL=:SCODFILIAL AND
       ( (MP.DTMOVPROD = :DDTMOVPROD AND MP.CODMOVPROD > :ICODMOVPROD) OR
         (MP.DTMOVPROD>:DDTMOVPROD) ) AND  /* ALTEREI AQUI */
       ( (:DDTMOVPRODPRC IS NULL /* AND MP.CODMOVPROD!=:ICODMOVPROD */) OR
         (MP.DTMOVPROD = :DDTMOVPRODPRC AND MP.CODMOVPROD < :ICODMOVPROD) OR
         (MP.DTMOVPROD < :DDTMOVPRODPRC) )
    ORDER BY MP.DTMOVPROD, MP.CODMOVPROD
    INTO :ICODEMPTM, :SCODFILIALTM, :ICODTIPOMOV,
     :NQTDMOVPROD, :NPRECOMOVPROD, :ICODMOVPRODPRC,
     :ICODEMPAXPRC, :SCODFILIALAXPRC, :ICODALMOXPRC DO
  BEGIN
      SELECT NSALDO, NCUSTOMPM, CESTOQMOVPROD FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
        :ICODTIPOMOV, :NQTDMOVPROD, :NPRECOMOVPROD, :NCUSTOMPMMOVPROD, :NSLDMOVPROD)
      INTO :NSLDMOVPROD, :NCUSTOMPMMOVPROD, :CESTOQMOVPROD;
      if (CMULTIALMOX='N') then /* Se não for multi almoxarifado*/
      begin
         NSLDMOVPRODAX = NSLDMOVPROD;
         NCUSTOMPMMOVPRODAX = NCUSTOMPMMOVPROD;
         UPDATE EQMOVPROD SET SLDMOVPROD=:NSLDMOVPROD, CUSTOMPMMOVPROD=:NCUSTOMPMMOVPROD,
            SLDMOVPRODAX=:NSLDMOVPRODAX, CUSTOMPMMOVPRODAX=:NCUSTOMPMMOVPRODAX,
            ESTOQMOVPROD=:CESTOQMOVPROD
            WHERE CODEMP=:ICODEMPPD AND CODFILIAL=:SCODFILIAL AND CODMOVPROD=:ICODMOVPRODPRC;
      end
      else if (ICODEMPAX=ICODEMPAXPRC AND SCODFILIALAX=SCODFILIALAXPRC AND
          ICODALMOX=ICODALMOXPRC) then
          /* Se for multi almoxarifado e o código do almoxarifado for o mesmo*/
      begin
        SELECT NSALDO, NCUSTOMPM FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
            :ICODTIPOMOV, :NQTDMOVPROD, :NPRECOMOVPROD, :NCUSTOMPMMOVPRODAX, :NSLDMOVPRODAX)
            INTO :NSLDMOVPRODAX, :NCUSTOMPMMOVPRODAX;
        UPDATE EQMOVPROD SET SLDMOVPROD=:NSLDMOVPROD, CUSTOMPMMOVPROD=:NCUSTOMPMMOVPROD,
            SLDMOVPRODAX=:NSLDMOVPRODAX, CUSTOMPMMOVPRODAX=:NCUSTOMPMMOVPRODAX,
            ESTOQMOVPROD=:CESTOQMOVPROD
            WHERE CODEMP=:ICODEMPPD AND CODFILIAL=:SCODFILIAL AND CODMOVPROD=:ICODMOVPRODPRC;
      end
      else /* Se for multi almoxarifado não atualiza almoxarifado diferente */
      begin
        UPDATE EQMOVPROD SET SLDMOVPROD=:NSLDMOVPROD, CUSTOMPMMOVPROD=:NCUSTOMPMMOVPROD,
            ESTOQMOVPROD=:CESTOQMOVPROD
            WHERE CODEMP=:ICODEMPPD AND CODFILIAL=:SCODFILIAL AND CODMOVPROD=:ICODMOVPRODPRC;
      end
      NSLDPRC = NSLDMOVPROD;
      NCUSTOMPMPRC = NCUSTOMPMMOVPROD;
      NSLDPRCAX = NSLDMOVPRODAX;
      NCUSTOMPMPRCAX = NCUSTOMPMMOVPRODAX;
  END
  suspend;
end
^

/* Alter (EQMOVPRODUSP) */
ALTER PROCEDURE EQMOVPRODUSP(ICODEMPPD INTEGER,
SCODFILIALPD SMALLINT,
ICODPROD INTEGER,
ICODEMPLE INTEGER,
SCODFILIALLE SMALLINT,
CCODLOTE VARCHAR(20),
ICODEMPTM INTEGER,
SCODFILIALTM SMALLINT,
ICODTIPOMOV INTEGER,
ICODEMPIV INTEGER,
SCODFILIALIV SMALLINT,
ICODINVPROD INTEGER,
ICODEMPCP INTEGER,
SCODFILIALCP SMALLINT,
ICODCOMPRA INTEGER,
SCODITCOMPRA SMALLINT,
ICODEMPVD INTEGER,
SCODFILIALVD SMALLINT,
CTIPOVENDA CHAR(1),
ICODVENDA INTEGER,
SCODITVENDA SMALLINT,
ICODEMPRM INTEGER,
SCODFILIALRM SMALLINT,
ICODRMA INTEGER,
SCODITRMA SMALLINT,
ICODEMPOP INTEGER,
SCODFILIALOP SMALLINT,
ICODOP INTEGER,
SSEQOP SMALLINT,
SSEQENTOP SMALLINT,
ICODEMPNT INTEGER,
SCODFILIALNT SMALLINT,
CCODNAT CHAR(4),
DDTMOVPROD DATE,
IDOCMOVPROD INTEGER,
CFLAG CHAR(1),
NQTDMOVPROD NUMERIC(15,5),
NPRECOMOVPROD NUMERIC(15,5),
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER,
CMULTIALMOX CHAR(1))
 AS
declare variable icodemp integer;
declare variable scodfilial smallint;
declare variable icodmovprod integer;
declare variable nsldprc numeric(15,5);
declare variable ncustompmprc numeric(15,5);
declare variable nsldprcax numeric(15,5);
declare variable ncustompmprcax numeric(15,5);
declare variable nsldlc numeric(15,5);
declare variable ncustompmlc numeric(15,5);
declare variable nsldlcax numeric(15,5);
declare variable ncustompmlcax numeric(15,5);
declare variable ddtmovprodold date;
declare variable nprecomovprodold numeric(15,5);
declare variable nqtdmovprodold numeric(15,5);
declare variable icodemptmold integer;
declare variable scodfilialtmold smallint;
declare variable icodtipomovold integer;
declare variable calttm char(1);
declare variable ddtprc date;
declare variable ddtprcate date;
declare variable cestoqmovprod char(1);
begin
  /* Procedure de atualização da tabela eqmovprod */

  DDTPRCATE = NULL; /* Até onde deve ser processando o estoque */
 /* localiza movprod */

-- execute procedure sgdebugsp('antes da atualização...','no inicio');

  SELECT ICODEMP, SCODFILIAL, ICODMOVPROD
    FROM EQMOVPRODRETCODSP(:ICODEMPIV, :SCODFILIALIV, :ICODINVPROD, :ICODEMPCP,
      :SCODFILIALCP, :ICODCOMPRA, :SCODITCOMPRA, :ICODEMPVD, :SCODFILIALVD,
      :CTIPOVENDA, :ICODVENDA, :SCODITVENDA, :ICODEMPRM, :SCODFILIALRM,
      :ICODRMA, :SCODITRMA, :ICODEMPOP, :SCODFILIALOP, :ICODOP, :SSEQOP, :sseqentop)
    INTO :ICODEMP, :SCODFILIAL, :ICODMOVPROD;

--  traz valores antigos

  SELECT MP.CODEMPTM, MP.CODFILIALTM, MP.CODTIPOMOV, MP.DTMOVPROD,
       MP.PRECOMOVPROD, MP.QTDMOVPROD  FROM EQMOVPROD MP
     WHERE MP.CODEMP=:ICODEMP AND MP.CODFILIAL=:SCODFILIAL AND MP.CODMOVPROD=:ICODMOVPROD
     INTO :ICODEMPTMOLD, :SCODFILIALTMOLD, :ICODTIPOMOVOLD, :DDTMOVPRODOLD,
       :NPRECOMOVPRODOLD, :NQTDMOVPRODOLD;

   /* abaixo verificação se a alteração de tipo de movimento mexe no estoque */
   SELECT CALTTM FROM EQMOVPRODCKUTMSP(:ICODEMPTM, :SCODFILIALTM, :ICODTIPOMOV,
      :ICODEMPTMOLD, :SCODFILIALTMOLD, :ICODTIPOMOVOLD) INTO :CALTTM;

   /* verifica se há relevância para reprocessamento */
   if ( (DDTMOVPROD!=DDTMOVPRODOLD) OR (CALTTM='S') OR
        (NPRECOMOVPROD!=NPRECOMOVPRODOLD) OR (NQTDMOVPROD!=NQTDMOVPRODOLD) ) then
   begin

   -- execute procedure sgdebugsp('entrou no if','1');


      if ( DDTMOVPRODOLD IS NULL) then
         DDTMOVPRODOLD = DDTMOVPROD; /* garantir que a data antiga não e nula; */
      /* verifica qual data é menor para reprocessamento */
      if ( DDTMOVPROD<=DDTMOVPRODOLD ) then
      begin

     -- execute procedure sgdebugsp('entrou no if','2');

          DDTPRC = DDTMOVPROD;
          if (DDTMOVPROD=DDTMOVPRODOLD) then
             DDTPRCATE = null;
          else
             DDTPRCATE = DDTMOVPRODOLD;
/*          verifica lançamento anterior e traz custo e saldo */
          SELECT NSALDO, NCUSTOMPM, NSALDOAX, NCUSTOMPMAX
             FROM EQMOVPRODSLDSP(:ICODEMP, :SCODFILIAL, :ICODMOVPROD, :ICODEMPPD,
             :SCODFILIALPD, :ICODPROD, :DDTPRC, :NPRECOMOVPROD, :NPRECOMOVPROD,
             :ICODEMPAX, :SCODFILIALAX, :ICODALMOX, :CMULTIALMOX)
             INTO :NSLDPRC, :NCUSTOMPMPRC, :NSLDPRCAX, :NCUSTOMPMPRCAX ;

          /* verifica se havera mudança de saldo */
          SELECT NSALDO, NCUSTOMPM, CESTOQMOVPROD
              FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
              :ICODTIPOMOV, :NQTDMOVPROD, :NPRECOMOVPROD, :NCUSTOMPMPRC, :NSLDPRC)
              INTO :NSLDPRC, :NCUSTOMPMPRC, :CESTOQMOVPROD;
          if (CMULTIALMOX='N') then
          begin
              NSLDPRCAX = NSLDPRC;
              NCUSTOMPMPRCAX = NCUSTOMPMPRC;
          end
          else
          begin
          SELECT NSALDO, NCUSTOMPM
              FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
              :ICODTIPOMOV, :NQTDMOVPROD, :NPRECOMOVPROD, :NCUSTOMPMPRCAX, :NSLDPRCAX)
              INTO :NSLDPRCAX, :NCUSTOMPMPRCAX;
          end
          NCUSTOMPMLC = NCUSTOMPMPRC;
          NSLDLC = NSLDPRC;
          NCUSTOMPMLCAX = NCUSTOMPMPRCAX;
          NSLDLCAX = NSLDPRCAX;
      end
      else
      begin
          DDTPRC = DDTMOVPRODOLD;
          DDTPRCATE = DDTMOVPROD;
          /* verifica lançamento anterior e traz custo e saldo */

       --   execute procedure sgdebugsp('entrou no else','3');

          SELECT NSALDO, NCUSTOMPM, NSALDOAX, NCUSTOMPMAX
             FROM EQMOVPRODSLDSP(:ICODEMP, :SCODFILIAL, :ICODMOVPROD, :ICODEMPPD,
             :SCODFILIALPD, :ICODPROD, :DDTPRC, 0, 0,
             :ICODEMPAX, :SCODFILIALAX, :ICODALMOX, :CMULTIALMOX)
             INTO :NSLDPRC, :NCUSTOMPMPRC, :NSLDPRCAX, :NCUSTOMPMPRCAX ;

          /* verifica lançamento anterior e traz custo e saldo */
          SELECT NSALDO, NCUSTOMPM, NSALDOAX, NCUSTOMPMAX
             FROM EQMOVPRODSLDSP(:ICODEMP, :SCODFILIAL, :ICODMOVPROD, :ICODEMPPD,
             :SCODFILIALPD, :ICODPROD, :DDTMOVPROD, :NCUSTOMPMLC, :NCUSTOMPMLCAX,
             :ICODEMPAX, :SCODFILIALAX, :ICODALMOX, :CMULTIALMOX)
             INTO :NSLDLC, :NCUSTOMPMLC, :NSLDLCAX, :NCUSTOMPMLCAX ;

          /* verifica se havera mudança de saldo */
          SELECT NSALDO, NCUSTOMPM, CESTOQMOVPROD
              FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
              :ICODTIPOMOV, (:NQTDMOVPROD-:NQTDMOVPRODOLD), :NPRECOMOVPROD,
              :NCUSTOMPMLC, :NSLDLC)
              INTO :NSLDLC, :NCUSTOMPMLC, :CESTOQMOVPROD;
          if (CMULTIALMOX='N') then
          begin
             NSLDLCAX = NSLDLC;
             NCUSTOMPMLCAX = NCUSTOMPMLC;
          end
          else
          begin
              SELECT NSALDO, NCUSTOMPM
                  FROM EQMOVPRODCSLDSP(:ICODEMPTM, :SCODFILIALTM,
                  :ICODTIPOMOV, (:NQTDMOVPROD-:NQTDMOVPRODOLD), :NPRECOMOVPROD,
                  :NCUSTOMPMLCAX, :NSLDLCAX)
                  INTO :NSLDLCAX, :NCUSTOMPMLCAX;
          end

      end

      /* REPROCESSAR ESTOQUE */

    --  execute procedure sgdebugsp('antes do reprocessamento ESTOQUE',CESTOQMOVPROD);
    --   execute procedure sgdebugsp('antes do reprocessamento QTD',NQTDMOVPROD);
    --   execute procedure sgdebugsp('MOVPROD COD',ICODMOVPROD);

       SELECT NSLDPRC, NCUSTOMPMPRC, NSLDPRCAX, NCUSTOMPMPRCAX
        FROM EQMOVPRODPRCSLDSP( :SCODFILIAL, :ICODMOVPROD, :ICODEMPPD,
          :SCODFILIALPD, :ICODPROD, :DDTPRC, :DDTPRCATE, :NSLDPRC,
          :NCUSTOMPMPRC, :NSLDPRCAX, :NCUSTOMPMPRCAX,
          :ICODEMPAX, :SCODFILIALAX, :ICODALMOX, :CMULTIALMOX)
        INTO :NSLDPRC, :NCUSTOMPMPRC, :NSLDPRCAX, :NCUSTOMPMPRCAX;

      UPDATE EQMOVPROD SET DTMOVPROD=:DDTMOVPROD,
         QTDMOVPROD=:NQTDMOVPROD, PRECOMOVPROD=:NPRECOMOVPROD,
         SLDMOVPROD=:NSLDLC, CUSTOMPMMOVPROD=:NCUSTOMPMLC,
         SLDMOVPRODAX=:NSLDLCAX, CUSTOMPMMOVPRODAX=:NCUSTOMPMLCAX,
         FLAG=:CFLAG, CODEMPNT=:ICODEMPNT, CODFILIALNT=:SCODFILIALNT,
         CODNAT=:CCODNAT, DOCMOVPROD=:IDOCMOVPROD, CODEMPTM=:ICODEMPTM,
         CODFILIALTM=:SCODFILIALTM, CODTIPOMOV=:ICODTIPOMOV, CODEMPLE=:ICODEMPLE,
         CODFILIALLE=:SCODFILIALLE, CODLOTE=:CCODLOTE, ESTOQMOVPROD=:CESTOQMOVPROD ,
         CODEMPAX=:ICODEMPAX, CODFILIALAX=:SCODFILIALAX, CODALMOX=:ICODALMOX
        WHERE CODEMP=:ICODEMP AND CODFILIAL=:SCODFILIAL AND CODMOVPROD=:ICODMOVPROD;
   end
   else /*  caso não tenha nenhuma alteração relevânte para processamento */

  --  execute procedure sgdebugsp('antes do reprocessamento','5SG');

      UPDATE EQMOVPROD SET FLAG=:CFLAG, CODEMPNT=:ICODEMPNT, CODFILIALNT=:SCODFILIALNT,
         CODNAT=:CCODNAT, DOCMOVPROD=:IDOCMOVPROD, CODEMPTM=:ICODEMPTM,
         CODFILIALTM=:SCODFILIALTM, CODTIPOMOV=:ICODTIPOMOV, CODEMPLE=:ICODEMPLE,
         CODFILIALLE=:SCODFILIALLE, CODLOTE=:CCODLOTE,
         CODEMPAX=:ICODEMPAX, CODFILIALAX=:SCODFILIALAX, CODALMOX=:ICODALMOX
        WHERE CODEMP=:ICODEMP AND CODFILIAL=:SCODFILIAL AND CODMOVPROD=:ICODMOVPROD;
end
^

/* Alter (SGRETVERSAO) */
ALTER PROCEDURE SGRETVERSAO RETURNS(VERSAO VARCHAR(30))
 AS
begin
    versao = '1.2.4.4 (20/01/2011)';
    suspend;
end
^

SET TERM ; ^

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=1
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODEMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=2
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=3
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=4
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODEMPPG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=5
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFILIALPG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=6
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODPLANOPAG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=7
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODEMPFR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=8
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFILIALFR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=9
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=10
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODEMPSE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=11
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFILIALSE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=12
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='SERIE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=13
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODEMPTM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=14
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFILIALTM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=15
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=16
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='DOCCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=17
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='DTENTCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=18
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='DTEMITCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=19
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='PERCDESCCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=20
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='PERCIPICOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=21
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRPRODCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=22
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRLIQCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=23
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=24
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRDESCCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=25
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRDESCITCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=26
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRADICCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=27
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRBASEICMSCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=28
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRBASEICMSSTCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=29
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRBASEIPICOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=30
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRBASEPISCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=31
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRBASECOFINSCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=32
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRICMSCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=33
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRICMSSTCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=34
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRIPICOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=35
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRPISCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=36
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRCOFINSCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=37
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRFUNRURALCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=38
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRFRETECOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=39
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLROUTRASCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=40
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='VLRISENTASCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=41
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODEMPTC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=42
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFILIALTC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=43
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODTIPOCOB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=44
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODEMPBO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=45
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFILIALBO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=46
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODBANCO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=47
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='IMPNOTACOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=48
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='BLOQCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=49
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='EMMANUT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=50
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='FLAG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=51
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='ADICFRETECOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=52
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='TIPOFRETECOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=53
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODEMPSOL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=54
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFILIALSOL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=55
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODSOL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=56
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODEMPTN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=57
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFILIALTN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=58
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=59
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='OBSERVACAO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=60
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='OBS01';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=61
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='OBS02';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=62
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='OBS03';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=63
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='OBS04';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=64
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='ADICADICCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=65
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='QTDFRETECOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=66
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='ADICFRETEBASEICMS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=67
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='ADICADICBASEICMS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=68
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='ADICIPIBASEICMS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=69
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CHAVENFECOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=70
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='STATUSCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=71
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='NRODI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=72
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='DTREGDI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=73
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='LOCDESEMBDI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=74
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='SIGLAUFDESEMBDI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=75
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODPAISDESEMBDI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=76
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='DTDESEMBDI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=77
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='IDENTCONTAINER';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=78
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CALCTRIB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=79
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODEMPRM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=80
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFILIALRM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=81
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='TICKET';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=82
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODEMPCT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=83
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFILIALCT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=84
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='NUMCONTA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=85
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODEMPCC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=86
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFILIALCC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=87
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='ANOCC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=88
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODCC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=89
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODEMPPN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=90
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODFILIALPN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=91
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='CODPLAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=92
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='INFCOMPL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=93
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='NUMACDRAW';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=94
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='TIPODOCIMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=95
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='SITDOC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=96
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='DTINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=97
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='HINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=98
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='IDUSUINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=99
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='DTALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=100
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='HALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=101
 WHERE RDB$RELATION_NAME='CPCOMPRA' AND RDB$FIELD_NAME='IDUSUALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=1
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODEMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=2
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=3
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=4
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='RAZFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=5
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODEMPTF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=6
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODFILIALTF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=7
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODTIPOFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=8
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODEMPBO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=9
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODFILIALBO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=10
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODBANCO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=11
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODEMPHP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=12
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODFILIALHP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=13
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODHIST';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=14
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='NOMEFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=15
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='DATAFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=16
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='ATIVOFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=17
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='PESSOAFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=18
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CNPJFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=19
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CPFFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=20
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='INSCFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=21
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='RGFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=22
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='ENDFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=23
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='NUMFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=24
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='COMPLFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=25
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='BAIRFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=26
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CEPFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=27
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CIDFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=28
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='UFFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=29
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CONTFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=30
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='FONEFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=31
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='FAXFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=32
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='AGENCIAFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=33
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CONTAFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=34
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='EMAILFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=35
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='OBSFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=36
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CELFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=37
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CLIFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=38
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='SSPFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=39
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='DDDFONEFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=40
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='DDDFAXFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=41
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='DDDCELFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=42
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='SITEFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=43
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODCONTDEB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=44
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODCONTCRED';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=45
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODFORCONTAB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=46
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODMUNIC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=47
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='SIGLAUF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=48
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODPAIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=49
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODEMPUC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=50
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODFILIALUC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=51
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODUNIFCOD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=52
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODEMPFF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=53
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODFILIALFF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=54
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='CODFISCFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=55
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='SUFRAMAFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=56
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='NRODEPENDFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=57
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='INSCCONREG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=58
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='DTINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=59
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='HINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=60
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='IDUSUINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=61
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='DTALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=62
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='HALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=63
 WHERE RDB$RELATION_NAME='CPFORNECED' AND RDB$FIELD_NAME='IDUSUALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=1
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='CODEMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=2
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='CODFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=3
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='CODCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=4
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='CODEMPTN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=5
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='CODFILIALTN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=6
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='CODTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=7
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='TIPOFRETECP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=8
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='PLACAFRETECP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=9
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='UFFRETECP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=10
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='VLRFRETECP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=11
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='QTDFRETECP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=12
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='PESOBRUTCP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=13
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='PESOLIQCP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=14
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='ESPFRETECP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=15
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='MARCAFRETECP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=16
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='CONHECFRETECP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=17
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='PERCCOMPRAFRETECP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=18
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='ADICFRETECP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=19
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='ADICFRETEBASEICM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=20
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='ALIQICMSFRETECP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=21
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='VLRICMSFRETECP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=22
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='VLRSEGFRETECP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=23
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='DTINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=24
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='HINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=25
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='IDUSUINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=26
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='DTALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=27
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='HALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=28
 WHERE RDB$RELATION_NAME='CPFRETECP' AND RDB$FIELD_NAME='IDUSUALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=1
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODEMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=2
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=3
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=4
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODEMPMN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=5
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODFILIALMN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=6
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODMODNOTA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=7
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODEMPSE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=8
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODFILIALSE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=9
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='SERIE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=10
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='DESCTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=11
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='ESTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=12
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='FISCALTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=13
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='ESTOQTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=14
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='TIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=15
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODEMPTB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=16
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODFILIALTB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=17
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODTAB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=18
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='ESPECIETIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=19
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODEMPTM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=20
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODFILIALTM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=21
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODTIPOMOVTM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=22
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='IMPPEDTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=23
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='IMPNFTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=24
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='IMPBOLTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=25
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='IMPRECTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=26
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='REIMPNFTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=27
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='TUSUTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=28
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='SOMAVDTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=29
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='SEQNFTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=30
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='VLRMFINTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=31
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='MCOMISTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=32
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CTIPOFRETE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=33
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODEMPRC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=34
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODFILIALRC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=35
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODREGRCOMIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=36
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODEMPTN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=37
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODFILIALTN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=38
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=39
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='EMITNFCPMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=40
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODEMPDF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=41
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODFILIALDF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=42
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='CODMODDOCFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=43
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='DTINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=44
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='HINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=45
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='IDUSUINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=46
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='DTALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=47
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='HALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=48
 WHERE RDB$RELATION_NAME='EQTIPOMOV' AND RDB$FIELD_NAME='IDUSUALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=1
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODEMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=2
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=3
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=4
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODEMPBO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=5
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODFILIALBO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=6
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODBANCO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=7
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODEMPPG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=8
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODFILIALPG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=9
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODPLANOPAG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=10
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODEMPCL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=11
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODFILIALCL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=12
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODCLI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=13
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODEMPVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=14
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODFILIALVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=15
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODVEND';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=16
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODEMPVA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=17
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODFILIALVA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=18
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='TIPOVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=19
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=20
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODEMPTC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=21
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODFILIALTC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=22
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODTIPOCOB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=23
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODEMPCB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=24
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODFILIALCB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=25
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODCARTCOB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=26
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='VLRREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=27
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='VLRDESCREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=28
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='VLRMULTAREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=29
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='VLRJUROSREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=30
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='VLRDEVREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=31
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='VLRPARCREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=32
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='VLRPAGOREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=33
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='VLRAPAGREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=34
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='VLRBASECOMIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=35
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='VLRRETENSAOISS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=36
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='DATAREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=37
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='STATUSREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=38
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='VLRCOMIREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=39
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='DTQUITREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=40
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='DOCREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=41
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='NROPARCREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=42
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='OBSREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=43
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='FLAG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=44
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='ALTUSUREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=45
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODEMPCA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=46
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODFILIALCA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=47
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='NUMCONTA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=48
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODEMPPN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=49
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODFILIALPN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=50
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODPLAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=51
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODEMPCC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=52
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODFILIALCC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=53
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='ANOCC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=54
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODCC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=55
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODEMPRR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=56
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODFILIALRR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=57
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='CODRENEGREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=58
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='DTINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=59
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='HINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=60
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='IDUSUINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=61
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='DTALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=62
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='HALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=63
 WHERE RDB$RELATION_NAME='FNRECEBER' AND RDB$FIELD_NAME='IDUSUALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=1
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='CODEMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=2
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='CODFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=3
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='CODTIPOCOB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=4
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='DESCTIPOCOB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=5
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='TIPOFEBRABAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=6
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='TIPOSPED';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=7
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='DUPLCOB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=8
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='OBRIGCARTCOB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=9
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='CODEMPCT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=10
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='CODFILIALCT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=11
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='NUMCONTA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=12
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='SEQTALAO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=13
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='NRODIASCOMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=14
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='DTINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=15
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='HINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=16
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='IDUSUINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=17
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='DTALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=18
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='HALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=19
 WHERE RDB$RELATION_NAME='FNTIPOCOB' AND RDB$FIELD_NAME='IDUSUALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=1
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODEMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=2
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=3
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODFRETE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=4
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='DOCFRETE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=5
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODEMPTN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=6
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODFILIALTN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=7
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=8
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODEMPTM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=9
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODFILIALTM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=10
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=11
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODEMPNT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=12
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODFILIALNT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=13
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODNAT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=14
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='TIPOFRETE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=15
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='TIPOPGTO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=16
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODEMPRE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=17
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODFILIALRE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=18
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODREMET';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=19
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODEMPDE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=20
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODFILIALDE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=21
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODDESTINAT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=22
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='DTEMITFRETE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=23
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='QTDFRETE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=24
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='VLRMERCADORIA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=25
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='VLRFRETE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=26
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='VLRFRETENOTA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=27
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='PESOBRUTO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=28
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='PESOLIQUIDO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=29
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='ALIQICMSFRETE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=30
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='VLRICMSFRETE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=31
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='VLRBASEICMSFRETE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=32
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODEMPPA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=33
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODFILIALPA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=34
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODPAG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=35
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='SERIE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=36
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODEMPRM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=37
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODFILIALRM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=38
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='TICKET';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=39
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CHAVECTE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=40
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODEMPTT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=41
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODFILIALTT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=42
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='CODTRATTRIB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=43
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='DTINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=44
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='HINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=45
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='IDUSUINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=46
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='DTALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=47
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='HALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=48
 WHERE RDB$RELATION_NAME='LFFRETE' AND RDB$FIELD_NAME='IDUSUALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=1
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODEMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=2
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=3
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=4
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODITFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=5
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='ORIGFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=6
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODEMPTT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=7
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODFILIALTT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=8
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='TIPOFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=9
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='TPREDICMSFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=10
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='REDFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=11
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODTRATTRIB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=12
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='NOUFITFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=13
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODEMPFC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=14
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODFILIALFC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=15
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODFISCCLI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=16
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='ALIQFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=17
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='ALIQFISCINTRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=18
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='ALIQLFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=19
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='ALIQIPIFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=20
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='ALIQPISFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=21
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='ALIQCOFINSFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=22
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='ALIQCSOCIALFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=23
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='ALIQIRFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=24
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='ALIQFUNRURALFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=25
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='ALIQIIFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=26
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODEMPME';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=27
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODFILIALME';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=28
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODMENS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=29
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODEMPTM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=30
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODFILIALTM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=31
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=32
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='TIPOST';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=33
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='MARGEMVLAGR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=34
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='GERALFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=35
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODEMPSP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=36
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODFILIALSP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=37
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODSITTRIBPIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=38
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='IMPSITTRIBPIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=39
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODEMPSC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=40
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODFILIALSC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=41
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODSITTRIBCOF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=42
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='IMPSITTRIBCOF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=43
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODEMPSI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=44
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODFILIALSI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=45
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODSITTRIBIPI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=46
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='IMPSITTRIBIPI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=47
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='TPCALCIPI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=48
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='VLRIPIUNIDTRIB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=49
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='MODBCICMS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=50
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='MODBCICMSST';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=51
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODPAIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=52
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='SIGLAUF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=53
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='VLRPISUNIDTRIB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=54
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='VLRCOFUNIDTRIB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=55
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='TIPOUSOITFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=56
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='REDBASEST';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=57
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='REDBASEFRETE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=58
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODEMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=59
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODFILIALRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=60
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODREGRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=61
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODEMPIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=62
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODFILIALIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=63
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='CODSITTRIBISS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=64
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='IMPSITTRIBISS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=65
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='ALIQISSFISC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=66
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='RETENSAOISS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=67
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='INDAPURIPI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=68
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='DTINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=69
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='HINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=70
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='IDUSUINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=71
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='DTALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=72
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='HALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=73
 WHERE RDB$RELATION_NAME='LFITCLFISCAL' AND RDB$FIELD_NAME='IDUSUALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=1
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CODEMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=2
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CODFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=3
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='RAZFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=4
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='NOMEFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=5
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='MZFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=6
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CNPJFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=7
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='INSCFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=8
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='ENDFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=9
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='NUMFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=10
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='COMPLFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=11
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='BAIRFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=12
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CEPFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=13
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CIDFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=14
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='UFFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=15
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='DDDFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=16
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='FONEFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=17
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='FAXFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=18
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='EMAILFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=19
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='WWWFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=20
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CODDISTFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=21
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='PERCPISFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=22
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='PERCCOFINSFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=23
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='PERCIRFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=24
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='PERCCSOCIALFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=25
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='SIMPLESFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=26
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='PERCSIMPLESFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=27
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CODMUNIC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=28
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='SIGLAUF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=29
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CODPAIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=30
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CODEMPUC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=31
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CODFILIALUC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=32
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CODUNIFCOD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=33
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='INSCMUNFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=34
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CNAEFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=35
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='PERCISSFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=36
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CONTRIBIPIFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=37
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='TIMBREFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=38
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='PERFILFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=39
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='INDATIVFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=40
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='DTINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=41
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='HINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=42
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='IDUSUINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=43
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='DTALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=44
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='HALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=45
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='IDUSUALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=46
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CODEMPCO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=47
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CODFILIALCO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=48
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='CODFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=49
 WHERE RDB$RELATION_NAME='SGFILIAL' AND RDB$FIELD_NAME='SUFRAMA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=1
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=2
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=3
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USAREFPROD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=4
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=5
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPTM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=6
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALTM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=7
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USAPEDSEQ';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=8
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USAORCSEQ';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=9
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='FILTRO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=10
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USALIQREL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=11
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TIPOPRECOCUSTO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=12
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='ANOCENTROCUSTO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=13
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='OBSORCPAD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=14
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTIPOMOV2';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=15
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALT2';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=16
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPT2';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=17
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CLASSORC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=18
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TITORCTXT01';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=19
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTIPOMOV3';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=20
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALT3';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=21
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPT3';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=22
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='ORDNOTA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=23
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='SETORVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=24
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='PREFCRED';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=25
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TIPOPREFCRED';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=26
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPMO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=27
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALMO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=28
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODMOEDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=29
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTIPOMOV4';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=30
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALT4';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=31
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPT4';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=32
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USACLASCOMIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=33
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='PERCPRECOCUSTO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=34
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODGRUP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=35
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALGP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=36
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPGP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=37
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODMARCA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=38
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALMC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=39
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPMC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=40
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='RGCLIOBRIG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=41
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TABFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=42
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TABADICVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=43
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TRAVATMNFVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=44
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TIPOVALIDORC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=45
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CLIMESMOCNPJ';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=46
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTBJ';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=47
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPTJ';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=48
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALTJ';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=49
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CNPJOBRIGCLI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=50
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='JUROSPOSCALC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=51
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPFR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=52
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALFR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=53
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=54
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPTN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=55
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALTN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=56
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=57
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPTF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=58
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALTF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=59
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTIPOFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=60
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPT5';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=61
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALT5';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=62
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTIPOMOV5';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=63
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='ESTLOTNEG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=64
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='ESTNEG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=65
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='NATVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=66
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='IPIVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=67
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CUSTOSICMS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=68
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPPG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=69
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALPG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=70
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODPLANOPAG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=71
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPTB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=72
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALTB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=73
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTAB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=74
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPCE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=75
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALCE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=76
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODCLASCLI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=77
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CASASDEC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=78
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CASASDECFIN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=79
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='COMISPDUPL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=80
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPT6';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=81
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALT6';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=82
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTIPOMOV6';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=83
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='BLOQVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=84
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='BLOQCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=85
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='VENDAMATPRIM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=86
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='VENDAPATRIM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=87
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='PEPSPROD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=88
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CNPJFOROBRIG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=89
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='INSCESTFOROBRIG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=90
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='BUSCAPRODSIMILAR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=91
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='MULTIALMOX';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=92
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPT8';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=93
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALT8';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=94
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTIPOMOV8';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=95
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='ESTNEGGRUP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=96
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USATABPE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=97
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TAMDESCPROD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=98
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='DESCCOMPPED';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=99
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='OBSCLIVEND';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=100
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CONTESTOQ';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=101
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='DIASPEDT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=102
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='RECALCPCVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=103
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='RECALCPCORC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=104
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USALAYOUTPED';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=105
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='VERIFALTPARCVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=106
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='BUSCACODPRODGEN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=107
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='FILBUSCGENPROD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=108
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='FILBUSCGENREF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=109
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='FILBUSCGENCODBAR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=110
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='FILBUSCGENCODFAB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=111
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='FILBUSCGENCODFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=112
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='BUSCAVLRULTCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=113
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='ICMSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=114
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USAPRECOZERO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=115
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USAIMGASSORC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=116
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='IMGASSORC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=117
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CONSISTCPFCLI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=118
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CONSISTEIECLI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=119
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CONSISTEIEFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=120
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CONSISTECPFFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=121
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USANOMEVENDORC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=122
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='SISCONTABIL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=123
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='ATBANCOIMPBOL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=124
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TIPOCODBAR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=125
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='ADICORCOBSPED';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=126
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPMENSORC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=127
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALMENSORC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=128
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODMENSORC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=129
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CUSTOCOMPRA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=130
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TABTRANSPCP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=131
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TABTRANSPORC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=132
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TABSOLCP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=133
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='ADICFRETEBASEICM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=134
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='PRECOCPREL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=135
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='DESCORC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=136
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='MULTICOMIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=137
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USUATIVCLI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=138
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPHISTREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=139
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALHISTREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=140
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODHISTREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=141
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPHISTPAG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=142
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALHISTPAG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=143
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODHISTPAG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=144
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPTC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=145
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALTC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=146
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTIPOCLI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=147
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='ESTITRECALTDTVENC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=148
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='LCREDGLOBAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=149
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='VDMANUTCOMOBRIG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=150
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CLASSPED';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=151
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TIPOCLASSPED';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=152
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USAIBGECLI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=153
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USAIBGEFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=154
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USAIBGETRANSP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=155
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='SOMAVOLUMES';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=156
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='BUSCACEP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=157
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='URLWSCEP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=158
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CLASSCP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=159
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='LABELOBS01CP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=160
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='LABELOBS02CP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=161
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='LABELOBS03CP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=162
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='LABELOBS04CP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=163
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CONSISTEIEPF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=164
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CREDICMSSIMPLES';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=165
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPMS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=166
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALMS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=167
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODMENSICMSSIMPLES';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=168
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='GERACOMISVENDAORC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=169
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='GERACODUNIF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=170
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTIPOMOV9';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=171
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALT9';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=172
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPT9';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=173
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPJP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=174
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALJP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=175
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODPLANJP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=176
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPJR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=177
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALJR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=178
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODPLANJR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=179
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPDR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=180
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALDR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=181
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODPLANDR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=182
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPDC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=183
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALDC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=184
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODPLANDC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=185
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='GERAPAGEMIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=186
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='LANCAFINCONTR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=187
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='LANCARMACONTR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=188
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CASASDECPRE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=189
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='VISUALIZALUCR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=190
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CLASSNFE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=191
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='DIRNFE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=192
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='DIRNFELIN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=193
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='FORMATODANFE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=194
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='AMBIENTENFE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=195
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='PROCEMINFE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=196
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='VERPROCNFE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=197
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='KEYLICNFE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=198
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='DTVENCTONFE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=199
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='INFADPRODNFE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=200
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPNF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=201
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALNF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=202
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMAILNF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=203
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='EXIBEPARCOBSDANFE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=204
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='VERSAONFE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=205
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='REGIMETRIBNFE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=206
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='INFCPDEVOLUCAO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=207
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='INFVDREMESSA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=208
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='GERARECEMIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=209
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='RETENSAOIMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=210
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TIPOCUSTOLUC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=211
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TABIMPORTCP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=212
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='HABVLRTOTITORC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=213
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USABUSCAGENPRODCP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=214
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='ADICOBSORCPED';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=215
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USAPRECOCOT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=216
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='BLOQPRECOAPROV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=217
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPFT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=218
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALFT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=219
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTIPOFORFT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=220
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='USAPRECOCOMIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=221
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='ESPECIALCOMIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=222
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='DTINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=223
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALTS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=224
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODTIPOMOVS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=225
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPTS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=226
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='HINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=227
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='IDUSUINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=228
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='DTALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=229
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='HALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=230
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='IDUSUALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=231
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPSV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=232
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALSV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=233
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODPLANOPAGSV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=234
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='ARREDPRECO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=235
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODEMPPC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=236
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODFILIALPC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=237
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='CODPLANPC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=238
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='TPNOSSONUMERO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=239
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='IMPDOCBOL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=240
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='FECHACAIXA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=241
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='FECHACAIXAAUTO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=242
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='NUMDIGIDENTTIT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=243
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='KEYLICEFD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=244
 WHERE RDB$RELATION_NAME='SGPREFERE1' AND RDB$FIELD_NAME='DTVENCTOEFD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=1
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='CODEMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=2
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='CODFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=3
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='TIPOVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=4
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='CODVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=5
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='CODEMPTN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=6
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='CODFILIALTN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=7
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='CODTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=8
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='TIPOFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=9
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='PLACAFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=10
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='UFFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=11
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='VLRFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=12
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='QTDFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=13
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='PESOBRUTVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=14
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='PESOLIQVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=15
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='ESPFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=16
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='MARCAFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=17
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='CONHECFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=18
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='PERCVENDAFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=19
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='FLAG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=20
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='ADICFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=21
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='ADICFRETEBASEICM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=22
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='VLRBASEICMSFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=23
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='ALIQICMSFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=24
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='VLRICMSFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=25
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='VLRSEGFRETEVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=26
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='DTINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=27
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='HINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=28
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='IDUSUINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=29
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='DTALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=30
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='HALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=31
 WHERE RDB$RELATION_NAME='VDFRETEVD' AND RDB$FIELD_NAME='IDUSUALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=1
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODEMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=2
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=3
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=4
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='RAZTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=5
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='NOMETRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=6
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CNPJTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=7
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CPFTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=8
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='INSCTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=9
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='ENDTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=10
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='NUMTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=11
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='COMPLTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=12
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='BAIRTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=13
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CIDTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=14
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CEPTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=15
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='FONETRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=16
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='FAXTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=17
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='UFTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=18
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='TIPOTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=19
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CELTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=20
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CONTTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=21
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='DDDFONETRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=22
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='DDDFAXTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=23
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='DDDCELTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=24
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODMUNIC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=25
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='SIGLAUF';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=26
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODPAIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=27
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODEMPUC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=28
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODFILIALUC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=29
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODUNIFCOD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=30
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODEMPFR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=31
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODFILIALFR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=32
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODFOR';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=33
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CONJUGETRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=34
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODEMPBO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=35
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODFILIALBO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=36
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODBANCO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=37
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='AGENCIATRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=38
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='NUMCONTATRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=39
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='PLACATRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=40
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='NRODEPENDTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=41
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='RGTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=42
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='SSPTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=43
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='CODGPS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=44
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='NROPISTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=45
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='OBSTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=46
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='EMAILTRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=47
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='EMAILNFETRAN';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=48
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='DTINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=49
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='HINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=50
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='IDUSUINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=51
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='DTALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=52
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='HALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=53
 WHERE RDB$RELATION_NAME='VDTRANSP' AND RDB$FIELD_NAME='IDUSUALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=1
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODEMP';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=2
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODFILIAL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=3
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='TIPOVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=4
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=5
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODEMPVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=6
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODFILIALVD';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=7
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODVEND';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=8
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODEMPCL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=9
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODFILIALCL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=10
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODCLI';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=11
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODEMPPG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=12
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODFILIALPG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=13
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODPLANOPAG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=14
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODEMPSE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=15
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODFILIALSE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=16
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='SERIE';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=17
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODEMPTM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=18
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODFILIALTM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=19
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODTIPOMOV';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=20
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODEMPCX';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=21
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODFILIALCX';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=22
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODCAIXA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=23
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='DOCVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=24
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='DTSAIDAVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=25
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='DTEMITVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=26
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRPRODVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=27
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='PERCDESCVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=28
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRDESCVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=29
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRDESCITVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=30
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=31
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRBASEICMSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=32
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRICMSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=33
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CALCICMSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=34
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='IMPICMSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=35
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRISENTASVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=36
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLROUTRASVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=37
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRBASEIPIVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=38
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRLIQVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=39
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='PERCCOMISVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=40
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRCOMISVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=41
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='STATUSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=42
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRFRETEVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=43
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRADICVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=44
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRIPIVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=45
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CALCIPIVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=46
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='IMPIPIVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=47
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='OBSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=48
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODEMPBO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=49
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODFILIALBO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=50
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODBANCO';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=51
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODEMPTC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=52
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODFILIALTC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=53
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODTIPOCOB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=54
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRBASEISSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=55
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRISSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=56
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CALCISSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=57
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='IMPIISSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=58
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='IMPNOTAVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=59
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='FLAG';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=60
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODCLASCOMIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=61
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRPISVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=62
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CALCPISVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=63
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='IMPPISVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=64
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRCOFINSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=65
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CALCCOFINSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=66
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='IMPCOFINSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=67
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRIRVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=68
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CALCIRVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=69
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='IMPIRVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=70
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRCSOCIALVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=71
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CALCCSOCIALVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=72
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='IMPCSOCIALVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=73
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='PERCMCOMISVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=74
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODEMPCM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=75
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODFILIALCM';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=76
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODCLCOMIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=77
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODEMPCB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=78
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODFILIALCB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=79
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODCARTCOB';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=80
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='PEDCLIVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=81
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRICMSSTVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=82
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRBASEICMSSTVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=83
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='EMMANUT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=84
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='BLOQVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=85
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRICMSSIMPLES';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=86
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='PERCICMSSIMPLES';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=87
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRBASEPISVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=88
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRBASECOFINSVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=89
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='VLRBASECOMIS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=90
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CHAVENFEVENDA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=91
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODEMPCA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=92
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='CODFILIALCA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=93
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='NUMCONTA';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=94
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='OBSREC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=95
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='INFCOMPL';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=96
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='SITDOC';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=97
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='DTINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=98
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='HINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=99
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='IDUSUINS';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=100
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='DTALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=101
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='HALT';

UPDATE RDB$RELATION_FIELDS SET RDB$FIELD_POSITION=102
 WHERE RDB$RELATION_NAME='VDVENDA' AND RDB$FIELD_NAME='IDUSUALT';



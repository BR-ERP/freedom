/* Server version: LI-V6.3.3.4870 Firebird 1.5 
   SQLDialect: 3. ODS: 10.1. Forced writes: On. Sweep inteval: 20000.
   Page size: 4096. Cache pages: 75 (300 Kb). Read-only: False. */
SET SQL DIALECT 3;

SET AUTODDL ON;

ALTER TABLE CRCHAMADO ADD CODEMPOS INTEGER;

UPDATE RDB$RELATION_FIELDS SET RDB$DESCRIPTION = 
'Código da empresa do item de ordem de serviço.'
WHERE RDB$RELATION_NAME = 'CRCHAMADO' AND RDB$FIELD_NAME = 'CODEMPOS';

ALTER TABLE CRCHAMADO ADD CODFILIALOS SMALLINT;

UPDATE RDB$RELATION_FIELDS SET RDB$DESCRIPTION = 
'Código da filial da ordem de serviço.'
WHERE RDB$RELATION_NAME = 'CRCHAMADO' AND RDB$FIELD_NAME = 'CODFILIALOS';

ALTER TABLE CRCHAMADO ADD TICKET INTEGER;

UPDATE RDB$RELATION_FIELDS SET RDB$DESCRIPTION = 
'Ticket da ordem de serviço.'
WHERE RDB$RELATION_NAME = 'CRCHAMADO' AND RDB$FIELD_NAME = 'TICKET';

ALTER TABLE CRCHAMADO ADD CODITRECMERC SMALLINT;

UPDATE RDB$RELATION_FIELDS SET RDB$DESCRIPTION = 
'Código do ítem de recebimento de mercadorias.'
WHERE RDB$RELATION_NAME = 'CRCHAMADO' AND RDB$FIELD_NAME = 'CODITRECMERC';

ALTER TABLE CRCHAMADO ADD CODITOS SMALLINT;

UPDATE RDB$RELATION_FIELDS SET RDB$DESCRIPTION = 
'Código do ítem da ordem de serviço.'
WHERE RDB$RELATION_NAME = 'CRCHAMADO' AND RDB$FIELD_NAME = 'CODITOS';

ALTER TABLE EQPRODUTO ADD CODEMPTC SMALLINT;

UPDATE RDB$RELATION_FIELDS SET RDB$DESCRIPTION = 
'Código da empresa do tipo de chamado vinculado ao serviço (Integração CRM/GMS)'
WHERE RDB$RELATION_NAME = 'EQPRODUTO' AND RDB$FIELD_NAME = 'CODEMPTC';

ALTER TABLE EQPRODUTO ADD CODFILIALTC SMALLINT;

UPDATE RDB$RELATION_FIELDS SET RDB$DESCRIPTION = 
'Código da filial do tipo de chamado vinculado ao serviço (Integração CRM/GMS)'
WHERE RDB$RELATION_NAME = 'EQPRODUTO' AND RDB$FIELD_NAME = 'CODFILIALTC';

ALTER TABLE EQPRODUTO ADD CODTPCHAMADO INTEGER;

UPDATE RDB$RELATION_FIELDS SET RDB$DESCRIPTION = 
'Código do tipo de chamado vinculado ao serviço (Integração CRM/GMS)'
WHERE RDB$RELATION_NAME = 'EQPRODUTO' AND RDB$FIELD_NAME = 'CODTPCHAMADO';

ALTER TABLE EQPRODUTO ADD QTDHORASSERV NUMERICDN;

UPDATE RDB$RELATION_FIELDS SET RDB$DESCRIPTION = 
'Quantidade de horas padrão para execução do serviço (Integraçao CRM/GMS)'
WHERE RDB$RELATION_NAME = 'EQPRODUTO' AND RDB$FIELD_NAME = 'QTDHORASSERV';

ALTER TABLE EQRECMERC ADD SOLICITANTE CHAR(50);

UPDATE RDB$RELATION_FIELDS SET RDB$DESCRIPTION = 
'Nome do solicitante do serviço/entrega da mercadoria.'
WHERE RDB$RELATION_NAME = 'EQRECMERC' AND RDB$FIELD_NAME = 'SOLICITANTE';

ALTER TABLE SGPREFERE8 ADD GERACHAMADOOS CHAR DEFAULT 'N' NOT NULL;

UPDATE RDB$RELATION_FIELDS SET RDB$DESCRIPTION = 
'Indica se deve gerar chamado (CRM) a partir de itens de ordem de serviço.'
WHERE RDB$RELATION_NAME = 'SGPREFERE8' AND RDB$FIELD_NAME = 'GERACHAMADOOS';

/* Empty EQADICPRODUTOSP for drop EQPRODUTO(DESCPROD) */
SET TERM ^ ;

ALTER PROCEDURE EQADICPRODUTOSP(ICODPROD INTEGER,
SDESCPROD CHAR(50),
SDESCAUXPROD CHAR(40),
SREFPROD CHAR(13),
SCODFABPROD CHAR(13),
SCODBARPROD CHAR(13),
ICODEMP INTEGER,
ICODFILIAL SMALLINT)
 AS
 BEGIN EXIT; END
^

/* Empty EQCOPIAPROD for drop EQPRODUTO(DESCPROD) */
ALTER PROCEDURE EQCOPIAPROD(ICODPROD INTEGER,
ICODEMP INTEGER,
ICODFILIAL INTEGER)
 RETURNS(ICOD INTEGER)
 AS
 BEGIN EXIT; END
^

/* Empty EQRELDEMANDASP for drop EQPRODUTO(DESCPROD) */
ALTER PROCEDURE EQRELDEMANDASP(ICODEMP INTEGER,
SCODFILIAL SMALLINT,
SCODFILIALPD SMALLINT,
DDTINI DATE,
DDTFIM DATE)
 RETURNS(CODMARCA CHAR(6),
CODGRUP CHAR(14),
CODPROD INTEGER,
REFPROD CHAR(13),
DESCPROD CHAR(50),
DESCGRUP CHAR(50),
SLDINI NUMERIC(15,5),
VLRCOMPRAS NUMERIC(15,5),
VLRDEVENT NUMERIC(15,5),
VLROUTENT NUMERIC(15,5),
VLRVENDAS NUMERIC(15,5),
VLRDEVSAI NUMERIC(15,5),
VLROUTSAI NUMERIC(15,5),
SLDFIM NUMERIC(15,5))
 AS
 BEGIN EXIT; END
^

/* Empty EQRELGIROPROD for drop EQPRODUTO(DESCPROD) */
ALTER PROCEDURE EQRELGIROPROD(CODEMP INTEGER,
CODFILIAL INTEGER,
DATA_BASE DATE)
 RETURNS(CODEMPPD INTEGER,
CODFILIALPD SMALLINT,
CODPROD INTEGER,
REFPROD CHAR(13),
CODFABPROD CHAR(13),
CODBARPROD CHAR(13),
DESCPROD VARCHAR(80),
CODEMPCP INTEGER,
CODFILIALCP SMALLINT,
CODCOMPRA INTEGER,
DOCCOMPRA INTEGER,
IDENTCONTAINER CHAR(20),
CODITCOMPRA SMALLINT,
DTULTCP DATE,
SALDOANT NUMERIC(15,5),
QTDULTCP NUMERIC(15,5),
QTDVENDIDA NUMERIC(15,5),
SALDOATU NUMERIC(15,5),
CODEMPGP INTEGER,
CODFILIALGP INTEGER,
CODGRUP CHAR(14))
 AS
 BEGIN EXIT; END
^

/* Empty EQRELINVPRODSP for drop EQPRODUTO(DESCPROD) */
ALTER PROCEDURE EQRELINVPRODSP(ICODEMP INTEGER,
SCODFILIAL SMALLINT,
CTIPOCUSTO CHAR,
ICODEMPGP INTEGER,
SCODFILIALGP SMALLINT,
CCODGRUP CHAR(14),
DDTESTOQ DATE,
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER)
 RETURNS(CODPROD INTEGER,
REFPROD CHAR(13),
DESCPROD CHAR(50),
CODGRUP CHAR(14),
SALDO NUMERIC(15,5),
CUSTO NUMERIC(15,5),
VLRESTOQ NUMERIC(15,5))
 AS
 BEGIN EXIT; END
^

/* Empty EQRELPEPSSP for drop EQPRODUTO(DESCPROD) */
ALTER PROCEDURE EQRELPEPSSP(ICODEMP INTEGER,
SCODFILIAL SMALLINT,
DTESTOQ DATE,
ICODEMPMC INTEGER,
SCODFILIALMC SMALLINT,
CCODMARCA CHAR(6),
ICODEMPGP INTEGER,
SCODFILIALGP SMALLINT,
CCODGRUP VARCHAR(14),
CTIPOCUSTO CHAR,
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER)
 RETURNS(CODPROD INTEGER,
REFPROD CHAR(13),
DESCPROD CHAR(50),
SLDPROD NUMERIC(15,5),
CUSTOUNIT NUMERIC(15,5),
CUSTOTOT NUMERIC(15,5),
CODBARPROD CHAR(13),
CODFABPROD CHAR(13),
ATIVOPROD CHAR)
 AS
 BEGIN EXIT; END
^

/* Empty PPRELCUSTOSP for drop EQPRODUTO(DESCPROD) */
ALTER PROCEDURE PPRELCUSTOSP(ICODEMP INTEGER,
SCODFILIAL SMALLINT,
DTESTOQ DATE,
ICODEMPMC INTEGER,
SCODFILIALMC SMALLINT,
CCODMARCA CHAR(6),
ICODEMPGP INTEGER,
SCODFILIALGP SMALLINT,
CCODGRUP CHAR(14),
CTIPOCUSTO CHAR,
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER)
 RETURNS(CODPROD INTEGER,
REFPROD CHAR(13),
DESCPROD CHAR(50),
TIPOPROD CHAR,
SLDPROD NUMERIC(15,5),
CUSTOUNIT NUMERIC(15,5),
CUSTOTOT NUMERIC(15,5))
 AS
 BEGIN EXIT; END
^

/* Empty VDRETULTVDCLIPROD for drop EQPRODUTO(DESCPROD) */
ALTER PROCEDURE VDRETULTVDCLIPROD(ICODEMP INTEGER,
ICODCLI INTEGER,
ICODFILIALVD SMALLINT,
ICODVEND INTEGER,
DTINI DATE,
DTFIM DATE,
CODEMPTIPOCL INTEGER,
CODFILIALTIPOCL SMALLINT,
CODTIPOCLI INTEGER)
 RETURNS(RAZCLI_RET CHAR(50),
CODCLI_RET INTEGER,
DESCPROD_RET CHAR(50),
CODPROD_RET INTEGER,
DTEMITVENDA_RET DATE,
DOCVENDA_RET INTEGER,
SERIE_RET CHAR(4),
PRECOVENDA_RET NUMERIC(15,4))
 AS
 BEGIN EXIT; END
^

SET TERM ; ^

RECONNECT;

/* Drop: EQPRODUTOIDX02 (TIdxData) */
DROP INDEX EQPRODUTOIDX02;

DROP VIEW EQCONFESTOQVW01;

DROP VIEW VWCUSTOPROJ01;

SET TERM ^ ;

ALTER TRIGGER EQPRODUTOTGBU
 AS Declare variable I integer;
BEGIN I = 0; END
^

SET TERM ; ^

ALTER TABLE EQPRODUTO ALTER COLUMN DESCPROD TYPE CHAR(100);

/* Create Views... */
/* Create view: EQCONFESTOQVW01 (ViwData.CreateDependDef) */
CREATE VIEW EQCONFESTOQVW01(
CODEMP,
CODFILIAL,
ATIVOPROD,
DESCPROD,
CODPROD,
REFPROD,
SLDLIQPROD,
QTDINVP,
QTDITCOMPRA,
QTDFINALPRODOP,
QTDEXPITRMA,
QTDITVENDA,
SLDMOVPROD,
SLDLIQPRODAX)
 AS 
SELECT P.CODEMP, P.CODFILIAL, P.ATIVOPROD, P.DESCPROD,P.CODPROD,P.REFPROD,P.SLDLIQPROD,
    COALESCE((SELECT SUM(QTDINVP)  FROM EQINVPROD IT WHERE IT.CODEMPPD=P.CODEMP AND
       IT.CODFILIALPD=P.CODFILIAL AND IT.CODPROD=P.CODPROD ),0) QTDINVP,
   COALESCE((SELECT SUM(QTDITCOMPRA)  FROM CPITCOMPRA IC, CPCOMPRA C, EQTIPOMOV TM
       WHERE IC.CODEMPPD=P.CODEMP AND IC.CODFILIALPD=P.CODFILIAL AND
       IC.CODPROD=P.CODPROD AND  C.CODCOMPRA=IC.CODCOMPRA AND
       C.CODEMP=IC.CODEMP AND C.CODFILIAL=IC.CODFILIAL AND  TM.CODTIPOMOV=C.CODTIPOMOV AND
       TM.CODEMP=C.CODEMPTM AND TM.CODFILIAL=C.CODFILIALTM AND TM.ESTOQTIPOMOV='S' ),0) QTDITCOMPRA,
   COALESCE((SELECT SUM(QTDFINALPRODOP) FROM PPOP O, EQTIPOMOV TM
      WHERE O.CODEMPPD=P.CODEMP AND O.CODFILIALPD=P.CODFILIAL AND O.CODPROD=P.CODPROD AND
      TM.CODTIPOMOV=O.CODTIPOMOV AND TM.CODEMP=O.CODEMPTM AND
      TM.CODFILIAL=O.CODFILIALTM  AND TM.ESTOQTIPOMOV='S' ),0) QTDFINALPRODOP,
   COALESCE((SELECT SUM(QTDEXPITRMA) FROM EQRMA R, EQITRMA IR, EQTIPOMOV TM  WHERE IR.CODEMPPD=P.CODEMP AND
      IR.CODFILIALPD=P.CODFILIAL AND IR.CODPROD=P.CODPROD AND  R.CODRMA=IR.CODRMA AND
      R.CODEMP=IR.CODEMP AND R.CODFILIAL=IR.CODFILIAL AND
      TM.CODTIPOMOV=R.CODTIPOMOV AND TM.CODEMP=R.CODEMPTM AND
      TM.CODFILIAL=R.CODFILIALTM  AND TM.ESTOQTIPOMOV='S' ),0) QTDEXPITRMA,
   COALESCE((SELECT SUM(QTDITVENDA) FROM VDITVENDA IV, VDVENDA V, EQTIPOMOV TM
      WHERE IV.CODEMPPD=P.CODEMP AND IV.CODFILIALPD=P.CODFILIAL AND IV.CODPROD=P.CODPROD AND
      V.CODVENDA=IV.CODVENDA AND V.TIPOVENDA=IV.TIPOVENDA AND
      V.CODEMP=IV.CODEMP AND V.CODFILIAL=IV.CODFILIAL AND
      (NOT SUBSTR(V.STATUSVENDA,1,1)='C') AND TM.CODTIPOMOV=V.CODTIPOMOV AND
      TM.CODEMP=V.CODEMPTM AND TM.CODFILIAL=V.CODFILIALTM  AND TM.ESTOQTIPOMOV='S' ),0) QTDITVENDA,
   COALESCE((SELECT FIRST 1 M.SLDMOVPROD FROM EQMOVPROD M WHERE M.CODEMPPD=P.CODEMP AND
      M.CODFILIALPD=P.CODFILIAL AND  M.CODPROD=P.CODPROD
      ORDER BY M.DTMOVPROD DESC, M.CODMOVPROD DESC ),0) SLDMOVPROD,
   COALESCE((SELECT SUM(SP.SLDLIQPROD) FROM EQSALDOPROD SP WHERE SP.CODEMP=P.CODEMP AND
      SP.CODFILIAL=P.CODFILIAL AND SP.CODPROD=P.CODPROD),0) SLDLIQPRODAX
   FROM EQPRODUTO P
;

/* Create view: VWCUSTOPROJ01 (ViwData.CreateDependDef) */
CREATE VIEW VWCUSTOPROJ01(
CODEMP,
CODFILIAL,
CODCLI,
DATA,
DESCCUSTO,
CODCONTR,
CODITCONTR,
TPCONTR,
VLRPREVREC,
QTDCUSTO,
VLRCUSTO,
TIPOCUSTO)
 AS 
select ad.codemp, ad.codfilial, ad.codcli, ad.dataatendo ,cast('Hora trabalhada - ' || rtrim(ae.nomeatend)  as varchar(200)) as desccusto, ad.codcontr,ad.coditcontr, co.tpcontr ,ic.vlritcontr * ic.qtditcontr as vlrreceitaprev,
 ( ad.horaatendofin  - ad.horaatendo ) / 3600 as qtd , sa.custohoratrab as custo, 'M' as tipo
from
vditcontrato ic, atatendimento ad, atatendente ae, rhempregado em, rhempregadosal sa, vdcontrato co
where
ic.codemp=ad.codempct and ic.codfilial=ad.codfilialct and ic.codcontr=ad.codcontr and ic.coditcontr=ad.coditcontr and
co.codemp=ic.codemp and co.codfilial=ic.codfilial and co.codcontr=ic.codcontr and
ae.codemp=ad.codempae and ae.codfilial=ad.codfilialae and ae.codatend=ad.codatend and
em.codemp=ae.codempep and em.codfilial=ae.codfilialep and em.matempr=ae.matempr and
sa.codemp=em.codemp and sa.codfilial=em.codfilial and sa.matempr=em.matempr and sa.seqsal=
(
    select first 1 seqsal from rhempregadosal s1 where s1.codemp=em.codemp and
    s1.codfilial=em.codfilial and s1.matempr=em.matempr and
    s1.dtvigor < cast('today' as date) order by s1.dtvigor desc
)
-- Custos de outras despesas financeiras;
union
select sl.codemp, sl.codfilial, co.codcli, sl.datasublanca, cast(sl.histsublanca as varchar(200)) as desccusto, ic.codcontr, ic.coditcontr, co.tpcontr ,ic.vlritcontr * ic.qtditcontr as vlrreceitaprev,
1.00 as qtd, sl.vlrsublanca  as custo, 'F' as tipo
from
vditcontrato ic, vdcontrato co, fnsublanca sl, fnplanejamento pl
where
ic.codemp=sl.codempct and ic.codfilial=sl.codfilialct and ic.codcontr=sl.codcontr and ic.coditcontr=sl.coditcontr and
co.codemp=ic.codemp and co.codfilial=ic.codfilial and co.codcontr=ic.codcontr
and pl.codemp=sl.codemppn and pl.codfilial=sl.codfilialpn and pl.codplan=sl.codplan and pl.tipoplan='D'
union
--Custos de estoque
select ir.codemp, ir.codfilial, co.codcli, rma.dtaexprma, cast(pd.descprod as varchar(200)) as desccusto ,ic.codcontr, ic.coditcontr, co.tpcontr, ic.vlritcontr * ic.qtditcontr as vlrreceitaprev,
ir.qtdexpitrma as qtd, ir.precoitrma as custo, 'E' as tipo
from
vditcontrato ic, vdcontrato co, eqrma rma, eqitrma ir, eqproduto pd
where ic.codemp=rma.codempct and ic.codfilial=rma.codfilialct and ic.codcontr=rma.codcontr and ic.coditcontr=rma.coditcontr and
co.codemp=ic.codemp and co.codfilial=ic.codfilial and co.codcontr=ic.codcontr
and ir.codemp=rma.codemp and ir.codfilial=rma.codfilial and ir.codrma=rma.codrma and
pd.codemp=ir.codemppd and pd.codfilial=ir.codfilialpd and pd.codprod=ir.codprod and
ir.sitexpitrma='ET'
;


/* Create index... */
CREATE INDEX EQPRODUTOIDX02 ON EQPRODUTO(DESCPROD);


/* Create Foreign Key... */
RECONNECT;

ALTER TABLE CRCHAMADO ADD CONSTRAINT CRCHAMADOFKEQRECMERCITOS FOREIGN KEY (TICKET, CODITRECMERC, CODITOS, CODFILIALOS, CODEMPOS) REFERENCES EQITRECMERCITOS (TICKET, CODITRECMERC, CODITOS, CODFILIAL, CODEMP);

ALTER TABLE EQPRODUTO ADD CONSTRAINT EQPRODUTOFKCRTIPOCHAMADO FOREIGN KEY (CODTPCHAMADO, CODFILIALTC, CODEMPTC) REFERENCES CRTIPOCHAMADO (CODTPCHAMADO, CODFILIAL, CODEMP);

/* Alter Procedure... */
/* Alter (EQADICPRODUTOSP) */
SET TERM ^ ;

ALTER PROCEDURE EQADICPRODUTOSP(ICODPROD INTEGER,
SDESCPROD CHAR(50),
SDESCAUXPROD CHAR(40),
SREFPROD CHAR(13),
SCODFABPROD CHAR(13),
SCODBARPROD CHAR(13),
ICODEMP INTEGER,
ICODFILIAL SMALLINT)
 AS
declare variable icodnovo integer;
declare variable codalmox integer;
declare variable codempax integer;
declare variable codfilialax integer;
declare variable codmoeda char(4);
declare variable codempma integer;
declare variable codfilialma integer;
declare variable codunid varchar(20);
declare variable codempud integer;
declare variable codfilialud integer;
declare variable codfisc char(13);
declare variable codempfc integer;
declare variable codfilialfc integer;
declare variable codmarca char(6);
declare variable codempmc integer;
declare variable codfilialmc integer;
declare variable codgrup char(10);
declare variable codempgp integer;
declare variable codfilialgp integer;
declare variable tipoprod char(1);
declare variable cvprod char(1);
declare variable cloteprod char(1);
declare variable comisprod numeric(15,5);
declare variable pesoliqprod numeric(15,5);
declare variable pesobrutprod numeric(15,5);
declare variable qtdminprod numeric(15,5);
declare variable qtdmaxprod numeric(15,5);
declare variable precobaseprod numeric(15,5);
BEGIN
  BEGIN
    BEGIN
      iCodnovo = CAST(SREFPROD AS INTEGER);
/*Se não conseguir converter para int causa uma excessão e entra neste bloco: */
      WHEN ANY DO
      BEGIN
        SELECT MAX(CODPROD) FROM EQPRODUTO
           WHERE CODEMP=:ICODEMP AND CODFILIAL=:ICODFILIAL INTO :iCodnovo;
        iCodnovo = iCodnovo + 1;
      END
    END
    SELECT CODALMOX,CODEMPAX,CODFILIALAX,CODMOEDA,CODEMPMA,CODFILIALMA,CODUNID,CODEMPUD,CODFILIALUD,CODFISC,CODEMPFC,CODFILIALFC,CODMARCA,CODEMPMC,CODFILIALMC,CODGRUP,CODEMPGP,CODFILIALGP,TIPOPROD,
           CVPROD,CLOTEPROD,COMISPROD,PESOLIQPROD,PESOBRUTPROD,QTDMINPROD,
           QTDMAXPROD,PRECOBASEPROD FROM EQPRODUTO WHERE CODPROD=:iCodprod
           AND CODEMP=:ICODEMP AND CODFILIAL=:ICODFILIAL
           INTO
           :CODALMOX,:CODEMPAX,:CODFILIALAX,:CODMOEDA,:CODEMPMA,:CODFILIALMA,:CODUNID,:CODEMPUD,:CODFILIALUD,:CODFISC,:CODEMPFC,:CODFILIALFC,:CODMARCA,:CODEMPMC,:CODFILIALMC,:CODGRUP,:CODEMPGP,:CODFILIALGP,:TIPOPROD,
           :CVPROD,:CLOTEPROD,:COMISPROD,:PESOLIQPROD,:PESOBRUTPROD,:QTDMINPROD,
           :QTDMAXPROD,:PRECOBASEPROD;
    INSERT INTO EQPRODUTO (CODEMP,CODFILIAL,CODPROD,REFPROD,CODALMOX,CODEMPAX,CODFILIALAX,CODMOEDA,CODEMPMA,CODFILIALMA,CODUNID,CODEMPUD,CODFILIALUD,CODFISC,CODEMPFC,CODFILIALFC,CODMARCA,CODEMPMC,CODFILIALMC,
           CODGRUP,CODEMPGP,CODFILIALGP,TIPOPROD,CVPROD,DESCPROD,DESCAUXPROD,CLOTEPROD,CODBARPROD,CODFABPROD,
           COMISPROD,PESOLIQPROD,PESOBRUTPROD,QTDMINPROD,QTDMAXPROD,PRECOBASEPROD)
           VALUES (
                  :ICODEMP,:ICODFILIAL,:iCodnovo,:sRefProd,:CODALMOX,:CODEMPAX,:CODFILIALAX,:CODMOEDA,:CODEMPMA,:CODFILIALMA,:CODUNID,:CODEMPUD,:CODFILIALUD,:CODFISC,:CODEMPFC,:CODFILIALFC,:CODMARCA,:CODEMPMC,:CODFILIALMC,
                  :CODGRUP,:CODEMPGP,:CODFILIALGP,:TIPOPROD,:CVPROD,:sDescprod,:sDescAuxprod,:CLOTEPROD,:sCodbarprod,:sCodfabprod,
                  :COMISPROD,:PESOLIQPROD,:PESOBRUTPROD,:QTDMINPROD,:QTDMAXPROD,:PRECOBASEPROD
           );
    INSERT INTO VDPRECOPROD (CODEMP,CODFILIAL,CODPROD,CODPRECOPROD,CODCLASCLI,CODEMPCC,CODFILIALCC,CODTAB,CODEMPTB,CODFILIALTB,CODPLANOPAG,CODEMPPG,CODFILIALPG,PRECOPROD)
           SELECT :ICODEMP,:ICODFILIAL,:iCodnovo,CODPRECOPROD,CODCLASCLI,CODEMPCC,CODFILIALCC,
                  CODTAB,CODEMPTB,CODFILIALTB,CODPLANOPAG,CODEMPPG,CODFILIALPG,PRECOPROD FROM VDPRECOPROD WHERE CODPROD=:iCodprod
                  AND CODEMP=:ICODEMP AND CODFILIAL=:ICODFILIAL;
  END
  SUSPEND;
END
^

/* Alter (EQCOPIAPROD) */
ALTER PROCEDURE EQCOPIAPROD(ICODPROD INTEGER,
ICODEMP INTEGER,
ICODFILIAL INTEGER)
 RETURNS(ICOD INTEGER)
 AS
DECLARE VARIABLE INOVOCOD INTEGER;
BEGIN
  SELECT MAX(CODPROD)+1 FROM EQPRODUTO
    WHERE CODEMP=:ICODEMP AND CODFILIAL=:ICODFILIAL INTO INOVOCOD;
  INSERT INTO EQPRODUTO
      (CODPROD,CODEMP,CODFILIAL,DESCPROD,REFPROD,CODEMPAX,
      CODFILIALAX,CODALMOX,CODEMPMA,CODFILIALMA,CODMOEDA,CODEMPUD,
      CODFILIALUD,CODUNID,CODEMPFC,CODFILIALFC,CODFISC,CODEMPMC,
      CODFILIALMC,CODMARCA,DESCAUXPROD,TIPOPROD,CVPROD,CODEMPGP,
      CODFILIALGP,CODGRUP,CODBARPROD,CLOTEPROD,CODFABPROD,
      COMISPROD,PESOLIQPROD,PESOBRUTPROD,QTDMINPROD,QTDMAXPROD,
      PRECOBASEPROD,ATIVOPROD,DESCCOMPPROD)
    SELECT :INOVOCOD,:ICODEMP,:ICODFILIAL,DESCPROD,:INOVOCOD,CODEMPAX,
      CODFILIALAX,CODALMOX,CODEMPMA,CODFILIALMA,CODMOEDA,CODEMPUD,
      CODFILIALUD,CODUNID,CODEMPFC,CODFILIALFC,CODFISC,CODEMPMC,
      CODFILIALMC,CODMARCA,DESCAUXPROD,TIPOPROD,CVPROD,CODEMPGP,
      CODFILIALGP,CODGRUP,CODBARPROD,CLOTEPROD,CODFABPROD,COMISPROD,
      PESOLIQPROD,PESOBRUTPROD,QTDMINPROD,QTDMAXPROD,PRECOBASEPROD,
      ATIVOPROD,DESCCOMPPROD FROM
      EQPRODUTO WHERE CODEMP=:ICODEMP AND CODFILIAL=:ICODFILIAL AND
      CODPROD=:ICODPROD;

    INSERT INTO VDPRECOPROD (CODEMP,CODFILIAL,CODPROD,CODPRECOPROD,
        CODEMPTB,CODFILIALTB,CODTAB,CODEMPCC,CODFILIALCC,CODCLASCLI,
        CODEMPPG,CODFILIALPG,CODPLANOPAG,PRECOPROD)
      SELECT CODEMP,CODFILIAL,:INOVOCOD,CODPRECOPROD,
        CODEMPTB,CODFILIALTB,CODTAB,CODEMPCC,CODFILIALCC,CODCLASCLI,
        CODEMPPG,CODFILIALPG,CODPLANOPAG,PRECOPROD FROM VDPRECOPROD
        WHERE CODEMP=:ICODEMP AND CODFILIAL=:ICODFILIAL AND
          CODPROD=:ICODPROD;

    INSERT INTO EQFATCONV (CODEMP,CODFILIAL,CODPROD,CODUNID,FATCONV)
      SELECT CODEMP,CODFILIAL,:INOVOCOD,CODUNID,FATCONV FROM EQFATCONV
        WHERE CODEMP=:ICODEMP AND CODFILIAL=:ICODFILIAL AND CODPROD=:ICODPROD;

    INSERT INTO CPPRODFOR (CODEMP,CODFILIAL,CODPROD,CODFOR,REFPRODFOR)
      SELECT CODEMP,CODFILIAL,:INOVOCOD,CODFOR,REFPRODFOR FROM CPPRODFOR
        WHERE CODEMP=:ICODEMP AND CODFILIAL=:ICODFILIAL AND CODPROD=:ICODPROD;
        
    /* se for outro produto o lote provavelmente será outro também */
    /*INSERT INTO EQLOTE (CODEMP,CODFILIAL,CODPROD,CODLOTE,VENCTOLOTE,
        SLDLOTE,SLDRESLOTE,SLDCONSIGLOTE,SLDLIQLOTE,DINILOTE)
      SELECT CODEMP,CODFILIAL,:INOVOCOD,CODLOTE,VENCTOLOTE,
        SLDLOTE,SLDRESLOTE,SLDCONSIGLOTE,SLDLIQLOTE,DINILOTE FROM EQLOTE
        WHERE CODEMP=:ICODEMP AND CODFILIAL=:ICODFILIAL AND CODPROD=:ICODPROD;*/
        
    INSERT INTO VDFOTOPROD (CODEMP,CODFILIAL,CODPROD,CODFOTOPROD,DESCFOTOPROD,
        TIPOFOTOPROD,LARGFOTOPROD,ALTFOTOPROD,FOTOPROD)
      SELECT CODEMP,CODFILIAL,:INOVOCOD,CODFOTOPROD,DESCFOTOPROD,
        TIPOFOTOPROD,LARGFOTOPROD,ALTFOTOPROD,FOTOPROD FROM VDFOTOPROD
        WHERE CODEMP=:ICODEMP AND CODFILIAL=:ICODFILIAL AND CODPROD=:ICODPROD;
   ICOD = INOVOCOD;
   SUSPEND;
END
^

/* Alter (EQRELDEMANDASP) */
ALTER PROCEDURE EQRELDEMANDASP(ICODEMP INTEGER,
SCODFILIAL SMALLINT,
SCODFILIALPD SMALLINT,
DDTINI DATE,
DDTFIM DATE)
 RETURNS(CODMARCA CHAR(6),
CODGRUP CHAR(14),
CODPROD INTEGER,
REFPROD CHAR(13),
DESCPROD CHAR(50),
DESCGRUP CHAR(50),
SLDINI NUMERIC(15,5),
VLRCOMPRAS NUMERIC(15,5),
VLRDEVENT NUMERIC(15,5),
VLROUTENT NUMERIC(15,5),
VLRVENDAS NUMERIC(15,5),
VLRDEVSAI NUMERIC(15,5),
VLROUTSAI NUMERIC(15,5),
SLDFIM NUMERIC(15,5))
 AS
begin
  /* Stored procedure de relatório de demanda */
  FOR SELECT P.CODMARCA, P.CODGRUP,P.CODPROD,
     P.REFPROD, P.DESCPROD,G.DESCGRUP,
     (SELECT FIRST 1 SLDMOVPROD FROM EQMOVPROD MP
      WHERE MP.CODEMP=:ICODEMP AND MP.CODFILIAL=:SCODFILIAL AND
         MP.CODEMPPD=P.CODEMP AND MP.CODFILIALPD=P.CODFILIAL AND
         MP.CODPROD=P.CODPROD AND MP.DTMOVPROD<:DDTINI
         ORDER BY MP.DTMOVPROD DESC, MP.CODMOVPROD DESC ) SLDINI,
     (SELECT SUM(MP.QTDMOVPROD)
         FROM EQMOVPROD MP, EQTIPOMOV TM
         WHERE TM.CODEMP=MP.CODEMPTM AND TM.CODFILIAL=MP.CODFILIALTM AND
           TM.CODTIPOMOV=MP.CODTIPOMOV AND MP.CODPROD=P.CODPROD AND
           MP.CODEMPPD=P.CODEMP AND MP.CODFILIALPD=P.CODFILIAL AND
           MP.DTMOVPROD BETWEEN :DDTINI AND :DDTFIM AND MP.ESTOQMOVPROD='S' AND
           TM.TIPOMOV IN ('CP','PC') AND TM.ESTIPOMOV = 'E') VLRCOMPRAS,
     (SELECT SUM(MP.QTDMOVPROD)
         FROM EQMOVPROD MP, EQTIPOMOV TM
         WHERE TM.CODEMP=MP.CODEMPTM AND TM.CODFILIAL=MP.CODFILIALTM AND
           TM.CODTIPOMOV=MP.CODTIPOMOV AND MP.CODPROD=P.CODPROD AND
           MP.CODEMPPD=P.CODEMP AND MP.CODFILIALPD=P.CODFILIAL AND
           MP.DTMOVPROD BETWEEN :DDTINI AND :DDTFIM AND MP.ESTOQMOVPROD='S' AND
           TM.TIPOMOV ='DV' AND TM.ESTIPOMOV = 'E') VLRDEVENT,
     (SELECT SUM(MP.QTDMOVPROD)
         FROM EQMOVPROD MP , EQTIPOMOV TM
         WHERE TM.CODEMP=MP.CODEMPTM AND TM.CODFILIAL=MP.CODFILIALTM AND
           TM.CODTIPOMOV=MP.CODTIPOMOV AND MP.CODPROD=P.CODPROD AND
           MP.CODEMPPD=P.CODEMP AND MP.CODFILIALPD=P.CODFILIAL AND
           MP.DTMOVPROD BETWEEN :DDTINI AND :DDTFIM AND MP.ESTOQMOVPROD='S' AND
           TM.TIPOMOV NOT IN ('CP','PC','DV') AND TM.ESTIPOMOV IN ('E','I')) VLROUTENT,
     (SELECT SUM(MP.QTDMOVPROD)
         FROM EQMOVPROD MP, EQTIPOMOV TM
         WHERE TM.CODEMP=MP.CODEMPTM AND TM.CODFILIAL=MP.CODFILIALTM AND
           TM.CODTIPOMOV=MP.CODTIPOMOV AND MP.CODPROD=P.CODPROD AND
           MP.CODEMPPD=P.CODEMP AND MP.CODFILIALPD=P.CODFILIAL AND
           MP.DTMOVPROD BETWEEN :DDTINI AND :DDTFIM AND MP.ESTOQMOVPROD='S' AND
           TM.TIPOMOV IN ('VD','PV') AND TM.ESTIPOMOV = 'S') VLRVENDAS,
     (SELECT SUM(MP.QTDMOVPROD)
         FROM EQMOVPROD MP, EQTIPOMOV TM
         WHERE TM.CODEMP=MP.CODEMPTM AND TM.CODFILIAL=MP.CODFILIALTM AND
           TM.CODTIPOMOV=MP.CODTIPOMOV AND MP.CODPROD=P.CODPROD AND
           MP.CODEMPPD=P.CODEMP AND MP.CODFILIALPD=P.CODFILIAL AND
           MP.DTMOVPROD BETWEEN :DDTINI AND :DDTFIM AND MP.ESTOQMOVPROD='S' AND
           TM.TIPOMOV ='DV' AND TM.ESTIPOMOV = 'S') VLRDEVSAI,
     (SELECT SUM(MP.QTDMOVPROD)
        FROM EQMOVPROD MP, EQTIPOMOV TM
         WHERE TM.CODEMP=MP.CODEMPTM AND TM.CODFILIAL=MP.CODFILIALTM AND
           TM.CODTIPOMOV=MP.CODTIPOMOV AND MP.CODPROD=P.CODPROD AND
           MP.CODEMPPD=P.CODEMP AND MP.CODFILIALPD=P.CODFILIAL AND
           MP.DTMOVPROD BETWEEN :DDTINI AND :DDTFIM AND MP.ESTOQMOVPROD='S' AND
           TM.TIPOMOV NOT IN ('VD','PV','DV') AND TM.ESTIPOMOV = 'S') VLROUTSAI
     FROM EQPRODUTO P, EQGRUPO G
         WHERE G.CODGRUP=P.CODGRUP AND G.CODEMP=P.CODEMPGP AND
           G.CODFILIAL=P.CODFILIALGP AND P.CODEMP=:ICODEMP AND
           P.CODFILIAL=:SCODFILIALPD AND P.ATIVOPROD='S'
     INTO :CODMARCA, :CODGRUP, :CODPROD, :REFPROD, :DESCPROD, :DESCGRUP,
        :SLDINI, :VLRCOMPRAS, :VLRDEVENT,  :VLROUTENT,
         :VLRVENDAS, :VLRDEVSAI, :VLROUTSAI DO
     BEGIN
        if (SLDINI IS NULL) then
           SLDINI = 0;
        if (VLROUTSAI IS NULL) then
           VLROUTSAI = 0;
        if (VLROUTENT IS NULL) then
           VLROUTENT = 0;
        if (VLRDEVSAI IS NULL) then
           VLRDEVSAI = 0;
        if (VLRDEVENT IS NULL) then
           VLRDEVENT = 0;
        if (VLRCOMPRAS IS NULL) then
           VLRCOMPRAS = 0;
        if (VLRVENDAS IS NULL) then
           VLRVENDAS = 0;
        SLDFIM = SLDINI + VLRCOMPRAS + VLRDEVENT + VLROUTENT -
           VLRVENDAS - VLRDEVSAI - VLROUTSAI;
        suspend;
     END
end
^

/* Alter (EQRELGIROPROD) */
ALTER PROCEDURE EQRELGIROPROD(CODEMP INTEGER,
CODFILIAL INTEGER,
DATA_BASE DATE)
 RETURNS(CODEMPPD INTEGER,
CODFILIALPD SMALLINT,
CODPROD INTEGER,
REFPROD CHAR(13),
CODFABPROD CHAR(13),
CODBARPROD CHAR(13),
DESCPROD VARCHAR(80),
CODEMPCP INTEGER,
CODFILIALCP SMALLINT,
CODCOMPRA INTEGER,
DOCCOMPRA INTEGER,
IDENTCONTAINER CHAR(20),
CODITCOMPRA SMALLINT,
DTULTCP DATE,
SALDOANT NUMERIC(15,5),
QTDULTCP NUMERIC(15,5),
QTDVENDIDA NUMERIC(15,5),
SALDOATU NUMERIC(15,5),
CODEMPGP INTEGER,
CODFILIALGP INTEGER,
CODGRUP CHAR(14))
 AS
begin

    -- Buscando produtos ativos
    for
        select pd.codemp, pd.codfilial, pd.codprod, pd.descprod, refprod, codfabprod, codbarprod,
        codempgp, codfilialgp, codgrup
        from eqproduto pd
        where pd.ativoprod='S' and pd.codemp=:codemp and pd.codfilial=:codfilial
        into codemppd, codfilialpd, codprod, descprod, refprod, codfabprod, codbarprod,
        codempgp, codfilialgp, codgrup
    do
    begin

        -- Buscando a ultima compra do produto
        codempcp = null;
        codfilialcp = null;
        codcompra = null;
        coditcompra = null;
        dtultcp = null;
        qtdultcp = 0;
        doccompra = null;
        identcontainer = null;

        select first 1 itc.codemp, itc.codfilial, itc.codcompra, itc.coditcompra, cp.dtentcompra, itc.qtditcompra, cp.doccompra, cp.identcontainer
        from cpcompra cp, cpitcompra itc
        where
        itc.codemp=cp.codemp and itc.codfilial=cp.codfilial and itc.codcompra=cp.codcompra and
        itc.codemppd=:codemppd and itc.codfilialpd=:codfilialpd and itc.codprod=:codprod and
        cp.dtentcompra < :data_base
        order by cp.dtentcompra desc
        into codempcp, codfilialcp, codcompra, coditcompra, dtultcp, qtdultcp, doccompra, identcontainer;

        -- Buscando a ultima compra do produto

        qtdvendida = 0;

        select coalesce(sum(itv.qtditvenda),0)
        from vdvenda vd, vditvenda itv, eqtipomov tm
        where
        itv.codemp=vd.codemp and itv.codfilial=vd.codfilial and itv.codvenda=vd.codvenda and itv.tipovenda=vd.tipovenda and
        itv.codemppd=:codemppd and itv.codfilialpd=:codfilialpd and itv.codprod=:codprod and
        vd.dtsaidavenda between :data_base - 30 and :data_base and
        tm.codemp=vd.codemptm and tm.codfilial=vd.codfilialtm and tm.codtipomov=vd.codtipomov and
        tm.estoqtipomov='S'
        into :qtdvendida;

        -- Buscando saldo anterior

        saldoant = 0;

        select first 1 mp.sldmovprod
        from eqmovprod mp
        where mp.codemp=:codemp and mp.codfilial=:codfilial and mp.codemppd=:codemppd and mp.codfilialpd=:codfilialpd
        and mp.codprod=:codprod and mp.dtmovprod<:dtultcp
        order by mp.dtmovprod desc, mp.codmovprod desc
        into saldoant;

        -- Buscando saldo atual
        saldoatu = 0;

        select first 1 mp.sldmovprod
        from eqmovprod mp
        where mp.codemp=:codemp and mp.codfilial=:codfilial and mp.codemppd=:codemppd and mp.codfilialpd=:codfilialpd
        and mp.codprod=:codprod and mp.dtmovprod<=:data_base
        order by mp.dtmovprod desc, mp.codmovprod desc
        into saldoatu;

        suspend;

    end

end
^

/* Alter (EQRELINVPRODSP) */
ALTER PROCEDURE EQRELINVPRODSP(ICODEMP INTEGER,
SCODFILIAL SMALLINT,
CTIPOCUSTO CHAR,
ICODEMPGP INTEGER,
SCODFILIALGP SMALLINT,
CCODGRUP CHAR(14),
DDTESTOQ DATE,
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER)
 RETURNS(CODPROD INTEGER,
REFPROD CHAR(13),
DESCPROD CHAR(50),
CODGRUP CHAR(14),
SALDO NUMERIC(15,5),
CUSTO NUMERIC(15,5),
VLRESTOQ NUMERIC(15,5))
 AS
DECLARE VARIABLE CMULTIALMOX CHAR(1);
DECLARE VARIABLE NCUSTOMPM NUMERIC(15,5);
begin
  /* Relatório de estoque */
  SELECT CMULTIALMOX FROM SGRETMULTIALMOXSP(:ICODEMP) INTO :CMULTIALMOX;

  if (CCODGRUP IS NOT NULL) then
  begin
     CCODGRUP = rtrim(CCODGRUP);
     if (strlen(CCODGRUP)<14) then
        CCODGRUP = CCODGRUP || '%';
  end
  FOR SELECT P.CODPROD, P.REFPROD, P.DESCPROD, P.CODGRUP
    FROM EQPRODUTO P
    WHERE P.CODEMP=:ICODEMP AND P.CODFILIAL=:SCODFILIAL AND
          ( ( :CCODGRUP IS NULL ) OR
            (P.CODGRUP LIKE :CCODGRUP AND P.CODEMPGP=:ICODEMPGP AND
             P.CODFILIALGP=:SCODFILIALGP) )
    INTO :CODPROD, :REFPROD, :DESCPROD, :CODGRUP DO
  BEGIN
     SELECT NSALDO, NCUSTOMPM FROM EQMOVPRODSLDSP(null, null, null, :ICODEMP,
        :SCODFILIAL, :CODPROD, :DDTESTOQ, 0, 0,
        :ICODEMPAX, :SCODFILIALAX, :ICODALMOX, :CMULTIALMOX)
       INTO :SALDO, :NCUSTOMPM;
     if (CTIPOCUSTO='M') then
        CUSTO = NCUSTOMPM;
     else
        SELECT NCUSTOPEPS FROM EQCALCPEPSSP(:ICODEMP, :SCODFILIAL, :CODPROD,
          :SALDO, :DDTESTOQ, :ICODEMPAX, :SCODFILIALAX, :ICODALMOX)
        INTO :CUSTO;
     VLRESTOQ = CUSTO * SALDO;
     SUSPEND;
  END
end
^

/* Alter (EQRELPEPSSP) */
ALTER PROCEDURE EQRELPEPSSP(ICODEMP INTEGER,
SCODFILIAL SMALLINT,
DTESTOQ DATE,
ICODEMPMC INTEGER,
SCODFILIALMC SMALLINT,
CCODMARCA CHAR(6),
ICODEMPGP INTEGER,
SCODFILIALGP SMALLINT,
CCODGRUP VARCHAR(14),
CTIPOCUSTO CHAR,
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER)
 RETURNS(CODPROD INTEGER,
REFPROD CHAR(13),
DESCPROD CHAR(50),
SLDPROD NUMERIC(15,5),
CUSTOUNIT NUMERIC(15,5),
CUSTOTOT NUMERIC(15,5),
CODBARPROD CHAR(13),
CODFABPROD CHAR(13),
ATIVOPROD CHAR)
 AS
begin
  /* Procedure Text */
  IF (ICODEMPGP IS NOT NULL) THEN
  BEGIN
    IF (STRLEN(RTRIM(CCODGRUP))<14) THEN
       CCODGRUP = RTRIM(CCODGRUP)||'%';
  END
  IF (CTIPOCUSTO IS NULL) then
     CTIPOCUSTO = 'P';

  FOR SELECT P.CODPROD,P.REFPROD,P.DESCPROD, P.CODBARPROD, P.CODFABPROD, P.ATIVOPROD
   FROM EQPRODUTO P
   WHERE P.CODEMP = :ICODEMP AND P.CODFILIAL = :SCODFILIAL AND
   ( (:ICODEMPMC IS NULL) OR (P.CODEMPMC=:ICODEMPMC AND P.CODFILIALMC=:SCODFILIALMC AND
      P.CODMARCA=:CCODMARCA) ) AND
   ((:ICODEMPGP IS NULL) OR (P.CODEMPGP=:ICODEMPGP AND P.CODFILIALGP=:SCODFILIALGP AND
      P.CODGRUP LIKE :CCODGRUP) )
   INTO :CODPROD, :REFPROD, :DESCPROD, :CODBARPROD, :CODFABPROD, :ATIVOPROD  DO
  BEGIN
     SELECT SLDPROD, CUSTOUNIT, CUSTOTOT FROM EQCUSTOPRODSP(:ICODEMP,
        :SCODFILIAL, :CODPROD, :DTESTOQ, :CTIPOCUSTO, :ICODEMPAX,
        :SCODFILIALAX, :ICODALMOX, 'S')
       INTO :SLDPROD, :CUSTOUNIT, :CUSTOTOT;
     SUSPEND;
  END
end
^

/* Alter (PPRELCUSTOSP) */
ALTER PROCEDURE PPRELCUSTOSP(ICODEMP INTEGER,
SCODFILIAL SMALLINT,
DTESTOQ DATE,
ICODEMPMC INTEGER,
SCODFILIALMC SMALLINT,
CCODMARCA CHAR(6),
ICODEMPGP INTEGER,
SCODFILIALGP SMALLINT,
CCODGRUP CHAR(14),
CTIPOCUSTO CHAR,
ICODEMPAX INTEGER,
SCODFILIALAX SMALLINT,
ICODALMOX INTEGER)
 RETURNS(CODPROD INTEGER,
REFPROD CHAR(13),
DESCPROD CHAR(50),
TIPOPROD CHAR,
SLDPROD NUMERIC(15,5),
CUSTOUNIT NUMERIC(15,5),
CUSTOTOT NUMERIC(15,5))
 AS
begin
  /* Procedure Text */
  IF (ICODEMPGP IS NOT NULL) THEN
  BEGIN
    IF (STRLEN(RTRIM(CCODGRUP))<14) THEN
       CCODGRUP = RTRIM(CCODGRUP)||'%';
  END
  IF (CTIPOCUSTO IS NULL) then
     CTIPOCUSTO = 'P';

  FOR SELECT P.CODPROD,P.REFPROD,P.DESCPROD, P.TIPOPROD
   FROM EQPRODUTO P
   WHERE P.CODEMP = :ICODEMP AND P.CODFILIAL = :SCODFILIAL AND
   ( (:ICODEMPMC IS NULL) OR (P.CODEMPMC=:ICODEMPMC AND P.CODFILIALMC=:SCODFILIALMC AND
      P.CODMARCA=:CCODMARCA) ) AND
   ((:ICODEMPGP IS NULL) OR (P.CODEMPGP=:ICODEMPGP AND P.CODFILIALGP=:SCODFILIALGP AND
      P.CODGRUP LIKE :CCODGRUP) )
   INTO :CODPROD, :REFPROD, :DESCPROD, :TIPOPROD  DO
  BEGIN
     SELECT CUSTOUNIT,SLDPROD FROM PPCUSTOPRODSP(:ICODEMP,
        :SCODFILIAL, :CODPROD, :DTESTOQ, :CTIPOCUSTO, :ICODEMPAX,
        :SCODFILIALAX, :ICODALMOX, 'N')
       INTO :CUSTOUNIT, :SLDPROD;
     CUSTOTOT = CUSTOUNIT * SLDPROD;
     SUSPEND;
  END
end
^

/* Alter (SGRETVERSAO) */
ALTER PROCEDURE SGRETVERSAO RETURNS(VERSAO VARCHAR(30))
 AS
begin
    versao = '1.2.3.0 (22/07/2010)';
    suspend;
end
^

/* Alter (VDRETULTVDCLIPROD) */
ALTER PROCEDURE VDRETULTVDCLIPROD(ICODEMP INTEGER,
ICODCLI INTEGER,
ICODFILIALVD SMALLINT,
ICODVEND INTEGER,
DTINI DATE,
DTFIM DATE,
CODEMPTIPOCL INTEGER,
CODFILIALTIPOCL SMALLINT,
CODTIPOCLI INTEGER)
 RETURNS(RAZCLI_RET CHAR(50),
CODCLI_RET INTEGER,
DESCPROD_RET CHAR(50),
CODPROD_RET INTEGER,
DTEMITVENDA_RET DATE,
DOCVENDA_RET INTEGER,
SERIE_RET CHAR(4),
PRECOVENDA_RET NUMERIC(15,4))
 AS
declare variable icodfilial smallint;
declare variable icodprod integer;
begin

    select icodfilial from sgretfilial(:ICODEMP,'VDVENDA') into :ICODFILIAL;

    for select v.codcli,iv.codprod
        from vdvenda v, vdcliente cl, vditvenda iv
        where
            iv.codemp=v.codemp and iv.codfilial=v.codfilial
            and iv.tipovenda=v.TIPOVENDA and iv.codvenda=v.codvenda
            and v.codemp=:ICODEMP and v.codfilial=:ICODFILIAL
            and (v.codcli=:ICODCLI or :ICODCLI is null)
            and (v.codvend=:ICODVEND or :ICODVEND is null )
            and v.dtemitvenda between :DTINI and :DTFIM
            and cl.codemp=v.codempcl and cl.codfilial=v.codfilialcl and cl.codcli=v.codcli
            and (cl.codtipocli=:codtipocli or :codtipocli is null)
        group by v.codcli,iv.codprod into :ICODCLI,:ICODPROD
    do
    begin
        select first 1 c.razcli, c.codcli, p.descprod, iv.codprod, v.dtemitvenda, v.docvenda, v.serie,
            (iv.vlrliqitvenda/(case when iv.qtditvenda=0 then 1 else iv.qtditvenda end)) precovenda
        from vdcliente c, vdvenda v, vditvenda iv, eqproduto p
        where
            c.codemp=v.codempcl and c.codfilial=v.codfilialcl and c.codcli=v.codcli
            and c.codemp=v.codempcl and c.codfilial=v.codfilialcl and iv.codemp=v.codemp
            and iv.codfilial=v.codfilial and iv.tipovenda=v.tipovenda and iv.codvenda=v.codvenda
            and p.codemp=iv.codemppd and p.codfilial=iv.codfilialpd and p.codprod=iv.codprod
            and v.codempvd=:ICODEMP and v.codfilialvd=:ICODFILIALVD and (v.codvend=:ICODVEND or :ICODVEND is null )
            and v.dtemitvenda between :DTINI and :DTFIM and c.codcli=:ICODCLI and p.codprod=:ICODPROD
            order by v.dtemitvenda desc
            into :RAZCLI_RET, :CODCLI_RET, :DESCPROD_RET, :CODPROD_RET, :DTEMITVENDA_RET, :DOCVENDA_RET, :SERIE_RET,
                 :PRECOVENDA_RET;
            suspend;
    end
end
^

/* Alter exist trigger... */
ALTER TRIGGER EQPRODUTOTGBU
as
  DECLARE VARIABLE ICODFILIAL INTEGER;
  DECLARE VARIABLE CESTNEG CHAR(1);
  DECLARE VARIABLE CESTNEGGRUPPREF CHAR(1);
  DECLARE VARIABLE CESTNEGGRUP CHAR(1);
  DECLARE VARIABLE ICODPROD INTEGER;
begin
  SELECT ICODFILIAL FROM SGRETFILIAL(new.CODEMP,'SGPREFERE1') INTO :iCodFilial;
  SELECT ESTNEG, ESTNEGGRUP FROM SGPREFERE1
     WHERE CODEMP=new.CODEMP AND CODFILIAL=:iCodFilial
     INTO :cEstNeg, :cEstNegGrupPref;
  new.DTALT=cast('now' AS DATE);
  new.IDUSUALT=USER;
  new.HALT = cast('now' AS TIME);
  if (new.SLDPROD is null) then
     new.SLDPROD = 0;
  if (new.SLDRESPROD is null) then
     new.SLDRESPROD = 0;
  if (new.SLDCONSIGPROD is null) then
     new.SLDCONSIGPROD = 0;
  new.SLDLIQPROD = new.SLDPROD-new.SLDRESPROD-new.SLDCONSIGPROD;
  if (cEstNeg Is null) then
      cEstNeg = 'N';
  if (cEstNegGrupPref is null) then
      cEstNegGrupPref = 'N';
  if ((new.SLDPROD < 0) AND (new.TIPOPROD='P') ) THEN
  begin
    if (cEstNegGrupPref = 'S') then
    begin
       SELECT ESTNEGGRUP FROM EQGRUPO
         WHERE CODEMP=new.CODEMPGP AND CODFILIAL=new.CODFILIALGP AND
            CODGRUP=new.CODGRUP INTO :CESTNEGGRUP;
       if (cEstNegGrup is null) then
          cEstNegGrup = 'N';
       if (cEstNegGrup='N') then
          EXCEPTION EQPRODUTOEX01 'O PROD. '||rtrim(cast(new.CODPROD as char(10)))
            ||'-'||substring(new.DESCPROD from 1 for 20)||
          ' NÃO POSSUI SALDO P/COMPL. A OPERAÇÃO';
    end
    else if (cEstNeg='N') then
          EXCEPTION EQPRODUTOEX01 'O PROD. '||rtrim(cast(new.CODPROD as char(10)))
            ||'-'||substring(new.DESCPROD from 1 for 20)||
          ' NÃO POSSUI SALDO P/COMPL. A OPERAÇÃO';
  end
  if ( new.REFPROD != old.REFPROD ) then
  begin
     SELECT FIRST 1 CODPROD FROM EQMOVPROD WHERE CODEMPPD=new.CODEMP AND
        CODFILIALPD=new.CODFILIAL AND CODPROD=new.CODPROD
          INTO :ICODPROD;
     if ( (ICODPROD IS NOT NULL) AND (ICODPROD=new.CODPROD) ) then
        EXCEPTION EQPRODUTOEX01 'REFERÊNCIA NÃO PODE SER ALTERADA. PRODUTO POSSUI MOVIMENTO!';
     else
        UPDATE EQCODALTPROD SET REFPROD=new.REFPROD WHERE CODEMP=new.CODEMP AND
          CODFILIAL=new.CODFILIAL AND CODPROD=new.CODPROD;
  end
end
^

SET TERM ; ^

ALTER TABLE CRCHAMADO ALTER COLUMN CODEMP POSITION 1;

ALTER TABLE CRCHAMADO ALTER COLUMN CODFILIAL POSITION 2;

ALTER TABLE CRCHAMADO ALTER COLUMN CODCHAMADO POSITION 3;

ALTER TABLE CRCHAMADO ALTER COLUMN DESCCHAMADO POSITION 4;

ALTER TABLE CRCHAMADO ALTER COLUMN DETCHAMADO POSITION 5;

ALTER TABLE CRCHAMADO ALTER COLUMN OBSCHAMADO POSITION 6;

ALTER TABLE CRCHAMADO ALTER COLUMN CODEMPCL POSITION 7;

ALTER TABLE CRCHAMADO ALTER COLUMN CODFILIALCL POSITION 8;

ALTER TABLE CRCHAMADO ALTER COLUMN CODCLI POSITION 9;

ALTER TABLE CRCHAMADO ALTER COLUMN SOLICITANTE POSITION 10;

ALTER TABLE CRCHAMADO ALTER COLUMN PRIORIDADE POSITION 11;

ALTER TABLE CRCHAMADO ALTER COLUMN CODEMPTC POSITION 12;

ALTER TABLE CRCHAMADO ALTER COLUMN CODFILIALTC POSITION 13;

ALTER TABLE CRCHAMADO ALTER COLUMN CODTPCHAMADO POSITION 14;

ALTER TABLE CRCHAMADO ALTER COLUMN STATUS POSITION 15;

ALTER TABLE CRCHAMADO ALTER COLUMN DTCHAMADO POSITION 16;

ALTER TABLE CRCHAMADO ALTER COLUMN DTPREVISAO POSITION 17;

ALTER TABLE CRCHAMADO ALTER COLUMN QTDHORASPREVISAO POSITION 18;

ALTER TABLE CRCHAMADO ALTER COLUMN DTCONCLUSAO POSITION 19;

ALTER TABLE CRCHAMADO ALTER COLUMN CODEMPAE POSITION 20;

ALTER TABLE CRCHAMADO ALTER COLUMN CODFILIALAE POSITION 21;

ALTER TABLE CRCHAMADO ALTER COLUMN CODATEND POSITION 22;

ALTER TABLE CRCHAMADO ALTER COLUMN CODEMPOS POSITION 23;

ALTER TABLE CRCHAMADO ALTER COLUMN CODFILIALOS POSITION 24;

ALTER TABLE CRCHAMADO ALTER COLUMN TICKET POSITION 25;

ALTER TABLE CRCHAMADO ALTER COLUMN CODITRECMERC POSITION 26;

ALTER TABLE CRCHAMADO ALTER COLUMN CODITOS POSITION 27;

ALTER TABLE CRCHAMADO ALTER COLUMN EMATENDIMENTO POSITION 28;

ALTER TABLE CRCHAMADO ALTER COLUMN DTINS POSITION 29;

ALTER TABLE CRCHAMADO ALTER COLUMN HINS POSITION 30;

ALTER TABLE CRCHAMADO ALTER COLUMN IDUSUINS POSITION 31;

ALTER TABLE CRCHAMADO ALTER COLUMN DTALT POSITION 32;

ALTER TABLE CRCHAMADO ALTER COLUMN HALT POSITION 33;

ALTER TABLE CRCHAMADO ALTER COLUMN IDUSUALT POSITION 34;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN CODEMP POSITION 1;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN CODFILIAL POSITION 2;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN TICKET POSITION 3;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN CODITRECMERC POSITION 4;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN CODITOS POSITION 5;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN CODEMPPD POSITION 6;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN CODFILIALPD POSITION 7;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN CODPRODPD POSITION 8;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN REFPRODPD POSITION 9;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN CODEMPNS POSITION 10;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN CODFILIALNS POSITION 11;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN NUMSERIE POSITION 12;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN QTDITOS POSITION 13;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN OBSITOS POSITION 14;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN STATUSITOS POSITION 15;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN DTINS POSITION 16;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN HINS POSITION 17;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN IDUSUINS POSITION 18;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN DTALT POSITION 19;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN HALT POSITION 20;

ALTER TABLE EQITRECMERCITOS ALTER COLUMN IDUSUALT POSITION 21;

ALTER TABLE EQPRODUTO ALTER COLUMN CODEMP POSITION 1;

ALTER TABLE EQPRODUTO ALTER COLUMN CODFILIAL POSITION 2;

ALTER TABLE EQPRODUTO ALTER COLUMN CODPROD POSITION 3;

ALTER TABLE EQPRODUTO ALTER COLUMN DESCPROD POSITION 4;

ALTER TABLE EQPRODUTO ALTER COLUMN REFPROD POSITION 5;

ALTER TABLE EQPRODUTO ALTER COLUMN CODEMPAX POSITION 6;

ALTER TABLE EQPRODUTO ALTER COLUMN CODFILIALAX POSITION 7;

ALTER TABLE EQPRODUTO ALTER COLUMN CODALMOX POSITION 8;

ALTER TABLE EQPRODUTO ALTER COLUMN CODEMPMA POSITION 9;

ALTER TABLE EQPRODUTO ALTER COLUMN CODFILIALMA POSITION 10;

ALTER TABLE EQPRODUTO ALTER COLUMN CODMOEDA POSITION 11;

ALTER TABLE EQPRODUTO ALTER COLUMN CODEMPUD POSITION 12;

ALTER TABLE EQPRODUTO ALTER COLUMN CODFILIALUD POSITION 13;

ALTER TABLE EQPRODUTO ALTER COLUMN CODUNID POSITION 14;

ALTER TABLE EQPRODUTO ALTER COLUMN CODEMPFC POSITION 15;

ALTER TABLE EQPRODUTO ALTER COLUMN CODFILIALFC POSITION 16;

ALTER TABLE EQPRODUTO ALTER COLUMN CODFISC POSITION 17;

ALTER TABLE EQPRODUTO ALTER COLUMN CODEMPMC POSITION 18;

ALTER TABLE EQPRODUTO ALTER COLUMN CODFILIALMC POSITION 19;

ALTER TABLE EQPRODUTO ALTER COLUMN CODMARCA POSITION 20;

ALTER TABLE EQPRODUTO ALTER COLUMN DESCAUXPROD POSITION 21;

ALTER TABLE EQPRODUTO ALTER COLUMN TIPOPROD POSITION 22;

ALTER TABLE EQPRODUTO ALTER COLUMN CVPROD POSITION 23;

ALTER TABLE EQPRODUTO ALTER COLUMN CODEMPGP POSITION 24;

ALTER TABLE EQPRODUTO ALTER COLUMN CODFILIALGP POSITION 25;

ALTER TABLE EQPRODUTO ALTER COLUMN CODGRUP POSITION 26;

ALTER TABLE EQPRODUTO ALTER COLUMN CODBARPROD POSITION 27;

ALTER TABLE EQPRODUTO ALTER COLUMN CLOTEPROD POSITION 28;

ALTER TABLE EQPRODUTO ALTER COLUMN SERIEPROD POSITION 29;

ALTER TABLE EQPRODUTO ALTER COLUMN CODFABPROD POSITION 30;

ALTER TABLE EQPRODUTO ALTER COLUMN COMISPROD POSITION 31;

ALTER TABLE EQPRODUTO ALTER COLUMN PESOLIQPROD POSITION 32;

ALTER TABLE EQPRODUTO ALTER COLUMN PESOBRUTPROD POSITION 33;

ALTER TABLE EQPRODUTO ALTER COLUMN QTDMINPROD POSITION 34;

ALTER TABLE EQPRODUTO ALTER COLUMN QTDMAXPROD POSITION 35;

ALTER TABLE EQPRODUTO ALTER COLUMN DTMPMPROD POSITION 36;

ALTER TABLE EQPRODUTO ALTER COLUMN CUSTOMPMPROD POSITION 37;

ALTER TABLE EQPRODUTO ALTER COLUMN CUSTOPEPSPROD POSITION 38;

ALTER TABLE EQPRODUTO ALTER COLUMN CUSTOINFOPROD POSITION 39;

ALTER TABLE EQPRODUTO ALTER COLUMN PRECOBASEPROD POSITION 40;

ALTER TABLE EQPRODUTO ALTER COLUMN SLDPROD POSITION 41;

ALTER TABLE EQPRODUTO ALTER COLUMN SLDRESPROD POSITION 42;

ALTER TABLE EQPRODUTO ALTER COLUMN SLDCONSIGPROD POSITION 43;

ALTER TABLE EQPRODUTO ALTER COLUMN SLDLIQPROD POSITION 44;

ALTER TABLE EQPRODUTO ALTER COLUMN ATIVOPROD POSITION 45;

ALTER TABLE EQPRODUTO ALTER COLUMN DTULTCPPROD POSITION 46;

ALTER TABLE EQPRODUTO ALTER COLUMN QTDULTCPPROD POSITION 47;

ALTER TABLE EQPRODUTO ALTER COLUMN DESCCOMPPROD POSITION 48;

ALTER TABLE EQPRODUTO ALTER COLUMN VERIFPROD POSITION 49;

ALTER TABLE EQPRODUTO ALTER COLUMN LOCALPROD POSITION 50;

ALTER TABLE EQPRODUTO ALTER COLUMN RMAPROD POSITION 51;

ALTER TABLE EQPRODUTO ALTER COLUMN CODEMPPE POSITION 52;

ALTER TABLE EQPRODUTO ALTER COLUMN CODFILIALPE POSITION 53;

ALTER TABLE EQPRODUTO ALTER COLUMN CODPE POSITION 54;

ALTER TABLE EQPRODUTO ALTER COLUMN CODEMPCC POSITION 55;

ALTER TABLE EQPRODUTO ALTER COLUMN CODFILIALCC POSITION 56;

ALTER TABLE EQPRODUTO ALTER COLUMN ANOCC POSITION 57;

ALTER TABLE EQPRODUTO ALTER COLUMN CODCC POSITION 58;

ALTER TABLE EQPRODUTO ALTER COLUMN USARECEITAPROD POSITION 59;

ALTER TABLE EQPRODUTO ALTER COLUMN USATELAADICPDV POSITION 60;

ALTER TABLE EQPRODUTO ALTER COLUMN VLRDENSIDADE POSITION 61;

ALTER TABLE EQPRODUTO ALTER COLUMN VLRCONCENT POSITION 62;

ALTER TABLE EQPRODUTO ALTER COLUMN COMPRIMENTO POSITION 63;

ALTER TABLE EQPRODUTO ALTER COLUMN LARGURA POSITION 64;

ALTER TABLE EQPRODUTO ALTER COLUMN ESPESSURA POSITION 65;

ALTER TABLE EQPRODUTO ALTER COLUMN GUIATRAFPROD POSITION 66;

ALTER TABLE EQPRODUTO ALTER COLUMN QTDEMBALAGEM POSITION 67;

ALTER TABLE EQPRODUTO ALTER COLUMN CODEANPROD POSITION 68;

ALTER TABLE EQPRODUTO ALTER COLUMN CUBAGEM POSITION 69;

ALTER TABLE EQPRODUTO ALTER COLUMN CODEMPSC POSITION 70;

ALTER TABLE EQPRODUTO ALTER COLUMN CODFILIALSC POSITION 71;

ALTER TABLE EQPRODUTO ALTER COLUMN CODSECAO POSITION 72;

ALTER TABLE EQPRODUTO ALTER COLUMN CODEMPTC POSITION 73;

ALTER TABLE EQPRODUTO ALTER COLUMN CODFILIALTC POSITION 74;

ALTER TABLE EQPRODUTO ALTER COLUMN CODTPCHAMADO POSITION 75;

ALTER TABLE EQPRODUTO ALTER COLUMN QTDHORASSERV POSITION 76;

ALTER TABLE EQPRODUTO ALTER COLUMN DTINS POSITION 77;

ALTER TABLE EQPRODUTO ALTER COLUMN HINS POSITION 78;

ALTER TABLE EQPRODUTO ALTER COLUMN IDUSUINS POSITION 79;

ALTER TABLE EQPRODUTO ALTER COLUMN DTALT POSITION 80;

ALTER TABLE EQPRODUTO ALTER COLUMN HALT POSITION 81;

ALTER TABLE EQPRODUTO ALTER COLUMN IDUSUALT POSITION 82;

ALTER TABLE EQRECMERC ALTER COLUMN CODEMP POSITION 1;

ALTER TABLE EQRECMERC ALTER COLUMN CODFILIAL POSITION 2;

ALTER TABLE EQRECMERC ALTER COLUMN TICKET POSITION 3;

ALTER TABLE EQRECMERC ALTER COLUMN PLACAVEICULO POSITION 4;

ALTER TABLE EQRECMERC ALTER COLUMN CODEMPPD POSITION 5;

ALTER TABLE EQRECMERC ALTER COLUMN CODFILIALPD POSITION 6;

ALTER TABLE EQRECMERC ALTER COLUMN CODPROD POSITION 7;

ALTER TABLE EQRECMERC ALTER COLUMN REFPROD POSITION 8;

ALTER TABLE EQRECMERC ALTER COLUMN CODEMPFR POSITION 9;

ALTER TABLE EQRECMERC ALTER COLUMN CODFILIALFR POSITION 10;

ALTER TABLE EQRECMERC ALTER COLUMN CODFOR POSITION 11;

ALTER TABLE EQRECMERC ALTER COLUMN CODEMPTR POSITION 12;

ALTER TABLE EQRECMERC ALTER COLUMN CODFILIALTR POSITION 13;

ALTER TABLE EQRECMERC ALTER COLUMN CODTIPORECMERC POSITION 14;

ALTER TABLE EQRECMERC ALTER COLUMN CODEMPTN POSITION 15;

ALTER TABLE EQRECMERC ALTER COLUMN CODFILIALTN POSITION 16;

ALTER TABLE EQRECMERC ALTER COLUMN CODTRAN POSITION 17;

ALTER TABLE EQRECMERC ALTER COLUMN IDUSUALT POSITION 18;

ALTER TABLE EQRECMERC ALTER COLUMN CODBAIRRO POSITION 19;

ALTER TABLE EQRECMERC ALTER COLUMN CODMUNIC POSITION 20;

ALTER TABLE EQRECMERC ALTER COLUMN SIGLAUF POSITION 21;

ALTER TABLE EQRECMERC ALTER COLUMN CODPAIS POSITION 22;

ALTER TABLE EQRECMERC ALTER COLUMN STATUS POSITION 23;

ALTER TABLE EQRECMERC ALTER COLUMN TIPOFRETE POSITION 24;

ALTER TABLE EQRECMERC ALTER COLUMN DTENT POSITION 25;

ALTER TABLE EQRECMERC ALTER COLUMN DTPREVRET POSITION 26;

ALTER TABLE EQRECMERC ALTER COLUMN DOCRECMERC POSITION 27;

ALTER TABLE EQRECMERC ALTER COLUMN CODEMPVD POSITION 28;

ALTER TABLE EQRECMERC ALTER COLUMN CODFILIALVD POSITION 29;

ALTER TABLE EQRECMERC ALTER COLUMN CODVEND POSITION 30;

ALTER TABLE EQRECMERC ALTER COLUMN CODEMPCL POSITION 31;

ALTER TABLE EQRECMERC ALTER COLUMN CODFILIALCL POSITION 32;

ALTER TABLE EQRECMERC ALTER COLUMN CODCLI POSITION 33;

ALTER TABLE EQRECMERC ALTER COLUMN CODEMPAR POSITION 34;

ALTER TABLE EQRECMERC ALTER COLUMN CODFILIALAR POSITION 35;

ALTER TABLE EQRECMERC ALTER COLUMN CODATENDREC POSITION 36;

ALTER TABLE EQRECMERC ALTER COLUMN SOLICITANTE POSITION 37;

ALTER TABLE EQRECMERC ALTER COLUMN DTINS POSITION 38;

ALTER TABLE EQRECMERC ALTER COLUMN HINS POSITION 39;

ALTER TABLE EQRECMERC ALTER COLUMN IDUSUINS POSITION 40;

ALTER TABLE EQRECMERC ALTER COLUMN DTALT POSITION 41;

ALTER TABLE EQRECMERC ALTER COLUMN HALT POSITION 42;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODEMP POSITION 1;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODFILIAL POSITION 2;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODEMPTR POSITION 3;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODFILIALTR POSITION 4;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODTIPORECMERC POSITION 5;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODEMPCM POSITION 6;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODFILIALCM POSITION 7;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODTIPORECMERCCM POSITION 8;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODEMPTC POSITION 9;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODFILIALTC POSITION 10;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODTIPOMOVTC POSITION 11;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODEMPTO POSITION 12;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODFILIALTO POSITION 13;

ALTER TABLE SGPREFERE8 ALTER COLUMN CODTIPORECMERCOS POSITION 14;

ALTER TABLE SGPREFERE8 ALTER COLUMN GERACHAMADOOS POSITION 15;

ALTER TABLE SGPREFERE8 ALTER COLUMN DTINS POSITION 16;

ALTER TABLE SGPREFERE8 ALTER COLUMN HINS POSITION 17;

ALTER TABLE SGPREFERE8 ALTER COLUMN IDUSUINS POSITION 18;

ALTER TABLE SGPREFERE8 ALTER COLUMN DTALT POSITION 19;

ALTER TABLE SGPREFERE8 ALTER COLUMN HALT POSITION 20;

ALTER TABLE SGPREFERE8 ALTER COLUMN IDUSUALT POSITION 21;

/* Create(Add) Crant */
GRANT SELECT ON EQCONFESTOQVW01 TO ADM;

GRANT SELECT ON VWCUSTOPROJ01 TO ADM;



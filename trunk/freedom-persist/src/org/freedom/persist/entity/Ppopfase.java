package org.freedom.persist.entity;

// Generated 12/05/2014 09:11:34 by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Ppopfase generated by hbm2java
 */
@Entity
@Table(name = "PPOPFASE")
public class Ppopfase implements java.io.Serializable {

	private PpopfaseId id;
	private Ppfase ppfase;
	private Pprecurso pprecurso;
	private Ppop ppop;
	private Pptiporec pptiporec;
	private BigDecimal tempoof;
	private Date datainiprodfs;
	private Date hiniprodfs;
	private Date datafimprodfs;
	private Date hfimprodfs;
	private String obsfs;
	private String sitfs;
	private Date dtins;
	private Date hins;
	private String idusuins;
	private Date dtalt;
	private Date halt;
	private String idusualt;
	private Set eqrmas = new HashSet(0);

	public Ppopfase() {
	}

	public Ppopfase(PpopfaseId id, Ppfase ppfase, Pprecurso pprecurso,
			Ppop ppop, Pptiporec pptiporec, BigDecimal tempoof, Date dtins,
			Date hins, String idusuins) {
		this.id = id;
		this.ppfase = ppfase;
		this.pprecurso = pprecurso;
		this.ppop = ppop;
		this.pptiporec = pptiporec;
		this.tempoof = tempoof;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
	}

	public Ppopfase(PpopfaseId id, Ppfase ppfase, Pprecurso pprecurso,
			Ppop ppop, Pptiporec pptiporec, BigDecimal tempoof,
			Date datainiprodfs, Date hiniprodfs, Date datafimprodfs,
			Date hfimprodfs, String obsfs, String sitfs, Date dtins, Date hins,
			String idusuins, Date dtalt, Date halt, String idusualt, Set eqrmas) {
		this.id = id;
		this.ppfase = ppfase;
		this.pprecurso = pprecurso;
		this.ppop = ppop;
		this.pptiporec = pptiporec;
		this.tempoof = tempoof;
		this.datainiprodfs = datainiprodfs;
		this.hiniprodfs = hiniprodfs;
		this.datafimprodfs = datafimprodfs;
		this.hfimprodfs = hfimprodfs;
		this.obsfs = obsfs;
		this.sitfs = sitfs;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
		this.dtalt = dtalt;
		this.halt = halt;
		this.idusualt = idusualt;
		this.eqrmas = eqrmas;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "codop", column = @Column(name = "CODOP", nullable = false)),
			@AttributeOverride(name = "seqop", column = @Column(name = "SEQOP", nullable = false)),
			@AttributeOverride(name = "seqof", column = @Column(name = "SEQOF", nullable = false)),
			@AttributeOverride(name = "codfilial", column = @Column(name = "CODFILIAL", nullable = false)),
			@AttributeOverride(name = "codemp", column = @Column(name = "CODEMP", nullable = false)) })
	public PpopfaseId getId() {
		return this.id;
	}

	public void setId(PpopfaseId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODFASE", referencedColumnName = "CODFASE", nullable = false),
			@JoinColumn(name = "CODFILIALFS", referencedColumnName = "CODFILIAL", nullable = false),
			@JoinColumn(name = "CODEMPFS", referencedColumnName = "CODEMP", nullable = false) })
	public Ppfase getPpfase() {
		return this.ppfase;
	}

	public void setPpfase(Ppfase ppfase) {
		this.ppfase = ppfase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODRECP", referencedColumnName = "CODRECP", nullable = false),
			@JoinColumn(name = "CODFILIALRP", referencedColumnName = "CODFILIAL", nullable = false),
			@JoinColumn(name = "CODEMPRP", referencedColumnName = "CODEMP", nullable = false) })
	public Pprecurso getPprecurso() {
		return this.pprecurso;
	}

	public void setPprecurso(Pprecurso pprecurso) {
		this.pprecurso = pprecurso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODOP", referencedColumnName = "CODOP", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SEQOP", referencedColumnName = "SEQOP", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODFILIAL", referencedColumnName = "CODFILIAL", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMP", referencedColumnName = "CODEMP", nullable = false, insertable = false, updatable = false) })
	public Ppop getPpop() {
		return this.ppop;
	}

	public void setPpop(Ppop ppop) {
		this.ppop = ppop;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODTPREC", referencedColumnName = "CODTPREC", nullable = false),
			@JoinColumn(name = "CODFILIALTR", referencedColumnName = "CODFILIAL", nullable = false),
			@JoinColumn(name = "CODEMPTR", referencedColumnName = "CODEMP", nullable = false) })
	public Pptiporec getPptiporec() {
		return this.pptiporec;
	}

	public void setPptiporec(Pptiporec pptiporec) {
		this.pptiporec = pptiporec;
	}

	@Column(name = "TEMPOOF", nullable = false, precision = 15, scale = 5)
	public BigDecimal getTempoof() {
		return this.tempoof;
	}

	public void setTempoof(BigDecimal tempoof) {
		this.tempoof = tempoof;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATAINIPRODFS", length = 10)
	public Date getDatainiprodfs() {
		return this.datainiprodfs;
	}

	public void setDatainiprodfs(Date datainiprodfs) {
		this.datainiprodfs = datainiprodfs;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HINIPRODFS", length = 8)
	public Date getHiniprodfs() {
		return this.hiniprodfs;
	}

	public void setHiniprodfs(Date hiniprodfs) {
		this.hiniprodfs = hiniprodfs;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATAFIMPRODFS", length = 10)
	public Date getDatafimprodfs() {
		return this.datafimprodfs;
	}

	public void setDatafimprodfs(Date datafimprodfs) {
		this.datafimprodfs = datafimprodfs;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HFIMPRODFS", length = 8)
	public Date getHfimprodfs() {
		return this.hfimprodfs;
	}

	public void setHfimprodfs(Date hfimprodfs) {
		this.hfimprodfs = hfimprodfs;
	}

	@Column(name = "OBSFS", length = 500)
	public String getObsfs() {
		return this.obsfs;
	}

	public void setObsfs(String obsfs) {
		this.obsfs = obsfs;
	}

	@Column(name = "SITFS", length = 2)
	public String getSitfs() {
		return this.sitfs;
	}

	public void setSitfs(String sitfs) {
		this.sitfs = sitfs;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTINS", nullable = false, length = 10)
	public Date getDtins() {
		return this.dtins;
	}

	public void setDtins(Date dtins) {
		this.dtins = dtins;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HINS", nullable = false, length = 8)
	public Date getHins() {
		return this.hins;
	}

	public void setHins(Date hins) {
		this.hins = hins;
	}

	@Column(name = "IDUSUINS", nullable = false, length = 8)
	public String getIdusuins() {
		return this.idusuins;
	}

	public void setIdusuins(String idusuins) {
		this.idusuins = idusuins;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTALT", length = 10)
	public Date getDtalt() {
		return this.dtalt;
	}

	public void setDtalt(Date dtalt) {
		this.dtalt = dtalt;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HALT", length = 8)
	public Date getHalt() {
		return this.halt;
	}

	public void setHalt(Date halt) {
		this.halt = halt;
	}

	@Column(name = "IDUSUALT", length = 8)
	public String getIdusualt() {
		return this.idusualt;
	}

	public void setIdusualt(String idusualt) {
		this.idusualt = idusualt;
	}

/*	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ppopfase")
	public Set getEqrmas() {
		return this.eqrmas;
	}

	public void setEqrmas(Set eqrmas) {
		this.eqrmas = eqrmas;
	}
*/
}

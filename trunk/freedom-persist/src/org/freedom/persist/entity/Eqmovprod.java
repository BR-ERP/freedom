package org.freedom.persist.entity;

// Generated 30/01/2013 08:30:43 by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Eqmovprod generated by hbm2java
 */
@Entity
@Table(name = "EQMOVPROD")
public class Eqmovprod implements java.io.Serializable {

	private EqmovprodId id;
	private Eqproduto eqproduto;
	private Sgfilial sgfilial;
	private Ppop ppop;
	private Eqtipomov eqtipomov;
	private Eqalmox eqalmox;
	private Cpitcompra cpitcompra;
	private Vditvenda vditvenda;
	private Eqlote eqlote;
	private Eqitrma eqitrma;
	private Eqinvprod eqinvprod;
	private Date dtmovprod;
	private char tipomovprod;
	private char estoqmovprod;
	private BigDecimal qtdmovprod;
	private BigDecimal precomovprod;
	private BigDecimal custompmmovprod;
	private BigDecimal custompmmovprodax;
	private BigDecimal sldmovprod;
	private BigDecimal sldmovprodax;
	private Character flag;
	private Integer codempnt;
	private Short codfilialnt;
	private String codnat;
	private Integer docmovprod;
	private Character emmanut;
	private Short seqentop;
	private Short seqsubprod;
	private Date dtins;
	private Date hins;
	private String idusuins;
	private Date dtalt;
	private Date halt;
	private String idusualt;

	public Eqmovprod() {
	}

	public Eqmovprod(EqmovprodId id, Eqproduto eqproduto, Sgfilial sgfilial,
			Eqtipomov eqtipomov, Eqalmox eqalmox, Eqlote eqlote,
			Date dtmovprod, char tipomovprod, char estoqmovprod,
			BigDecimal qtdmovprod, Date dtins, Date hins, String idusuins) {
		this.id = id;
		this.eqproduto = eqproduto;
		this.sgfilial = sgfilial;
		this.eqtipomov = eqtipomov;
		this.eqalmox = eqalmox;
		this.eqlote = eqlote;
		this.dtmovprod = dtmovprod;
		this.tipomovprod = tipomovprod;
		this.estoqmovprod = estoqmovprod;
		this.qtdmovprod = qtdmovprod;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
	}

	public Eqmovprod(EqmovprodId id, Eqproduto eqproduto, Sgfilial sgfilial,
			Ppop ppop, Eqtipomov eqtipomov, Eqalmox eqalmox,
			Cpitcompra cpitcompra, Vditvenda vditvenda, Eqlote eqlote,
			Eqitrma eqitrma, Eqinvprod eqinvprod, Date dtmovprod,
			char tipomovprod, char estoqmovprod, BigDecimal qtdmovprod,
			BigDecimal precomovprod, BigDecimal custompmmovprod,
			BigDecimal custompmmovprodax, BigDecimal sldmovprod,
			BigDecimal sldmovprodax, Character flag, Integer codempnt,
			Short codfilialnt, String codnat, Integer docmovprod,
			Character emmanut, Short seqentop, Short seqsubprod, Date dtins,
			Date hins, String idusuins, Date dtalt, Date halt, String idusualt) {
		this.id = id;
		this.eqproduto = eqproduto;
		this.sgfilial = sgfilial;
		this.ppop = ppop;
		this.eqtipomov = eqtipomov;
		this.eqalmox = eqalmox;
		this.cpitcompra = cpitcompra;
		this.vditvenda = vditvenda;
		this.eqlote = eqlote;
		this.eqitrma = eqitrma;
		this.eqinvprod = eqinvprod;
		this.dtmovprod = dtmovprod;
		this.tipomovprod = tipomovprod;
		this.estoqmovprod = estoqmovprod;
		this.qtdmovprod = qtdmovprod;
		this.precomovprod = precomovprod;
		this.custompmmovprod = custompmmovprod;
		this.custompmmovprodax = custompmmovprodax;
		this.sldmovprod = sldmovprod;
		this.sldmovprodax = sldmovprodax;
		this.flag = flag;
		this.codempnt = codempnt;
		this.codfilialnt = codfilialnt;
		this.codnat = codnat;
		this.docmovprod = docmovprod;
		this.emmanut = emmanut;
		this.seqentop = seqentop;
		this.seqsubprod = seqsubprod;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
		this.dtalt = dtalt;
		this.halt = halt;
		this.idusualt = idusualt;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "codmovprod", column = @Column(name = "CODMOVPROD", nullable = false)),
			@AttributeOverride(name = "codfilial", column = @Column(name = "CODFILIAL", nullable = false)),
			@AttributeOverride(name = "codemp", column = @Column(name = "CODEMP", nullable = false)) })
	public EqmovprodId getId() {
		return this.id;
	}

	public void setId(EqmovprodId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODPROD", referencedColumnName = "CODPROD", nullable = false),
			@JoinColumn(name = "CODFILIALPD", referencedColumnName = "CODFILIAL", nullable = false),
			@JoinColumn(name = "CODEMPPD", referencedColumnName = "CODEMP", nullable = false) })
	public Eqproduto getEqproduto() {
		return this.eqproduto;
	}

	public void setEqproduto(Eqproduto eqproduto) {
		this.eqproduto = eqproduto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODFILIAL", referencedColumnName = "CODFILIAL", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMP", referencedColumnName = "CODEMP", nullable = false, insertable = false, updatable = false) })
	public Sgfilial getSgfilial() {
		return this.sgfilial;
	}

	public void setSgfilial(Sgfilial sgfilial) {
		this.sgfilial = sgfilial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODOP", referencedColumnName = "CODOP"),
			@JoinColumn(name = "SEQOP", referencedColumnName = "SEQOP"),
			@JoinColumn(name = "CODFILIALOP", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPOP", referencedColumnName = "CODEMP") })
	public Ppop getPpop() {
		return this.ppop;
	}

	public void setPpop(Ppop ppop) {
		this.ppop = ppop;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODTIPOMOV", referencedColumnName = "CODTIPOMOV", nullable = false),
			@JoinColumn(name = "CODFILIALTM", referencedColumnName = "CODFILIAL", nullable = false),
			@JoinColumn(name = "CODEMPTM", referencedColumnName = "CODEMP", nullable = false) })
	public Eqtipomov getEqtipomov() {
		return this.eqtipomov;
	}

	public void setEqtipomov(Eqtipomov eqtipomov) {
		this.eqtipomov = eqtipomov;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODALMOX", referencedColumnName = "CODALMOX", nullable = false),
			@JoinColumn(name = "CODFILIALAX", referencedColumnName = "CODFILIAL", nullable = false),
			@JoinColumn(name = "CODEMPAX", referencedColumnName = "CODEMP", nullable = false) })
	public Eqalmox getEqalmox() {
		return this.eqalmox;
	}

	public void setEqalmox(Eqalmox eqalmox) {
		this.eqalmox = eqalmox;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODCOMPRA", referencedColumnName = "CODCOMPRA"),
			@JoinColumn(name = "CODITCOMPRA", referencedColumnName = "CODITCOMPRA"),
			@JoinColumn(name = "CODFILIALCP", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPCP", referencedColumnName = "CODEMP") })
	public Cpitcompra getCpitcompra() {
		return this.cpitcompra;
	}

	public void setCpitcompra(Cpitcompra cpitcompra) {
		this.cpitcompra = cpitcompra;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODVENDA", referencedColumnName = "CODVENDA"),
			@JoinColumn(name = "CODITVENDA", referencedColumnName = "CODITVENDA"),
			@JoinColumn(name = "TIPOVENDA", referencedColumnName = "TIPOVENDA"),
			@JoinColumn(name = "CODFILIALVD", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPVD", referencedColumnName = "CODEMP") })
	public Vditvenda getVditvenda() {
		return this.vditvenda;
	}

	public void setVditvenda(Vditvenda vditvenda) {
		this.vditvenda = vditvenda;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODLOTE", referencedColumnName = "CODLOTE", insertable = false, updatable = false),
			@JoinColumn(name = "CODPROD", referencedColumnName = "CODPROD", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODFILIALLE", referencedColumnName = "CODFILIAL", insertable = false, updatable = false),
			@JoinColumn(name = "CODEMPLE", referencedColumnName = "CODEMP", insertable = false, updatable = false) })
	public Eqlote getEqlote() {
		return this.eqlote;
	}

	public void setEqlote(Eqlote eqlote) {
		this.eqlote = eqlote;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODRMA", referencedColumnName = "CODRMA"),
			@JoinColumn(name = "CODITRMA", referencedColumnName = "CODITRMA"),
			@JoinColumn(name = "CODFILIALRM", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPRM", referencedColumnName = "CODEMP") })
	public Eqitrma getEqitrma() {
		return this.eqitrma;
	}

	public void setEqitrma(Eqitrma eqitrma) {
		this.eqitrma = eqitrma;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODINVPROD", referencedColumnName = "CODINVPROD"),
			@JoinColumn(name = "CODFILIALIV", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPIV", referencedColumnName = "CODEMP") })
	public Eqinvprod getEqinvprod() {
		return this.eqinvprod;
	}

	public void setEqinvprod(Eqinvprod eqinvprod) {
		this.eqinvprod = eqinvprod;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTMOVPROD", nullable = false, length = 10)
	public Date getDtmovprod() {
		return this.dtmovprod;
	}

	public void setDtmovprod(Date dtmovprod) {
		this.dtmovprod = dtmovprod;
	}

	@Column(name = "TIPOMOVPROD", nullable = false, length = 1)
	public char getTipomovprod() {
		return this.tipomovprod;
	}

	public void setTipomovprod(char tipomovprod) {
		this.tipomovprod = tipomovprod;
	}

	@Column(name = "ESTOQMOVPROD", nullable = false, length = 1)
	public char getEstoqmovprod() {
		return this.estoqmovprod;
	}

	public void setEstoqmovprod(char estoqmovprod) {
		this.estoqmovprod = estoqmovprod;
	}

	@Column(name = "QTDMOVPROD", nullable = false, precision = 15, scale = 5)
	public BigDecimal getQtdmovprod() {
		return this.qtdmovprod;
	}

	public void setQtdmovprod(BigDecimal qtdmovprod) {
		this.qtdmovprod = qtdmovprod;
	}

	@Column(name = "PRECOMOVPROD", precision = 15, scale = 5)
	public BigDecimal getPrecomovprod() {
		return this.precomovprod;
	}

	public void setPrecomovprod(BigDecimal precomovprod) {
		this.precomovprod = precomovprod;
	}

	@Column(name = "CUSTOMPMMOVPROD", precision = 15, scale = 5)
	public BigDecimal getCustompmmovprod() {
		return this.custompmmovprod;
	}

	public void setCustompmmovprod(BigDecimal custompmmovprod) {
		this.custompmmovprod = custompmmovprod;
	}

	@Column(name = "CUSTOMPMMOVPRODAX", precision = 15, scale = 5)
	public BigDecimal getCustompmmovprodax() {
		return this.custompmmovprodax;
	}

	public void setCustompmmovprodax(BigDecimal custompmmovprodax) {
		this.custompmmovprodax = custompmmovprodax;
	}

	@Column(name = "SLDMOVPROD", precision = 15, scale = 5)
	public BigDecimal getSldmovprod() {
		return this.sldmovprod;
	}

	public void setSldmovprod(BigDecimal sldmovprod) {
		this.sldmovprod = sldmovprod;
	}

	@Column(name = "SLDMOVPRODAX", precision = 15, scale = 5)
	public BigDecimal getSldmovprodax() {
		return this.sldmovprodax;
	}

	public void setSldmovprodax(BigDecimal sldmovprodax) {
		this.sldmovprodax = sldmovprodax;
	}

	@Column(name = "FLAG", length = 1)
	public Character getFlag() {
		return this.flag;
	}

	public void setFlag(Character flag) {
		this.flag = flag;
	}

	@Column(name = "CODEMPNT")
	public Integer getCodempnt() {
		return this.codempnt;
	}

	public void setCodempnt(Integer codempnt) {
		this.codempnt = codempnt;
	}

	@Column(name = "CODFILIALNT")
	public Short getCodfilialnt() {
		return this.codfilialnt;
	}

	public void setCodfilialnt(Short codfilialnt) {
		this.codfilialnt = codfilialnt;
	}

	@Column(name = "CODNAT", length = 4)
	public String getCodnat() {
		return this.codnat;
	}

	public void setCodnat(String codnat) {
		this.codnat = codnat;
	}

	@Column(name = "DOCMOVPROD")
	public Integer getDocmovprod() {
		return this.docmovprod;
	}

	public void setDocmovprod(Integer docmovprod) {
		this.docmovprod = docmovprod;
	}

	@Column(name = "EMMANUT", length = 1)
	public Character getEmmanut() {
		return this.emmanut;
	}

	public void setEmmanut(Character emmanut) {
		this.emmanut = emmanut;
	}

	@Column(name = "SEQENTOP")
	public Short getSeqentop() {
		return this.seqentop;
	}

	public void setSeqentop(Short seqentop) {
		this.seqentop = seqentop;
	}

	@Column(name = "SEQSUBPROD")
	public Short getSeqsubprod() {
		return this.seqsubprod;
	}

	public void setSeqsubprod(Short seqsubprod) {
		this.seqsubprod = seqsubprod;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTINS", nullable = false, length = 10)
	public Date getDtins() {
		return this.dtins;
	}

	public void setDtins(Date dtins) {
		this.dtins = dtins;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HINS", nullable = false, length = 8)
	public Date getHins() {
		return this.hins;
	}

	public void setHins(Date hins) {
		this.hins = hins;
	}

	@Column(name = "IDUSUINS", nullable = false, length = 8)
	public String getIdusuins() {
		return this.idusuins;
	}

	public void setIdusuins(String idusuins) {
		this.idusuins = idusuins;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTALT", length = 10)
	public Date getDtalt() {
		return this.dtalt;
	}

	public void setDtalt(Date dtalt) {
		this.dtalt = dtalt;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HALT", length = 8)
	public Date getHalt() {
		return this.halt;
	}

	public void setHalt(Date halt) {
		this.halt = halt;
	}

	@Column(name = "IDUSUALT", length = 8)
	public String getIdusualt() {
		return this.idusualt;
	}

	public void setIdusualt(String idusualt) {
		this.idusualt = idusualt;
	}

}

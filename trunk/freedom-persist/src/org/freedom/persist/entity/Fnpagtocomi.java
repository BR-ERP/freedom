package org.freedom.persist.entity;

// Generated 12/05/2014 09:11:34 by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Fnpagtocomi generated by hbm2java
 */
@Entity
@Table(name = "FNPAGTOCOMI")
public class Fnpagtocomi implements java.io.Serializable {

	private FnpagtocomiId id;
	private Sgfilial sgfilial;
	private Fnplanejamento fnplanejamento;
	private Fnconta fnconta;
	private int codempca;
	private short codfilialca;
	private BigDecimal vlrpcomi;
	private int docpcomi;
	private String obspcomi;
	private Date dtcomppcomi;
	private Date datapcomi;
	private Character flag;
	private char emmanut;
	private Date dtins;
	private Date hins;
	private String idusuins;
	private Date dtalt;
	private Date halt;
	private String idusualt;
	private Set fnlancas = new HashSet(0);
	private Set vdcomissaos = new HashSet(0);

	public Fnpagtocomi() {
	}

	public Fnpagtocomi(FnpagtocomiId id, Sgfilial sgfilial,
			Fnplanejamento fnplanejamento, Fnconta fnconta, int codempca,
			short codfilialca, int docpcomi, Date dtcomppcomi, Date datapcomi,
			char emmanut, Date dtins, Date hins, String idusuins) {
		this.id = id;
		this.sgfilial = sgfilial;
		this.fnplanejamento = fnplanejamento;
		this.fnconta = fnconta;
		this.codempca = codempca;
		this.codfilialca = codfilialca;
		this.docpcomi = docpcomi;
		this.dtcomppcomi = dtcomppcomi;
		this.datapcomi = datapcomi;
		this.emmanut = emmanut;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
	}

	public Fnpagtocomi(FnpagtocomiId id, Sgfilial sgfilial,
			Fnplanejamento fnplanejamento, Fnconta fnconta, int codempca,
			short codfilialca, BigDecimal vlrpcomi, int docpcomi,
			String obspcomi, Date dtcomppcomi, Date datapcomi, Character flag,
			char emmanut, Date dtins, Date hins, String idusuins, Date dtalt,
			Date halt, String idusualt, Set fnlancas, Set vdcomissaos) {
		this.id = id;
		this.sgfilial = sgfilial;
		this.fnplanejamento = fnplanejamento;
		this.fnconta = fnconta;
		this.codempca = codempca;
		this.codfilialca = codfilialca;
		this.vlrpcomi = vlrpcomi;
		this.docpcomi = docpcomi;
		this.obspcomi = obspcomi;
		this.dtcomppcomi = dtcomppcomi;
		this.datapcomi = datapcomi;
		this.flag = flag;
		this.emmanut = emmanut;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
		this.dtalt = dtalt;
		this.halt = halt;
		this.idusualt = idusualt;
		this.fnlancas = fnlancas;
		this.vdcomissaos = vdcomissaos;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "codpcomi", column = @Column(name = "CODPCOMI", nullable = false)),
			@AttributeOverride(name = "codfilial", column = @Column(name = "CODFILIAL", nullable = false)),
			@AttributeOverride(name = "codemp", column = @Column(name = "CODEMP", nullable = false)) })
	public FnpagtocomiId getId() {
		return this.id;
	}

	public void setId(FnpagtocomiId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODFILIAL", referencedColumnName = "CODFILIAL", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMP", referencedColumnName = "CODEMP", nullable = false, insertable = false, updatable = false) })
	public Sgfilial getSgfilial() {
		return this.sgfilial;
	}

	public void setSgfilial(Sgfilial sgfilial) {
		this.sgfilial = sgfilial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODPLAN", referencedColumnName = "CODPLAN", nullable = false),
			@JoinColumn(name = "CODFILIALPN", referencedColumnName = "CODFILIAL", nullable = false),
			@JoinColumn(name = "CODEMPPN", referencedColumnName = "CODEMP", nullable = false) })
	public Fnplanejamento getFnplanejamento() {
		return this.fnplanejamento;
	}

	public void setFnplanejamento(Fnplanejamento fnplanejamento) {
		this.fnplanejamento = fnplanejamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "NUMCONTA", referencedColumnName = "NUMCONTA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODFILIAL", referencedColumnName = "CODFILIAL", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMP", referencedColumnName = "CODEMP", nullable = false, insertable = false, updatable = false) })
	public Fnconta getFnconta() {
		return this.fnconta;
	}

	public void setFnconta(Fnconta fnconta) {
		this.fnconta = fnconta;
	}

	@Column(name = "CODEMPCA", nullable = false)
	public int getCodempca() {
		return this.codempca;
	}

	public void setCodempca(int codempca) {
		this.codempca = codempca;
	}

	@Column(name = "CODFILIALCA", nullable = false)
	public short getCodfilialca() {
		return this.codfilialca;
	}

	public void setCodfilialca(short codfilialca) {
		this.codfilialca = codfilialca;
	}

	@Column(name = "VLRPCOMI", precision = 15, scale = 5)
	public BigDecimal getVlrpcomi() {
		return this.vlrpcomi;
	}

	public void setVlrpcomi(BigDecimal vlrpcomi) {
		this.vlrpcomi = vlrpcomi;
	}

	@Column(name = "DOCPCOMI", nullable = false)
	public int getDocpcomi() {
		return this.docpcomi;
	}

	public void setDocpcomi(int docpcomi) {
		this.docpcomi = docpcomi;
	}

	@Column(name = "OBSPCOMI", length = 300)
	public String getObspcomi() {
		return this.obspcomi;
	}

	public void setObspcomi(String obspcomi) {
		this.obspcomi = obspcomi;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTCOMPPCOMI", nullable = false, length = 10)
	public Date getDtcomppcomi() {
		return this.dtcomppcomi;
	}

	public void setDtcomppcomi(Date dtcomppcomi) {
		this.dtcomppcomi = dtcomppcomi;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATAPCOMI", nullable = false, length = 10)
	public Date getDatapcomi() {
		return this.datapcomi;
	}

	public void setDatapcomi(Date datapcomi) {
		this.datapcomi = datapcomi;
	}

	@Column(name = "FLAG", length = 1)
	public Character getFlag() {
		return this.flag;
	}

	public void setFlag(Character flag) {
		this.flag = flag;
	}

	@Column(name = "EMMANUT", nullable = false, length = 1)
	public char getEmmanut() {
		return this.emmanut;
	}

	public void setEmmanut(char emmanut) {
		this.emmanut = emmanut;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTINS", nullable = false, length = 10)
	public Date getDtins() {
		return this.dtins;
	}

	public void setDtins(Date dtins) {
		this.dtins = dtins;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HINS", nullable = false, length = 8)
	public Date getHins() {
		return this.hins;
	}

	public void setHins(Date hins) {
		this.hins = hins;
	}

	@Column(name = "IDUSUINS", nullable = false, length = 8)
	public String getIdusuins() {
		return this.idusuins;
	}

	public void setIdusuins(String idusuins) {
		this.idusuins = idusuins;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTALT", length = 10)
	public Date getDtalt() {
		return this.dtalt;
	}

	public void setDtalt(Date dtalt) {
		this.dtalt = dtalt;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HALT", length = 8)
	public Date getHalt() {
		return this.halt;
	}

	public void setHalt(Date halt) {
		this.halt = halt;
	}

	@Column(name = "IDUSUALT", length = 8)
	public String getIdusualt() {
		return this.idusualt;
	}

	public void setIdusualt(String idusualt) {
		this.idusualt = idusualt;
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnpagtocomi")
	public Set getFnlancas() {
		return this.fnlancas;
	}

	public void setFnlancas(Set fnlancas) {
		this.fnlancas = fnlancas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnpagtocomi")
	public Set getVdcomissaos() {
		return this.vdcomissaos;
	}

	public void setVdcomissaos(Set vdcomissaos) {
		this.vdcomissaos = vdcomissaos;
	}
*/
}

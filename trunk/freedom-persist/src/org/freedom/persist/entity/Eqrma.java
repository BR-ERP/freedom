package org.freedom.persist.entity;

// Generated 30/01/2013 08:30:43 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Eqrma generated by hbm2java
 */
@Entity
@Table(name = "EQRMA")
public class Eqrma implements java.io.Serializable {

	private EqrmaId id;
	private Ppopfase ppopfase;
	private Sgusuario sgusuarioByEqrmafksgusuarioap;
	private Ppop ppop;
	private Sgusuario sgusuarioByEqrmafksgusuarioex;
	private Eqtipomov eqtipomov;
	private Eqrecmerc eqrecmerc;
	private Sgusuario sgusuarioByEqrmafksgusuario;
	private Vditcontrato vditcontrato;
	private Fncc fncc;
	private String motivorma;
	private String motivocancrma;
	private String sitrma;
	private Date dtareqrma;
	private Date dtaexprma;
	private String sitaprovrma;
	private String sitexprma;
	private Date dtaaprovrma;
	private Short coditrecmerc;
	private Date dtins;
	private Date hins;
	private String idusuins;
	private Date dtalt;
	private Date halt;
	private String idusualt;
	private Set<Eqitrma> eqitrmas = new HashSet<Eqitrma>(0);
	private Set<Eqrmaal> eqrmaals = new HashSet<Eqrmaal>(0);

	public Eqrma() {
	}

	public Eqrma(EqrmaId id, Eqtipomov eqtipomov,
			Sgusuario sgusuarioByEqrmafksgusuario, Fncc fncc, String sitrma,
			Date dtareqrma, String sitaprovrma, String sitexprma, Date dtins,
			Date hins, String idusuins) {
		this.id = id;
		this.eqtipomov = eqtipomov;
		this.sgusuarioByEqrmafksgusuario = sgusuarioByEqrmafksgusuario;
		this.fncc = fncc;
		this.sitrma = sitrma;
		this.dtareqrma = dtareqrma;
		this.sitaprovrma = sitaprovrma;
		this.sitexprma = sitexprma;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
	}

	public Eqrma(EqrmaId id, Ppopfase ppopfase,
			Sgusuario sgusuarioByEqrmafksgusuarioap, Ppop ppop,
			Sgusuario sgusuarioByEqrmafksgusuarioex, Eqtipomov eqtipomov,
			Eqrecmerc eqrecmerc, Sgusuario sgusuarioByEqrmafksgusuario,
			Vditcontrato vditcontrato, Fncc fncc, String motivorma,
			String motivocancrma, String sitrma, Date dtareqrma,
			Date dtaexprma, String sitaprovrma, String sitexprma,
			Date dtaaprovrma, Short coditrecmerc, Date dtins, Date hins,
			String idusuins, Date dtalt, Date halt, String idusualt,
			Set<Eqitrma> eqitrmas, Set<Eqrmaal> eqrmaals) {
		this.id = id;
		this.ppopfase = ppopfase;
		this.sgusuarioByEqrmafksgusuarioap = sgusuarioByEqrmafksgusuarioap;
		this.ppop = ppop;
		this.sgusuarioByEqrmafksgusuarioex = sgusuarioByEqrmafksgusuarioex;
		this.eqtipomov = eqtipomov;
		this.eqrecmerc = eqrecmerc;
		this.sgusuarioByEqrmafksgusuario = sgusuarioByEqrmafksgusuario;
		this.vditcontrato = vditcontrato;
		this.fncc = fncc;
		this.motivorma = motivorma;
		this.motivocancrma = motivocancrma;
		this.sitrma = sitrma;
		this.dtareqrma = dtareqrma;
		this.dtaexprma = dtaexprma;
		this.sitaprovrma = sitaprovrma;
		this.sitexprma = sitexprma;
		this.dtaaprovrma = dtaaprovrma;
		this.coditrecmerc = coditrecmerc;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
		this.dtalt = dtalt;
		this.halt = halt;
		this.idusualt = idusualt;
		this.eqitrmas = eqitrmas;
		this.eqrmaals = eqrmaals;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "codrma", column = @Column(name = "CODRMA", nullable = false)),
			@AttributeOverride(name = "codfilial", column = @Column(name = "CODFILIAL", nullable = false)),
			@AttributeOverride(name = "codemp", column = @Column(name = "CODEMP", nullable = false)) })
	public EqrmaId getId() {
		return this.id;
	}

	public void setId(EqrmaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODOP", referencedColumnName = "CODOP"),
			@JoinColumn(name = "SEQOP", referencedColumnName = "SEQOP"),
			@JoinColumn(name = "SEQOF", referencedColumnName = "SEQOF"),
			@JoinColumn(name = "CODFILIALOF", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPOF", referencedColumnName = "CODEMP") })
	public Ppopfase getPpopfase() {
		return this.ppopfase;
	}

	public void setPpopfase(Ppopfase ppopfase) {
		this.ppopfase = ppopfase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "IDUSUAPROV", referencedColumnName = "IDUSU"),
			@JoinColumn(name = "CODFILIALUA", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPUA", referencedColumnName = "CODEMP") })
	public Sgusuario getSgusuarioByEqrmafksgusuarioap() {
		return this.sgusuarioByEqrmafksgusuarioap;
	}

	public void setSgusuarioByEqrmafksgusuarioap(
			Sgusuario sgusuarioByEqrmafksgusuarioap) {
		this.sgusuarioByEqrmafksgusuarioap = sgusuarioByEqrmafksgusuarioap;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODOP", referencedColumnName = "CODOP", insertable = false, updatable = false),
			@JoinColumn(name = "SEQOP", referencedColumnName = "SEQOP", insertable = false, updatable = false),
			@JoinColumn(name = "CODFILIALOF", referencedColumnName = "CODFILIAL", insertable = false, updatable = false),
			@JoinColumn(name = "CODEMPOF", referencedColumnName = "CODEMP", insertable = false, updatable = false) })
	public Ppop getPpop() {
		return this.ppop;
	}

	public void setPpop(Ppop ppop) {
		this.ppop = ppop;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "IDUSUEXP", referencedColumnName = "IDUSU"),
			@JoinColumn(name = "CODFILIALUE", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPUE", referencedColumnName = "CODEMP") })
	public Sgusuario getSgusuarioByEqrmafksgusuarioex() {
		return this.sgusuarioByEqrmafksgusuarioex;
	}

	public void setSgusuarioByEqrmafksgusuarioex(
			Sgusuario sgusuarioByEqrmafksgusuarioex) {
		this.sgusuarioByEqrmafksgusuarioex = sgusuarioByEqrmafksgusuarioex;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODTIPOMOV", referencedColumnName = "CODTIPOMOV", nullable = false),
			@JoinColumn(name = "CODFILIALTM", referencedColumnName = "CODFILIAL", nullable = false),
			@JoinColumn(name = "CODEMPTM", referencedColumnName = "CODEMP", nullable = false) })
	public Eqtipomov getEqtipomov() {
		return this.eqtipomov;
	}

	public void setEqtipomov(Eqtipomov eqtipomov) {
		this.eqtipomov = eqtipomov;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "TICKET", referencedColumnName = "TICKET"),
			@JoinColumn(name = "CODFILIALOS", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPOS", referencedColumnName = "CODEMP") })
	public Eqrecmerc getEqrecmerc() {
		return this.eqrecmerc;
	}

	public void setEqrecmerc(Eqrecmerc eqrecmerc) {
		this.eqrecmerc = eqrecmerc;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "IDUSU", referencedColumnName = "IDUSU", nullable = false),
			@JoinColumn(name = "CODFILIALUU", referencedColumnName = "CODFILIAL", nullable = false),
			@JoinColumn(name = "CODEMPUU", referencedColumnName = "CODEMP", nullable = false) })
	public Sgusuario getSgusuarioByEqrmafksgusuario() {
		return this.sgusuarioByEqrmafksgusuario;
	}

	public void setSgusuarioByEqrmafksgusuario(
			Sgusuario sgusuarioByEqrmafksgusuario) {
		this.sgusuarioByEqrmafksgusuario = sgusuarioByEqrmafksgusuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODCONTR", referencedColumnName = "CODCONTR"),
			@JoinColumn(name = "CODITCONTR", referencedColumnName = "CODITCONTR"),
			@JoinColumn(name = "CODFILIALCT", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPCT", referencedColumnName = "CODEMP") })
	public Vditcontrato getVditcontrato() {
		return this.vditcontrato;
	}

	public void setVditcontrato(Vditcontrato vditcontrato) {
		this.vditcontrato = vditcontrato;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODCC", referencedColumnName = "CODCC", nullable = false),
			@JoinColumn(name = "ANOCC", referencedColumnName = "ANOCC", nullable = false),
			@JoinColumn(name = "CODFILIALCC", referencedColumnName = "CODFILIAL", nullable = false),
			@JoinColumn(name = "CODEMPCC", referencedColumnName = "CODEMP", nullable = false) })
	public Fncc getFncc() {
		return this.fncc;
	}

	public void setFncc(Fncc fncc) {
		this.fncc = fncc;
	}

	@Column(name = "MOTIVORMA", length = 10000)
	public String getMotivorma() {
		return this.motivorma;
	}

	public void setMotivorma(String motivorma) {
		this.motivorma = motivorma;
	}

	@Column(name = "MOTIVOCANCRMA", length = 10000)
	public String getMotivocancrma() {
		return this.motivocancrma;
	}

	public void setMotivocancrma(String motivocancrma) {
		this.motivocancrma = motivocancrma;
	}

	@Column(name = "SITRMA", nullable = false, length = 2)
	public String getSitrma() {
		return this.sitrma;
	}

	public void setSitrma(String sitrma) {
		this.sitrma = sitrma;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTAREQRMA", nullable = false, length = 10)
	public Date getDtareqrma() {
		return this.dtareqrma;
	}

	public void setDtareqrma(Date dtareqrma) {
		this.dtareqrma = dtareqrma;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTAEXPRMA", length = 10)
	public Date getDtaexprma() {
		return this.dtaexprma;
	}

	public void setDtaexprma(Date dtaexprma) {
		this.dtaexprma = dtaexprma;
	}

	@Column(name = "SITAPROVRMA", nullable = false, length = 2)
	public String getSitaprovrma() {
		return this.sitaprovrma;
	}

	public void setSitaprovrma(String sitaprovrma) {
		this.sitaprovrma = sitaprovrma;
	}

	@Column(name = "SITEXPRMA", nullable = false, length = 2)
	public String getSitexprma() {
		return this.sitexprma;
	}

	public void setSitexprma(String sitexprma) {
		this.sitexprma = sitexprma;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTAAPROVRMA", length = 10)
	public Date getDtaaprovrma() {
		return this.dtaaprovrma;
	}

	public void setDtaaprovrma(Date dtaaprovrma) {
		this.dtaaprovrma = dtaaprovrma;
	}

	@Column(name = "CODITRECMERC")
	public Short getCoditrecmerc() {
		return this.coditrecmerc;
	}

	public void setCoditrecmerc(Short coditrecmerc) {
		this.coditrecmerc = coditrecmerc;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTINS", nullable = false, length = 10)
	public Date getDtins() {
		return this.dtins;
	}

	public void setDtins(Date dtins) {
		this.dtins = dtins;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HINS", nullable = false, length = 8)
	public Date getHins() {
		return this.hins;
	}

	public void setHins(Date hins) {
		this.hins = hins;
	}

	@Column(name = "IDUSUINS", nullable = false, length = 8)
	public String getIdusuins() {
		return this.idusuins;
	}

	public void setIdusuins(String idusuins) {
		this.idusuins = idusuins;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTALT", length = 10)
	public Date getDtalt() {
		return this.dtalt;
	}

	public void setDtalt(Date dtalt) {
		this.dtalt = dtalt;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HALT", length = 8)
	public Date getHalt() {
		return this.halt;
	}

	public void setHalt(Date halt) {
		this.halt = halt;
	}

	@Column(name = "IDUSUALT", length = 8)
	public String getIdusualt() {
		return this.idusualt;
	}

	public void setIdusualt(String idusualt) {
		this.idusualt = idusualt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqrma")
	public Set<Eqitrma> getEqitrmas() {
		return this.eqitrmas;
	}

	public void setEqitrmas(Set<Eqitrma> eqitrmas) {
		this.eqitrmas = eqitrmas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqrma")
	public Set<Eqrmaal> getEqrmaals() {
		return this.eqrmaals;
	}

	public void setEqrmaals(Set<Eqrmaal> eqrmaals) {
		this.eqrmaals = eqrmaals;
	}

}

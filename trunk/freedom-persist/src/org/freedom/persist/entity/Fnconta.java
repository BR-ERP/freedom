package org.freedom.persist.entity;

// Generated 31/05/2013 12:00:37 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Fnconta generated by hbm2java
 */
@Entity
@Table(name = "FNCONTA", uniqueConstraints = @UniqueConstraint(columnNames = {
		"CODEMPPN", "CODFILIALPN", "CODPLAN" }))
public class Fnconta implements java.io.Serializable {

	private FncontaId id;
	private Sgfilial sgfilial;
	private Fnmoeda fnmoeda;
	private Fnhistpad fnhistpad;
	private Fnplanejamento fnplanejamento;
	private Fnbanco fnbanco;
	private String descconta;
	private char tipoconta;
	private Date dataconta;
	private String codcontdeb;
	private String codcontcred;
	private String agenciaconta;
	private String convcobconta;
	private char ativaconta;
	private char tusuconta;
	private char tipocaixa;
	private String postoconta;
	private Date dtins;
	private Date hins;
	private String idusuins;
	private Date dtalt;
	private Date halt;
	private String idusualt;
	private Set<Fnreceber> fnrecebers = new HashSet<Fnreceber>(0);
	private Set<Fnbordero> fnborderosForFnborderofkfnconta = new HashSet<Fnbordero>(
			0);
	private Set<Vdvendedor> vdvendedors = new HashSet<Vdvendedor>(0);
	private Set<Fnmodboleto> fnmodboletos = new HashSet<Fnmodboleto>(0);
	private Set<Fncontausu> fncontausus = new HashSet<Fncontausu>(0);
	private Set<Fnpagtocomi> fnpagtocomis = new HashSet<Fnpagtocomi>(0);
	private Set<Fnpagar> fnpagars = new HashSet<Fnpagar>(0);
	private Set<Fnbordero> fnborderosForFnborderofkfncontabor = new HashSet<Fnbordero>(
			0);
	private Set<Fnitpagar> fnitpagars = new HashSet<Fnitpagar>(0);
	private Set<Fnfbncli> fnfbnclis = new HashSet<Fnfbncli>(0);
	private Set<Fnitreceber> fnitrecebers = new HashSet<Fnitreceber>(0);
	private Set<Cpcompra> cpcompras = new HashSet<Cpcompra>(0);
	private Set<Vdvenda> vdvendas = new HashSet<Vdvenda>(0);
	private Set<Fnitmodboleto> fnitmodboletos = new HashSet<Fnitmodboleto>(0);
	private Set<Fnplanopag> fnplanopags = new HashSet<Fnplanopag>(0);
	private Set<Sgitprefere6> sgitprefere6s = new HashSet<Sgitprefere6>(0);

	public Fnconta() {
	}

	public Fnconta(FncontaId id, Sgfilial sgfilial, Fnmoeda fnmoeda,
			Fnplanejamento fnplanejamento, String descconta, char tipoconta,
			Date dataconta, char ativaconta, char tusuconta, char tipocaixa,
			Date dtins, Date hins, String idusuins) {
		this.id = id;
		this.sgfilial = sgfilial;
		this.fnmoeda = fnmoeda;
		this.fnplanejamento = fnplanejamento;
		this.descconta = descconta;
		this.tipoconta = tipoconta;
		this.dataconta = dataconta;
		this.ativaconta = ativaconta;
		this.tusuconta = tusuconta;
		this.tipocaixa = tipocaixa;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
	}

	public Fnconta(FncontaId id, Sgfilial sgfilial, Fnmoeda fnmoeda,
			Fnhistpad fnhistpad, Fnplanejamento fnplanejamento,
			Fnbanco fnbanco, String descconta, char tipoconta, Date dataconta,
			String codcontdeb, String codcontcred, String agenciaconta,
			String convcobconta, char ativaconta, char tusuconta,
			char tipocaixa, String postoconta, Date dtins, Date hins,
			String idusuins, Date dtalt, Date halt, String idusualt,
			Set<Fnreceber> fnrecebers,
			Set<Fnbordero> fnborderosForFnborderofkfnconta,
			Set<Vdvendedor> vdvendedors, Set<Fnmodboleto> fnmodboletos,
			Set<Fncontausu> fncontausus, Set<Fnpagtocomi> fnpagtocomis,
			Set<Fnpagar> fnpagars,
			Set<Fnbordero> fnborderosForFnborderofkfncontabor,
			Set<Fnitpagar> fnitpagars, Set<Fnfbncli> fnfbnclis,
			Set<Fnitreceber> fnitrecebers, Set<Cpcompra> cpcompras,
			Set<Vdvenda> vdvendas, Set<Fnitmodboleto> fnitmodboletos,
			Set<Fnplanopag> fnplanopags, Set<Sgitprefere6> sgitprefere6s) {
		this.id = id;
		this.sgfilial = sgfilial;
		this.fnmoeda = fnmoeda;
		this.fnhistpad = fnhistpad;
		this.fnplanejamento = fnplanejamento;
		this.fnbanco = fnbanco;
		this.descconta = descconta;
		this.tipoconta = tipoconta;
		this.dataconta = dataconta;
		this.codcontdeb = codcontdeb;
		this.codcontcred = codcontcred;
		this.agenciaconta = agenciaconta;
		this.convcobconta = convcobconta;
		this.ativaconta = ativaconta;
		this.tusuconta = tusuconta;
		this.tipocaixa = tipocaixa;
		this.postoconta = postoconta;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
		this.dtalt = dtalt;
		this.halt = halt;
		this.idusualt = idusualt;
		this.fnrecebers = fnrecebers;
		this.fnborderosForFnborderofkfnconta = fnborderosForFnborderofkfnconta;
		this.vdvendedors = vdvendedors;
		this.fnmodboletos = fnmodboletos;
		this.fncontausus = fncontausus;
		this.fnpagtocomis = fnpagtocomis;
		this.fnpagars = fnpagars;
		this.fnborderosForFnborderofkfncontabor = fnborderosForFnborderofkfncontabor;
		this.fnitpagars = fnitpagars;
		this.fnfbnclis = fnfbnclis;
		this.fnitrecebers = fnitrecebers;
		this.cpcompras = cpcompras;
		this.vdvendas = vdvendas;
		this.fnitmodboletos = fnitmodboletos;
		this.fnplanopags = fnplanopags;
		this.sgitprefere6s = sgitprefere6s;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "numconta", column = @Column(name = "NUMCONTA", nullable = false, length = 10)),
			@AttributeOverride(name = "codfilial", column = @Column(name = "CODFILIAL", nullable = false)),
			@AttributeOverride(name = "codemp", column = @Column(name = "CODEMP", nullable = false)) })
	public FncontaId getId() {
		return this.id;
	}

	public void setId(FncontaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODFILIAL", referencedColumnName = "CODFILIAL", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMP", referencedColumnName = "CODEMP", nullable = false, insertable = false, updatable = false) })
	public Sgfilial getSgfilial() {
		return this.sgfilial;
	}

	public void setSgfilial(Sgfilial sgfilial) {
		this.sgfilial = sgfilial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODMOEDA", referencedColumnName = "CODMOEDA", nullable = false),
			@JoinColumn(name = "CODFILIALMA", referencedColumnName = "CODFILIAL", nullable = false),
			@JoinColumn(name = "CODEMPMA", referencedColumnName = "CODEMP", nullable = false) })
	public Fnmoeda getFnmoeda() {
		return this.fnmoeda;
	}

	public void setFnmoeda(Fnmoeda fnmoeda) {
		this.fnmoeda = fnmoeda;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODHIST", referencedColumnName = "CODHIST"),
			@JoinColumn(name = "CODFILIALHP", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPHP", referencedColumnName = "CODEMP") })
	public Fnhistpad getFnhistpad() {
		return this.fnhistpad;
	}

	public void setFnhistpad(Fnhistpad fnhistpad) {
		this.fnhistpad = fnhistpad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODPLAN", referencedColumnName = "CODPLAN", nullable = false),
			@JoinColumn(name = "CODFILIALPN", referencedColumnName = "CODFILIAL", nullable = false),
			@JoinColumn(name = "CODEMPPN", referencedColumnName = "CODEMP", nullable = false) })
	public Fnplanejamento getFnplanejamento() {
		return this.fnplanejamento;
	}

	public void setFnplanejamento(Fnplanejamento fnplanejamento) {
		this.fnplanejamento = fnplanejamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODBANCO", referencedColumnName = "CODBANCO"),
			@JoinColumn(name = "CODFILIALBO", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPBO", referencedColumnName = "CODEMP") })
	public Fnbanco getFnbanco() {
		return this.fnbanco;
	}

	public void setFnbanco(Fnbanco fnbanco) {
		this.fnbanco = fnbanco;
	}

	@Column(name = "DESCCONTA", nullable = false, length = 50)
	public String getDescconta() {
		return this.descconta;
	}

	public void setDescconta(String descconta) {
		this.descconta = descconta;
	}

	@Column(name = "TIPOCONTA", nullable = false, length = 1)
	public char getTipoconta() {
		return this.tipoconta;
	}

	public void setTipoconta(char tipoconta) {
		this.tipoconta = tipoconta;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATACONTA", nullable = false, length = 10)
	public Date getDataconta() {
		return this.dataconta;
	}

	public void setDataconta(Date dataconta) {
		this.dataconta = dataconta;
	}

	@Column(name = "CODCONTDEB", length = 20)
	public String getCodcontdeb() {
		return this.codcontdeb;
	}

	public void setCodcontdeb(String codcontdeb) {
		this.codcontdeb = codcontdeb;
	}

	@Column(name = "CODCONTCRED", length = 20)
	public String getCodcontcred() {
		return this.codcontcred;
	}

	public void setCodcontcred(String codcontcred) {
		this.codcontcred = codcontcred;
	}

	@Column(name = "AGENCIACONTA", length = 6)
	public String getAgenciaconta() {
		return this.agenciaconta;
	}

	public void setAgenciaconta(String agenciaconta) {
		this.agenciaconta = agenciaconta;
	}

	@Column(name = "CONVCOBCONTA", length = 20)
	public String getConvcobconta() {
		return this.convcobconta;
	}

	public void setConvcobconta(String convcobconta) {
		this.convcobconta = convcobconta;
	}

	@Column(name = "ATIVACONTA", nullable = false, length = 1)
	public char getAtivaconta() {
		return this.ativaconta;
	}

	public void setAtivaconta(char ativaconta) {
		this.ativaconta = ativaconta;
	}

	@Column(name = "TUSUCONTA", nullable = false, length = 1)
	public char getTusuconta() {
		return this.tusuconta;
	}

	public void setTusuconta(char tusuconta) {
		this.tusuconta = tusuconta;
	}

	@Column(name = "TIPOCAIXA", nullable = false, length = 1)
	public char getTipocaixa() {
		return this.tipocaixa;
	}

	public void setTipocaixa(char tipocaixa) {
		this.tipocaixa = tipocaixa;
	}

	@Column(name = "POSTOCONTA", length = 2)
	public String getPostoconta() {
		return this.postoconta;
	}

	public void setPostoconta(String postoconta) {
		this.postoconta = postoconta;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTINS", nullable = false, length = 10)
	public Date getDtins() {
		return this.dtins;
	}

	public void setDtins(Date dtins) {
		this.dtins = dtins;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HINS", nullable = false, length = 8)
	public Date getHins() {
		return this.hins;
	}

	public void setHins(Date hins) {
		this.hins = hins;
	}

	@Column(name = "IDUSUINS", nullable = false, length = 8)
	public String getIdusuins() {
		return this.idusuins;
	}

	public void setIdusuins(String idusuins) {
		this.idusuins = idusuins;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTALT", length = 10)
	public Date getDtalt() {
		return this.dtalt;
	}

	public void setDtalt(Date dtalt) {
		this.dtalt = dtalt;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HALT", length = 8)
	public Date getHalt() {
		return this.halt;
	}

	public void setHalt(Date halt) {
		this.halt = halt;
	}

	@Column(name = "IDUSUALT", length = 8)
	public String getIdusualt() {
		return this.idusualt;
	}

	public void setIdusualt(String idusualt) {
		this.idusualt = idusualt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Fnreceber> getFnrecebers() {
		return this.fnrecebers;
	}

	public void setFnrecebers(Set<Fnreceber> fnrecebers) {
		this.fnrecebers = fnrecebers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fncontaByFnborderofkfnconta")
	public Set<Fnbordero> getFnborderosForFnborderofkfnconta() {
		return this.fnborderosForFnborderofkfnconta;
	}

	public void setFnborderosForFnborderofkfnconta(
			Set<Fnbordero> fnborderosForFnborderofkfnconta) {
		this.fnborderosForFnborderofkfnconta = fnborderosForFnborderofkfnconta;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Vdvendedor> getVdvendedors() {
		return this.vdvendedors;
	}

	public void setVdvendedors(Set<Vdvendedor> vdvendedors) {
		this.vdvendedors = vdvendedors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Fnmodboleto> getFnmodboletos() {
		return this.fnmodboletos;
	}

	public void setFnmodboletos(Set<Fnmodboleto> fnmodboletos) {
		this.fnmodboletos = fnmodboletos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Fncontausu> getFncontausus() {
		return this.fncontausus;
	}

	public void setFncontausus(Set<Fncontausu> fncontausus) {
		this.fncontausus = fncontausus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Fnpagtocomi> getFnpagtocomis() {
		return this.fnpagtocomis;
	}

	public void setFnpagtocomis(Set<Fnpagtocomi> fnpagtocomis) {
		this.fnpagtocomis = fnpagtocomis;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Fnpagar> getFnpagars() {
		return this.fnpagars;
	}

	public void setFnpagars(Set<Fnpagar> fnpagars) {
		this.fnpagars = fnpagars;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fncontaByFnborderofkfncontabor")
	public Set<Fnbordero> getFnborderosForFnborderofkfncontabor() {
		return this.fnborderosForFnborderofkfncontabor;
	}

	public void setFnborderosForFnborderofkfncontabor(
			Set<Fnbordero> fnborderosForFnborderofkfncontabor) {
		this.fnborderosForFnborderofkfncontabor = fnborderosForFnborderofkfncontabor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Fnitpagar> getFnitpagars() {
		return this.fnitpagars;
	}

	public void setFnitpagars(Set<Fnitpagar> fnitpagars) {
		this.fnitpagars = fnitpagars;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Fnfbncli> getFnfbnclis() {
		return this.fnfbnclis;
	}

	public void setFnfbnclis(Set<Fnfbncli> fnfbnclis) {
		this.fnfbnclis = fnfbnclis;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Fnitreceber> getFnitrecebers() {
		return this.fnitrecebers;
	}

	public void setFnitrecebers(Set<Fnitreceber> fnitrecebers) {
		this.fnitrecebers = fnitrecebers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Cpcompra> getCpcompras() {
		return this.cpcompras;
	}

	public void setCpcompras(Set<Cpcompra> cpcompras) {
		this.cpcompras = cpcompras;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Vdvenda> getVdvendas() {
		return this.vdvendas;
	}

	public void setVdvendas(Set<Vdvenda> vdvendas) {
		this.vdvendas = vdvendas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Fnitmodboleto> getFnitmodboletos() {
		return this.fnitmodboletos;
	}

	public void setFnitmodboletos(Set<Fnitmodboleto> fnitmodboletos) {
		this.fnitmodboletos = fnitmodboletos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Fnplanopag> getFnplanopags() {
		return this.fnplanopags;
	}

	public void setFnplanopags(Set<Fnplanopag> fnplanopags) {
		this.fnplanopags = fnplanopags;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fnconta")
	public Set<Sgitprefere6> getSgitprefere6s() {
		return this.sgitprefere6s;
	}

	public void setSgitprefere6s(Set<Sgitprefere6> sgitprefere6s) {
		this.sgitprefere6s = sgitprefere6s;
	}

}

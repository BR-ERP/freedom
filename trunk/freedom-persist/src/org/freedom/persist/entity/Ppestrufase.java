package org.freedom.persist.entity;

// Generated 12/05/2014 09:11:34 by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Ppestrufase generated by hbm2java
 */
@Entity
@Table(name = "PPESTRUFASE")
public class Ppestrufase implements java.io.Serializable {

	private PpestrufaseId id;
	private Sgfilial sgfilial;
	private Ppfase ppfase;
	private Pptiporec pptiporec;
	private Ppestrutura ppestrutura;
	private BigDecimal tempoef;
	private char finalizaop;
	private String instrucoes;
	private Date dtins;
	private Date hins;
	private String idusuins;
	private Date dtalt;
	private Date halt;
	private String idusualt;
	private Set ppitestruturasubprods = new HashSet(0);
	private Set ppitestruturas = new HashSet(0);
	private Set ppestruanalises = new HashSet(0);
	private Set ppdistribs = new HashSet(0);

	public Ppestrufase() {
	}

	public Ppestrufase(PpestrufaseId id, Sgfilial sgfilial, Ppfase ppfase,
			Pptiporec pptiporec, Ppestrutura ppestrutura, BigDecimal tempoef,
			char finalizaop, Date dtins, Date hins, String idusuins) {
		this.id = id;
		this.sgfilial = sgfilial;
		this.ppfase = ppfase;
		this.pptiporec = pptiporec;
		this.ppestrutura = ppestrutura;
		this.tempoef = tempoef;
		this.finalizaop = finalizaop;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
	}

	public Ppestrufase(PpestrufaseId id, Sgfilial sgfilial, Ppfase ppfase,
			Pptiporec pptiporec, Ppestrutura ppestrutura, BigDecimal tempoef,
			char finalizaop, String instrucoes, Date dtins, Date hins,
			String idusuins, Date dtalt, Date halt, String idusualt,
			Set ppitestruturasubprods, Set ppitestruturas, Set ppestruanalises,
			Set ppdistribs) {
		this.id = id;
		this.sgfilial = sgfilial;
		this.ppfase = ppfase;
		this.pptiporec = pptiporec;
		this.ppestrutura = ppestrutura;
		this.tempoef = tempoef;
		this.finalizaop = finalizaop;
		this.instrucoes = instrucoes;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
		this.dtalt = dtalt;
		this.halt = halt;
		this.idusualt = idusualt;
		this.ppitestruturasubprods = ppitestruturasubprods;
		this.ppitestruturas = ppitestruturas;
		this.ppestruanalises = ppestruanalises;
		this.ppdistribs = ppdistribs;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "codprod", column = @Column(name = "CODPROD", nullable = false)),
			@AttributeOverride(name = "seqest", column = @Column(name = "SEQEST", nullable = false)),
			@AttributeOverride(name = "seqef", column = @Column(name = "SEQEF", nullable = false)),
			@AttributeOverride(name = "codfilial", column = @Column(name = "CODFILIAL", nullable = false)),
			@AttributeOverride(name = "codemp", column = @Column(name = "CODEMP", nullable = false)),
			@AttributeOverride(name = "codfase", column = @Column(name = "CODFASE", nullable = false)),
			@AttributeOverride(name = "codfilialfs", column = @Column(name = "CODFILIALFS", nullable = false)),
			@AttributeOverride(name = "codempfs", column = @Column(name = "CODEMPFS", nullable = false)) })
	public PpestrufaseId getId() {
		return this.id;
	}

	public void setId(PpestrufaseId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODFILIAL", referencedColumnName = "CODFILIAL", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMP", referencedColumnName = "CODEMP", nullable = false, insertable = false, updatable = false) })
	public Sgfilial getSgfilial() {
		return this.sgfilial;
	}

	public void setSgfilial(Sgfilial sgfilial) {
		this.sgfilial = sgfilial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODFASE", referencedColumnName = "CODFASE", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODFILIALFS", referencedColumnName = "CODFILIAL", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMPFS", referencedColumnName = "CODEMP", nullable = false, insertable = false, updatable = false) })
	public Ppfase getPpfase() {
		return this.ppfase;
	}

	public void setPpfase(Ppfase ppfase) {
		this.ppfase = ppfase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODTPREC", referencedColumnName = "CODTPREC", nullable = false),
			@JoinColumn(name = "CODFILIALTR", referencedColumnName = "CODFILIAL", nullable = false),
			@JoinColumn(name = "CODEMPTR", referencedColumnName = "CODEMP", nullable = false) })
	public Pptiporec getPptiporec() {
		return this.pptiporec;
	}

	public void setPptiporec(Pptiporec pptiporec) {
		this.pptiporec = pptiporec;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODPROD", referencedColumnName = "CODPROD", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SEQEST", referencedColumnName = "SEQEST", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODFILIAL", referencedColumnName = "CODFILIAL", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMP", referencedColumnName = "CODEMP", nullable = false, insertable = false, updatable = false) })
	public Ppestrutura getPpestrutura() {
		return this.ppestrutura;
	}

	public void setPpestrutura(Ppestrutura ppestrutura) {
		this.ppestrutura = ppestrutura;
	}

	@Column(name = "TEMPOEF", nullable = false, precision = 15, scale = 5)
	public BigDecimal getTempoef() {
		return this.tempoef;
	}

	public void setTempoef(BigDecimal tempoef) {
		this.tempoef = tempoef;
	}

	@Column(name = "FINALIZAOP", nullable = false, length = 1)
	public char getFinalizaop() {
		return this.finalizaop;
	}

	public void setFinalizaop(char finalizaop) {
		this.finalizaop = finalizaop;
	}

	@Column(name = "INSTRUCOES", length = 5000)
	public String getInstrucoes() {
		return this.instrucoes;
	}

	public void setInstrucoes(String instrucoes) {
		this.instrucoes = instrucoes;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTINS", nullable = false, length = 10)
	public Date getDtins() {
		return this.dtins;
	}

	public void setDtins(Date dtins) {
		this.dtins = dtins;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HINS", nullable = false, length = 8)
	public Date getHins() {
		return this.hins;
	}

	public void setHins(Date hins) {
		this.hins = hins;
	}

	@Column(name = "IDUSUINS", nullable = false, length = 8)
	public String getIdusuins() {
		return this.idusuins;
	}

	public void setIdusuins(String idusuins) {
		this.idusuins = idusuins;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTALT", length = 10)
	public Date getDtalt() {
		return this.dtalt;
	}

	public void setDtalt(Date dtalt) {
		this.dtalt = dtalt;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HALT", length = 8)
	public Date getHalt() {
		return this.halt;
	}

	public void setHalt(Date halt) {
		this.halt = halt;
	}

	@Column(name = "IDUSUALT", length = 8)
	public String getIdusualt() {
		return this.idusualt;
	}

	public void setIdusualt(String idusualt) {
		this.idusualt = idusualt;
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "ppestrufase")
	public Set getPpitestruturasubprods() {
		return this.ppitestruturasubprods;
	}

	public void setPpitestruturasubprods(Set ppitestruturasubprods) {
		this.ppitestruturasubprods = ppitestruturasubprods;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ppestrufase")
	public Set getPpitestruturas() {
		return this.ppitestruturas;
	}

	public void setPpitestruturas(Set ppitestruturas) {
		this.ppitestruturas = ppitestruturas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ppestrufase")
	public Set getPpestruanalises() {
		return this.ppestruanalises;
	}

	public void setPpestruanalises(Set ppestruanalises) {
		this.ppestruanalises = ppestruanalises;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ppestrufase")
	public Set getPpdistribs() {
		return this.ppdistribs;
	}

	public void setPpdistribs(Set ppdistribs) {
		this.ppdistribs = ppdistribs;
	}
*/
}

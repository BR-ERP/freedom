package org.freedom.persist.entity;

// Generated 12/05/2014 09:11:34 by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Fnfbncli generated by hbm2java
 */
@Entity
@Table(name = "FNFBNCLI")
public class Fnfbncli implements java.io.Serializable {

	private FnfbncliId id;
	private Vdcliente vdcliente;
	private Sgitprefere6 sgitprefere6;
	private Fnconta fnconta;
	private Fnplanejamento fnplanejamento;
	private String numcontacli;
	private String agenciacli;
	private String identcli;
	private String stipofebraban;
	private char tiporemcli;
	private Date dtins;
	private Date hins;
	private String idusuins;
	private Date dtalt;
	private Date halt;
	private String idusualt;

	public Fnfbncli() {
	}

	public Fnfbncli(FnfbncliId id, Vdcliente vdcliente,
			Sgitprefere6 sgitprefere6, String identcli, String stipofebraban,
			char tiporemcli, Date dtins, Date hins, String idusuins) {
		this.id = id;
		this.vdcliente = vdcliente;
		this.sgitprefere6 = sgitprefere6;
		this.identcli = identcli;
		this.stipofebraban = stipofebraban;
		this.tiporemcli = tiporemcli;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
	}

	public Fnfbncli(FnfbncliId id, Vdcliente vdcliente,
			Sgitprefere6 sgitprefere6, Fnconta fnconta,
			Fnplanejamento fnplanejamento, String numcontacli,
			String agenciacli, String identcli, String stipofebraban,
			char tiporemcli, Date dtins, Date hins, String idusuins,
			Date dtalt, Date halt, String idusualt) {
		this.id = id;
		this.vdcliente = vdcliente;
		this.sgitprefere6 = sgitprefere6;
		this.fnconta = fnconta;
		this.fnplanejamento = fnplanejamento;
		this.numcontacli = numcontacli;
		this.agenciacli = agenciacli;
		this.identcli = identcli;
		this.stipofebraban = stipofebraban;
		this.tiporemcli = tiporemcli;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
		this.dtalt = dtalt;
		this.halt = halt;
		this.idusualt = idusualt;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "codcli", column = @Column(name = "CODCLI", nullable = false)),
			@AttributeOverride(name = "codfilial", column = @Column(name = "CODFILIAL", nullable = false)),
			@AttributeOverride(name = "codemp", column = @Column(name = "CODEMP", nullable = false)),
			@AttributeOverride(name = "codbanco", column = @Column(name = "CODBANCO", nullable = false, length = 3)),
			@AttributeOverride(name = "codfilialbo", column = @Column(name = "CODFILIALBO", nullable = false)),
			@AttributeOverride(name = "codempbo", column = @Column(name = "CODEMPBO", nullable = false)),
			@AttributeOverride(name = "codfilialpf", column = @Column(name = "CODFILIALPF", nullable = false)),
			@AttributeOverride(name = "codemppf", column = @Column(name = "CODEMPPF", nullable = false)),
			@AttributeOverride(name = "tipofebraban", column = @Column(name = "TIPOFEBRABAN", nullable = false, length = 2)) })
	public FnfbncliId getId() {
		return this.id;
	}

	public void setId(FnfbncliId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODCLI", referencedColumnName = "CODCLI", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODFILIAL", referencedColumnName = "CODFILIAL", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMP", referencedColumnName = "CODEMP", nullable = false, insertable = false, updatable = false) })
	public Vdcliente getVdcliente() {
		return this.vdcliente;
	}

	public void setVdcliente(Vdcliente vdcliente) {
		this.vdcliente = vdcliente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODBANCO", referencedColumnName = "CODBANCO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "TIPOFEBRABAN", referencedColumnName = "TIPOFEBRABAN", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODFILIALBO", referencedColumnName = "CODFILIALBO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMPBO", referencedColumnName = "CODEMPBO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODFILIALPF", referencedColumnName = "CODFILIAL", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMPPF", referencedColumnName = "CODEMP", nullable = false, insertable = false, updatable = false) })
	public Sgitprefere6 getSgitprefere6() {
		return this.sgitprefere6;
	}

	public void setSgitprefere6(Sgitprefere6 sgitprefere6) {
		this.sgitprefere6 = sgitprefere6;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "NUMCONTA", referencedColumnName = "NUMCONTA"),
			@JoinColumn(name = "CODFILIALCA", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPCA", referencedColumnName = "CODEMP") })
	public Fnconta getFnconta() {
		return this.fnconta;
	}

	public void setFnconta(Fnconta fnconta) {
		this.fnconta = fnconta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODPLAN", referencedColumnName = "CODPLAN"),
			@JoinColumn(name = "CODFILIALPN", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPPN", referencedColumnName = "CODEMP") })
	public Fnplanejamento getFnplanejamento() {
		return this.fnplanejamento;
	}

	public void setFnplanejamento(Fnplanejamento fnplanejamento) {
		this.fnplanejamento = fnplanejamento;
	}

	@Column(name = "NUMCONTACLI", length = 10)
	public String getNumcontacli() {
		return this.numcontacli;
	}

	public void setNumcontacli(String numcontacli) {
		this.numcontacli = numcontacli;
	}

	@Column(name = "AGENCIACLI", length = 9)
	public String getAgenciacli() {
		return this.agenciacli;
	}

	public void setAgenciacli(String agenciacli) {
		this.agenciacli = agenciacli;
	}

	@Column(name = "IDENTCLI", nullable = false, length = 14)
	public String getIdentcli() {
		return this.identcli;
	}

	public void setIdentcli(String identcli) {
		this.identcli = identcli;
	}

	@Column(name = "STIPOFEBRABAN", nullable = false, length = 2)
	public String getStipofebraban() {
		return this.stipofebraban;
	}

	public void setStipofebraban(String stipofebraban) {
		this.stipofebraban = stipofebraban;
	}

	@Column(name = "TIPOREMCLI", nullable = false, length = 1)
	public char getTiporemcli() {
		return this.tiporemcli;
	}

	public void setTiporemcli(char tiporemcli) {
		this.tiporemcli = tiporemcli;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTINS", nullable = false, length = 10)
	public Date getDtins() {
		return this.dtins;
	}

	public void setDtins(Date dtins) {
		this.dtins = dtins;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HINS", nullable = false, length = 8)
	public Date getHins() {
		return this.hins;
	}

	public void setHins(Date hins) {
		this.hins = hins;
	}

	@Column(name = "IDUSUINS", nullable = false, length = 8)
	public String getIdusuins() {
		return this.idusuins;
	}

	public void setIdusuins(String idusuins) {
		this.idusuins = idusuins;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTALT", length = 10)
	public Date getDtalt() {
		return this.dtalt;
	}

	public void setDtalt(Date dtalt) {
		this.dtalt = dtalt;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HALT", length = 8)
	public Date getHalt() {
		return this.halt;
	}

	public void setHalt(Date halt) {
		this.halt = halt;
	}

	@Column(name = "IDUSUALT", length = 8)
	public String getIdusualt() {
		return this.idusualt;
	}

	public void setIdusualt(String idusualt) {
		this.idusualt = idusualt;
	}

}

package org.freedom.persist.entity;

// Generated 31/05/2013 12:00:37 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Eqtiporecmerc generated by hbm2java
 */
@Entity
@Table(name = "EQTIPORECMERC")
public class Eqtiporecmerc implements java.io.Serializable {

	private EqtiporecmercId id;
	private Eqproduto eqproduto;
	private Sgfilial sgfilial;
	private String desctiporecmerc;
	private String tiporecmerc;
	private Integer codemptc;
	private Short codfilialtc;
	private Integer codtipomovcp;
	private Date dtins;
	private Date hins;
	private String idusuins;
	private Date dtalt;
	private Date halt;
	private String idusualt;
	private Set<Sgprefere8> sgprefere8sForSgpref8fkeqtiporecmerc = new HashSet<Sgprefere8>(
			0);
	private Set<Eqprocrecmerc> eqprocrecmercs = new HashSet<Eqprocrecmerc>(0);
	private Set<Eqrecmerc> eqrecmercs = new HashSet<Eqrecmerc>(0);
	private Set<Sgprefere8> sgprefere8sForSgpref8fkeqtiporecmercos = new HashSet<Sgprefere8>(
			0);
	private Set<Sgprefere8> sgprefere8sForSgpref8fkeqtiporecmerccm = new HashSet<Sgprefere8>(
			0);

	public Eqtiporecmerc() {
	}

	public Eqtiporecmerc(EqtiporecmercId id, Sgfilial sgfilial,
			String tiporecmerc, Date dtins, Date hins, String idusuins) {
		this.id = id;
		this.sgfilial = sgfilial;
		this.tiporecmerc = tiporecmerc;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
	}

	public Eqtiporecmerc(EqtiporecmercId id, Eqproduto eqproduto,
			Sgfilial sgfilial, String desctiporecmerc, String tiporecmerc,
			Integer codemptc, Short codfilialtc, Integer codtipomovcp,
			Date dtins, Date hins, String idusuins, Date dtalt, Date halt,
			String idusualt,
			Set<Sgprefere8> sgprefere8sForSgpref8fkeqtiporecmerc,
			Set<Eqprocrecmerc> eqprocrecmercs, Set<Eqrecmerc> eqrecmercs,
			Set<Sgprefere8> sgprefere8sForSgpref8fkeqtiporecmercos,
			Set<Sgprefere8> sgprefere8sForSgpref8fkeqtiporecmerccm) {
		this.id = id;
		this.eqproduto = eqproduto;
		this.sgfilial = sgfilial;
		this.desctiporecmerc = desctiporecmerc;
		this.tiporecmerc = tiporecmerc;
		this.codemptc = codemptc;
		this.codfilialtc = codfilialtc;
		this.codtipomovcp = codtipomovcp;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
		this.dtalt = dtalt;
		this.halt = halt;
		this.idusualt = idusualt;
		this.sgprefere8sForSgpref8fkeqtiporecmerc = sgprefere8sForSgpref8fkeqtiporecmerc;
		this.eqprocrecmercs = eqprocrecmercs;
		this.eqrecmercs = eqrecmercs;
		this.sgprefere8sForSgpref8fkeqtiporecmercos = sgprefere8sForSgpref8fkeqtiporecmercos;
		this.sgprefere8sForSgpref8fkeqtiporecmerccm = sgprefere8sForSgpref8fkeqtiporecmerccm;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "codtiporecmerc", column = @Column(name = "CODTIPORECMERC", nullable = false)),
			@AttributeOverride(name = "codfilial", column = @Column(name = "CODFILIAL", nullable = false)),
			@AttributeOverride(name = "codemp", column = @Column(name = "CODEMP", nullable = false)) })
	public EqtiporecmercId getId() {
		return this.id;
	}

	public void setId(EqtiporecmercId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODPROD", referencedColumnName = "CODPROD"),
			@JoinColumn(name = "CODFILIALPD", referencedColumnName = "CODFILIAL"),
			@JoinColumn(name = "CODEMPPD", referencedColumnName = "CODEMP") })
	public Eqproduto getEqproduto() {
		return this.eqproduto;
	}

	public void setEqproduto(Eqproduto eqproduto) {
		this.eqproduto = eqproduto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODFILIAL", referencedColumnName = "CODFILIAL", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMP", referencedColumnName = "CODEMP", nullable = false, insertable = false, updatable = false) })
	public Sgfilial getSgfilial() {
		return this.sgfilial;
	}

	public void setSgfilial(Sgfilial sgfilial) {
		this.sgfilial = sgfilial;
	}

	@Column(name = "DESCTIPORECMERC", length = 40)
	public String getDesctiporecmerc() {
		return this.desctiporecmerc;
	}

	public void setDesctiporecmerc(String desctiporecmerc) {
		this.desctiporecmerc = desctiporecmerc;
	}

	@Column(name = "TIPORECMERC", nullable = false, length = 2)
	public String getTiporecmerc() {
		return this.tiporecmerc;
	}

	public void setTiporecmerc(String tiporecmerc) {
		this.tiporecmerc = tiporecmerc;
	}

	@Column(name = "CODEMPTC")
	public Integer getCodemptc() {
		return this.codemptc;
	}

	public void setCodemptc(Integer codemptc) {
		this.codemptc = codemptc;
	}

	@Column(name = "CODFILIALTC")
	public Short getCodfilialtc() {
		return this.codfilialtc;
	}

	public void setCodfilialtc(Short codfilialtc) {
		this.codfilialtc = codfilialtc;
	}

	@Column(name = "CODTIPOMOVCP")
	public Integer getCodtipomovcp() {
		return this.codtipomovcp;
	}

	public void setCodtipomovcp(Integer codtipomovcp) {
		this.codtipomovcp = codtipomovcp;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTINS", nullable = false, length = 10)
	public Date getDtins() {
		return this.dtins;
	}

	public void setDtins(Date dtins) {
		this.dtins = dtins;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HINS", nullable = false, length = 8)
	public Date getHins() {
		return this.hins;
	}

	public void setHins(Date hins) {
		this.hins = hins;
	}

	@Column(name = "IDUSUINS", nullable = false, length = 8)
	public String getIdusuins() {
		return this.idusuins;
	}

	public void setIdusuins(String idusuins) {
		this.idusuins = idusuins;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTALT", length = 10)
	public Date getDtalt() {
		return this.dtalt;
	}

	public void setDtalt(Date dtalt) {
		this.dtalt = dtalt;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HALT", length = 8)
	public Date getHalt() {
		return this.halt;
	}

	public void setHalt(Date halt) {
		this.halt = halt;
	}

	@Column(name = "IDUSUALT", length = 8)
	public String getIdusualt() {
		return this.idusualt;
	}

	public void setIdusualt(String idusualt) {
		this.idusualt = idusualt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqtiporecmercBySgpref8fkeqtiporecmerc")
	public Set<Sgprefere8> getSgprefere8sForSgpref8fkeqtiporecmerc() {
		return this.sgprefere8sForSgpref8fkeqtiporecmerc;
	}

	public void setSgprefere8sForSgpref8fkeqtiporecmerc(
			Set<Sgprefere8> sgprefere8sForSgpref8fkeqtiporecmerc) {
		this.sgprefere8sForSgpref8fkeqtiporecmerc = sgprefere8sForSgpref8fkeqtiporecmerc;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqtiporecmerc")
	public Set<Eqprocrecmerc> getEqprocrecmercs() {
		return this.eqprocrecmercs;
	}

	public void setEqprocrecmercs(Set<Eqprocrecmerc> eqprocrecmercs) {
		this.eqprocrecmercs = eqprocrecmercs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqtiporecmerc")
	public Set<Eqrecmerc> getEqrecmercs() {
		return this.eqrecmercs;
	}

	public void setEqrecmercs(Set<Eqrecmerc> eqrecmercs) {
		this.eqrecmercs = eqrecmercs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqtiporecmercBySgpref8fkeqtiporecmercos")
	public Set<Sgprefere8> getSgprefere8sForSgpref8fkeqtiporecmercos() {
		return this.sgprefere8sForSgpref8fkeqtiporecmercos;
	}

	public void setSgprefere8sForSgpref8fkeqtiporecmercos(
			Set<Sgprefere8> sgprefere8sForSgpref8fkeqtiporecmercos) {
		this.sgprefere8sForSgpref8fkeqtiporecmercos = sgprefere8sForSgpref8fkeqtiporecmercos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqtiporecmercBySgpref8fkeqtiporecmerccm")
	public Set<Sgprefere8> getSgprefere8sForSgpref8fkeqtiporecmerccm() {
		return this.sgprefere8sForSgpref8fkeqtiporecmerccm;
	}

	public void setSgprefere8sForSgpref8fkeqtiporecmerccm(
			Set<Sgprefere8> sgprefere8sForSgpref8fkeqtiporecmerccm) {
		this.sgprefere8sForSgpref8fkeqtiporecmerccm = sgprefere8sForSgpref8fkeqtiporecmerccm;
	}

}

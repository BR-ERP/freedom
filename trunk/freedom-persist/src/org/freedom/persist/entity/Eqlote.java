package org.freedom.persist.entity;

// Generated 30/01/2013 08:30:43 by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Eqlote generated by hbm2java
 */
@Entity
@Table(name = "EQLOTE")
public class Eqlote implements java.io.Serializable {

	private EqloteId id;
	private Sgfilial sgfilial;
	private Eqproduto eqproduto;
	private Date venctolote;
	private BigDecimal sldlote;
	private BigDecimal sldreslote;
	private BigDecimal sldconsiglote;
	private BigDecimal sldliqlote;
	private BigDecimal qtdprodlote;
	private Date dinilote;
	private short diasavisolote;
	private Date dtins;
	private Date hins;
	private String idusuins;
	private Date dtalt;
	private Date halt;
	private String idusualt;
	private Set<Eqsaldolote> eqsaldolotes = new HashSet<Eqsaldolote>(0);
	private Set<Ppop> ppops = new HashSet<Ppop>(0);
	private Set<Eqitrma> eqitrmas = new HashSet<Eqitrma>(0);
	private Set<Cpitcompra> cpitcompras = new HashSet<Cpitcompra>(0);
	private Set<Eqmovprod> eqmovprods = new HashSet<Eqmovprod>(0);
	private Set<Ppopsubprod> ppopsubprods = new HashSet<Ppopsubprod>(0);
	private Set<Eqinvprod> eqinvprods = new HashSet<Eqinvprod>(0);
	private Set<Vditorcamento> vditorcamentos = new HashSet<Vditorcamento>(0);
	private Set<Ppitop> ppitops = new HashSet<Ppitop>(0);
	private Set<Vditvenda> vditvendas = new HashSet<Vditvenda>(0);

	public Eqlote() {
	}

	public Eqlote(EqloteId id, Sgfilial sgfilial, Eqproduto eqproduto,
			Date venctolote, short diasavisolote, Date dtins, Date hins,
			String idusuins) {
		this.id = id;
		this.sgfilial = sgfilial;
		this.eqproduto = eqproduto;
		this.venctolote = venctolote;
		this.diasavisolote = diasavisolote;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
	}

	public Eqlote(EqloteId id, Sgfilial sgfilial, Eqproduto eqproduto,
			Date venctolote, BigDecimal sldlote, BigDecimal sldreslote,
			BigDecimal sldconsiglote, BigDecimal sldliqlote,
			BigDecimal qtdprodlote, Date dinilote, short diasavisolote,
			Date dtins, Date hins, String idusuins, Date dtalt, Date halt,
			String idusualt, Set<Eqsaldolote> eqsaldolotes, Set<Ppop> ppops,
			Set<Eqitrma> eqitrmas, Set<Cpitcompra> cpitcompras,
			Set<Eqmovprod> eqmovprods, Set<Ppopsubprod> ppopsubprods,
			Set<Eqinvprod> eqinvprods, Set<Vditorcamento> vditorcamentos,
			Set<Ppitop> ppitops, Set<Vditvenda> vditvendas) {
		this.id = id;
		this.sgfilial = sgfilial;
		this.eqproduto = eqproduto;
		this.venctolote = venctolote;
		this.sldlote = sldlote;
		this.sldreslote = sldreslote;
		this.sldconsiglote = sldconsiglote;
		this.sldliqlote = sldliqlote;
		this.qtdprodlote = qtdprodlote;
		this.dinilote = dinilote;
		this.diasavisolote = diasavisolote;
		this.dtins = dtins;
		this.hins = hins;
		this.idusuins = idusuins;
		this.dtalt = dtalt;
		this.halt = halt;
		this.idusualt = idusualt;
		this.eqsaldolotes = eqsaldolotes;
		this.ppops = ppops;
		this.eqitrmas = eqitrmas;
		this.cpitcompras = cpitcompras;
		this.eqmovprods = eqmovprods;
		this.ppopsubprods = ppopsubprods;
		this.eqinvprods = eqinvprods;
		this.vditorcamentos = vditorcamentos;
		this.ppitops = ppitops;
		this.vditvendas = vditvendas;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "codlote", column = @Column(name = "CODLOTE", nullable = false, length = 20)),
			@AttributeOverride(name = "codprod", column = @Column(name = "CODPROD", nullable = false)),
			@AttributeOverride(name = "codfilial", column = @Column(name = "CODFILIAL", nullable = false)),
			@AttributeOverride(name = "codemp", column = @Column(name = "CODEMP", nullable = false)) })
	public EqloteId getId() {
		return this.id;
	}

	public void setId(EqloteId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODFILIAL", referencedColumnName = "CODFILIAL", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMP", referencedColumnName = "CODEMP", nullable = false, insertable = false, updatable = false) })
	public Sgfilial getSgfilial() {
		return this.sgfilial;
	}

	public void setSgfilial(Sgfilial sgfilial) {
		this.sgfilial = sgfilial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CODPROD", referencedColumnName = "CODPROD", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODFILIAL", referencedColumnName = "CODFILIAL", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CODEMP", referencedColumnName = "CODEMP", nullable = false, insertable = false, updatable = false) })
	public Eqproduto getEqproduto() {
		return this.eqproduto;
	}

	public void setEqproduto(Eqproduto eqproduto) {
		this.eqproduto = eqproduto;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "VENCTOLOTE", nullable = false, length = 10)
	public Date getVenctolote() {
		return this.venctolote;
	}

	public void setVenctolote(Date venctolote) {
		this.venctolote = venctolote;
	}

	@Column(name = "SLDLOTE", precision = 15, scale = 5)
	public BigDecimal getSldlote() {
		return this.sldlote;
	}

	public void setSldlote(BigDecimal sldlote) {
		this.sldlote = sldlote;
	}

	@Column(name = "SLDRESLOTE", precision = 15, scale = 5)
	public BigDecimal getSldreslote() {
		return this.sldreslote;
	}

	public void setSldreslote(BigDecimal sldreslote) {
		this.sldreslote = sldreslote;
	}

	@Column(name = "SLDCONSIGLOTE", precision = 15, scale = 5)
	public BigDecimal getSldconsiglote() {
		return this.sldconsiglote;
	}

	public void setSldconsiglote(BigDecimal sldconsiglote) {
		this.sldconsiglote = sldconsiglote;
	}

	@Column(name = "SLDLIQLOTE", precision = 15, scale = 5)
	public BigDecimal getSldliqlote() {
		return this.sldliqlote;
	}

	public void setSldliqlote(BigDecimal sldliqlote) {
		this.sldliqlote = sldliqlote;
	}

	@Column(name = "QTDPRODLOTE", precision = 15, scale = 5)
	public BigDecimal getQtdprodlote() {
		return this.qtdprodlote;
	}

	public void setQtdprodlote(BigDecimal qtdprodlote) {
		this.qtdprodlote = qtdprodlote;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DINILOTE", length = 10)
	public Date getDinilote() {
		return this.dinilote;
	}

	public void setDinilote(Date dinilote) {
		this.dinilote = dinilote;
	}

	@Column(name = "DIASAVISOLOTE", nullable = false)
	public short getDiasavisolote() {
		return this.diasavisolote;
	}

	public void setDiasavisolote(short diasavisolote) {
		this.diasavisolote = diasavisolote;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTINS", nullable = false, length = 10)
	public Date getDtins() {
		return this.dtins;
	}

	public void setDtins(Date dtins) {
		this.dtins = dtins;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HINS", nullable = false, length = 8)
	public Date getHins() {
		return this.hins;
	}

	public void setHins(Date hins) {
		this.hins = hins;
	}

	@Column(name = "IDUSUINS", nullable = false, length = 8)
	public String getIdusuins() {
		return this.idusuins;
	}

	public void setIdusuins(String idusuins) {
		this.idusuins = idusuins;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTALT", length = 10)
	public Date getDtalt() {
		return this.dtalt;
	}

	public void setDtalt(Date dtalt) {
		this.dtalt = dtalt;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "HALT", length = 8)
	public Date getHalt() {
		return this.halt;
	}

	public void setHalt(Date halt) {
		this.halt = halt;
	}

	@Column(name = "IDUSUALT", length = 8)
	public String getIdusualt() {
		return this.idusualt;
	}

	public void setIdusualt(String idusualt) {
		this.idusualt = idusualt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqlote")
	public Set<Eqsaldolote> getEqsaldolotes() {
		return this.eqsaldolotes;
	}

	public void setEqsaldolotes(Set<Eqsaldolote> eqsaldolotes) {
		this.eqsaldolotes = eqsaldolotes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqlote")
	public Set<Ppop> getPpops() {
		return this.ppops;
	}

	public void setPpops(Set<Ppop> ppops) {
		this.ppops = ppops;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqlote")
	public Set<Eqitrma> getEqitrmas() {
		return this.eqitrmas;
	}

	public void setEqitrmas(Set<Eqitrma> eqitrmas) {
		this.eqitrmas = eqitrmas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqlote")
	public Set<Cpitcompra> getCpitcompras() {
		return this.cpitcompras;
	}

	public void setCpitcompras(Set<Cpitcompra> cpitcompras) {
		this.cpitcompras = cpitcompras;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqlote")
	public Set<Eqmovprod> getEqmovprods() {
		return this.eqmovprods;
	}

	public void setEqmovprods(Set<Eqmovprod> eqmovprods) {
		this.eqmovprods = eqmovprods;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqlote")
	public Set<Ppopsubprod> getPpopsubprods() {
		return this.ppopsubprods;
	}

	public void setPpopsubprods(Set<Ppopsubprod> ppopsubprods) {
		this.ppopsubprods = ppopsubprods;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqlote")
	public Set<Eqinvprod> getEqinvprods() {
		return this.eqinvprods;
	}

	public void setEqinvprods(Set<Eqinvprod> eqinvprods) {
		this.eqinvprods = eqinvprods;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqlote")
	public Set<Vditorcamento> getVditorcamentos() {
		return this.vditorcamentos;
	}

	public void setVditorcamentos(Set<Vditorcamento> vditorcamentos) {
		this.vditorcamentos = vditorcamentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqlote")
	public Set<Ppitop> getPpitops() {
		return this.ppitops;
	}

	public void setPpitops(Set<Ppitop> ppitops) {
		this.ppitops = ppitops;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eqlote")
	public Set<Vditvenda> getVditvendas() {
		return this.vditvendas;
	}

	public void setVditvendas(Set<Vditvenda> vditvendas) {
		this.vditvendas = vditvendas;
	}

}
